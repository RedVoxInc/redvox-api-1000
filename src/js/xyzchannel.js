/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.XyzChannel');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.SummaryStatistics');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XyzChannel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XyzChannel.repeatedFields_, null);
};
goog.inherits(proto.XyzChannel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.XyzChannel.displayName = 'proto.XyzChannel';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XyzChannel.repeatedFields_ = [3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XyzChannel.prototype.toObject = function(opt_includeInstance) {
  return proto.XyzChannel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XyzChannel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XyzChannel.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meanSampleRateHz: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    sampleTsUsList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
    xSamplesList: jspb.Message.getRepeatedFloatingPointField(msg, 4),
    ySamplesList: jspb.Message.getRepeatedFloatingPointField(msg, 5),
    zSamplesList: jspb.Message.getRepeatedFloatingPointField(msg, 6),
    sampleRateStatistics: (f = msg.getSampleRateStatistics()) && proto.SummaryStatistics.toObject(includeInstance, f),
    xSampleStatistics: (f = msg.getXSampleStatistics()) && proto.SummaryStatistics.toObject(includeInstance, f),
    ySampleStatistics: (f = msg.getYSampleStatistics()) && proto.SummaryStatistics.toObject(includeInstance, f),
    zSampleStatistics: (f = msg.getZSampleStatistics()) && proto.SummaryStatistics.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XyzChannel}
 */
proto.XyzChannel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XyzChannel;
  return proto.XyzChannel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XyzChannel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XyzChannel}
 */
proto.XyzChannel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeanSampleRateHz(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setSampleTsUsList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setXSamplesList(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setYSamplesList(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setZSamplesList(value);
      break;
    case 7:
      var value = new proto.SummaryStatistics;
      reader.readMessage(value,proto.SummaryStatistics.deserializeBinaryFromReader);
      msg.setSampleRateStatistics(value);
      break;
    case 8:
      var value = new proto.SummaryStatistics;
      reader.readMessage(value,proto.SummaryStatistics.deserializeBinaryFromReader);
      msg.setXSampleStatistics(value);
      break;
    case 9:
      var value = new proto.SummaryStatistics;
      reader.readMessage(value,proto.SummaryStatistics.deserializeBinaryFromReader);
      msg.setYSampleStatistics(value);
      break;
    case 10:
      var value = new proto.SummaryStatistics;
      reader.readMessage(value,proto.SummaryStatistics.deserializeBinaryFromReader);
      msg.setZSampleStatistics(value);
      break;
    case 11:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XyzChannel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XyzChannel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XyzChannel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XyzChannel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeanSampleRateHz();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSampleTsUsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getXSamplesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      4,
      f
    );
  }
  f = message.getYSamplesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      5,
      f
    );
  }
  f = message.getZSamplesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      6,
      f
    );
  }
  f = message.getSampleRateStatistics();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getXSampleStatistics();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getYSampleStatistics();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getZSampleStatistics();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.XyzChannel.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.XyzChannel.prototype.setSensorDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double mean_sample_rate_hz = 2;
 * @return {number}
 */
proto.XyzChannel.prototype.getMeanSampleRateHz = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.XyzChannel.prototype.setMeanSampleRateHz = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated double sample_ts_us = 3;
 * @return {!Array<number>}
 */
proto.XyzChannel.prototype.getSampleTsUsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {!Array<number>} value */
proto.XyzChannel.prototype.setSampleTsUsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.XyzChannel.prototype.addSampleTsUs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.XyzChannel.prototype.clearSampleTsUsList = function() {
  this.setSampleTsUsList([]);
};


/**
 * repeated double x_samples = 4;
 * @return {!Array<number>}
 */
proto.XyzChannel.prototype.getXSamplesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/** @param {!Array<number>} value */
proto.XyzChannel.prototype.setXSamplesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.XyzChannel.prototype.addXSamples = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.XyzChannel.prototype.clearXSamplesList = function() {
  this.setXSamplesList([]);
};


/**
 * repeated double y_samples = 5;
 * @return {!Array<number>}
 */
proto.XyzChannel.prototype.getYSamplesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/** @param {!Array<number>} value */
proto.XyzChannel.prototype.setYSamplesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.XyzChannel.prototype.addYSamples = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.XyzChannel.prototype.clearYSamplesList = function() {
  this.setYSamplesList([]);
};


/**
 * repeated double z_samples = 6;
 * @return {!Array<number>}
 */
proto.XyzChannel.prototype.getZSamplesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/** @param {!Array<number>} value */
proto.XyzChannel.prototype.setZSamplesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.XyzChannel.prototype.addZSamples = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.XyzChannel.prototype.clearZSamplesList = function() {
  this.setZSamplesList([]);
};


/**
 * optional SummaryStatistics sample_rate_statistics = 7;
 * @return {?proto.SummaryStatistics}
 */
proto.XyzChannel.prototype.getSampleRateStatistics = function() {
  return /** @type{?proto.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.SummaryStatistics, 7));
};


/** @param {?proto.SummaryStatistics|undefined} value */
proto.XyzChannel.prototype.setSampleRateStatistics = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.XyzChannel.prototype.clearSampleRateStatistics = function() {
  this.setSampleRateStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.XyzChannel.prototype.hasSampleRateStatistics = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SummaryStatistics x_sample_statistics = 8;
 * @return {?proto.SummaryStatistics}
 */
proto.XyzChannel.prototype.getXSampleStatistics = function() {
  return /** @type{?proto.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.SummaryStatistics, 8));
};


/** @param {?proto.SummaryStatistics|undefined} value */
proto.XyzChannel.prototype.setXSampleStatistics = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.XyzChannel.prototype.clearXSampleStatistics = function() {
  this.setXSampleStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.XyzChannel.prototype.hasXSampleStatistics = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional SummaryStatistics y_sample_statistics = 9;
 * @return {?proto.SummaryStatistics}
 */
proto.XyzChannel.prototype.getYSampleStatistics = function() {
  return /** @type{?proto.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.SummaryStatistics, 9));
};


/** @param {?proto.SummaryStatistics|undefined} value */
proto.XyzChannel.prototype.setYSampleStatistics = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.XyzChannel.prototype.clearYSampleStatistics = function() {
  this.setYSampleStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.XyzChannel.prototype.hasYSampleStatistics = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SummaryStatistics z_sample_statistics = 10;
 * @return {?proto.SummaryStatistics}
 */
proto.XyzChannel.prototype.getZSampleStatistics = function() {
  return /** @type{?proto.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.SummaryStatistics, 10));
};


/** @param {?proto.SummaryStatistics|undefined} value */
proto.XyzChannel.prototype.setZSampleStatistics = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.XyzChannel.prototype.clearZSampleStatistics = function() {
  this.setZSampleStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.XyzChannel.prototype.hasZSampleStatistics = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * map<string, string> metadata = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.XyzChannel.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


proto.XyzChannel.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
};


