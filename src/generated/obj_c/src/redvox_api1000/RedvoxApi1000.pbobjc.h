// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/redvox_api1000/redvox_api_1000.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class RedvoxPacket1000_DeviceInformation;
@class RedvoxPacket1000_DeviceInformation_AppSettings;
@class RedvoxPacket1000_PacketInformation;
@class RedvoxPacket1000_SensorChannels;
@class RedvoxPacket1000_SensorChannels_ImageChannel;
@class RedvoxPacket1000_SensorChannels_LocationChannel;
@class RedvoxPacket1000_SensorChannels_MicrophoneChannel;
@class RedvoxPacket1000_SensorChannels_SingleChannel;
@class RedvoxPacket1000_SensorChannels_XyzChannel;
@class RedvoxPacket1000_SummaryStatistics;
@class RedvoxPacket1000_TimingInformation;
@class RedvoxPacket1000_TimingInformation_SynchExchange;
@class RedvoxPacket1000_UserInformation;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RedvoxPacket1000_DeviceInformation_NetworkType

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_NetworkType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RedvoxPacket1000_DeviceInformation_NetworkType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RedvoxPacket1000_DeviceInformation_NetworkType_Wifi = 0,
  RedvoxPacket1000_DeviceInformation_NetworkType_Cellular = 1,
  RedvoxPacket1000_DeviceInformation_NetworkType_None = 2,
};

GPBEnumDescriptor *RedvoxPacket1000_DeviceInformation_NetworkType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RedvoxPacket1000_DeviceInformation_NetworkType_IsValidValue(int32_t value);

#pragma mark - Enum RedvoxPacket1000_DeviceInformation_OsType

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_OsType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RedvoxPacket1000_DeviceInformation_OsType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RedvoxPacket1000_DeviceInformation_OsType_Android = 0,
  RedvoxPacket1000_DeviceInformation_OsType_Ios = 1,
  RedvoxPacket1000_DeviceInformation_OsType_Linux = 2,
  RedvoxPacket1000_DeviceInformation_OsType_Windows = 3,
};

GPBEnumDescriptor *RedvoxPacket1000_DeviceInformation_OsType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RedvoxPacket1000_DeviceInformation_OsType_IsValidValue(int32_t value);

#pragma mark - Enum RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_Hz80 = 0,
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_Hz800 = 1,
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_Hz8000 = 2,
};

GPBEnumDescriptor *RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_IsValidValue(int32_t value);

#pragma mark - Enum RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_Infrasound = 0,
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_LowAudio = 1,
  RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_Audio = 2,
};

GPBEnumDescriptor *RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_IsValidValue(int32_t value);

#pragma mark - Enum RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_Barometer = 0,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_Accelerometer = 1,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_AccelerometerFast = 2,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_Magnetometer = 3,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_MagnetometerFast = 4,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_Gyroscope = 5,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_GyroscopeFast = 6,
  RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_Luminosity = 7,
};

GPBEnumDescriptor *RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor_IsValidValue(int32_t value);

#pragma mark - Enum RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_None = 0,
  RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_User = 1,
  RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_Gps = 2,
  RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_Network = 3,
};

GPBEnumDescriptor *RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_IsValidValue(int32_t value);

#pragma mark - Enum AcquisitionResponse_ResponseType

/** Server response types */
typedef GPB_ENUM(AcquisitionResponse_ResponseType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AcquisitionResponse_ResponseType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** No issues with packet */
  AcquisitionResponse_ResponseType_Ok = 0,

  /** An authentication error has occurred */
  AcquisitionResponse_ResponseType_AuthError = 1,

  /** An error with the data decoding or data quality */
  AcquisitionResponse_ResponseType_DataError = 2,

  /** Any other errors */
  AcquisitionResponse_ResponseType_OtherError = 3,
};

GPBEnumDescriptor *AcquisitionResponse_ResponseType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AcquisitionResponse_ResponseType_IsValidValue(int32_t value);

#pragma mark - RedvoxApi1000Root

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RedvoxApi1000Root : GPBRootObject
@end

#pragma mark - RedvoxPacket1000

typedef GPB_ENUM(RedvoxPacket1000_FieldNumber) {
  RedvoxPacket1000_FieldNumber_Api = 1,
  RedvoxPacket1000_FieldNumber_UserInformation = 2,
  RedvoxPacket1000_FieldNumber_DeviceInformation = 3,
  RedvoxPacket1000_FieldNumber_PacketInformation = 4,
  RedvoxPacket1000_FieldNumber_TimingInformation = 5,
  RedvoxPacket1000_FieldNumber_SensorChannels = 6,
  RedvoxPacket1000_FieldNumber_Metadata = 7,
};

@interface RedvoxPacket1000 : GPBMessage

/** Top level packet fields */
@property(nonatomic, readwrite) double api;

/** User information */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_UserInformation *userInformation;
/** Test to see if @c userInformation has been set. */
@property(nonatomic, readwrite) BOOL hasUserInformation;

/** Device information */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_DeviceInformation *deviceInformation;
/** Test to see if @c deviceInformation has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceInformation;

/** Packet information */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_PacketInformation *packetInformation;
/** Test to see if @c packetInformation has been set. */
@property(nonatomic, readwrite) BOOL hasPacketInformation;

/** Timing information */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_TimingInformation *timingInformation;
/** Test to see if @c timingInformation has been set. */
@property(nonatomic, readwrite) BOOL hasTimingInformation;

/** Sensor channels */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels *sensorChannels;
/** Test to see if @c sensorChannels has been set. */
@property(nonatomic, readwrite) BOOL hasSensorChannels;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_UserInformation

typedef GPB_ENUM(RedvoxPacket1000_UserInformation_FieldNumber) {
  RedvoxPacket1000_UserInformation_FieldNumber_AuthEmail = 1,
  RedvoxPacket1000_UserInformation_FieldNumber_AuthToken = 2,
  RedvoxPacket1000_UserInformation_FieldNumber_FirebaseToken = 3,
  RedvoxPacket1000_UserInformation_FieldNumber_Metadata = 4,
};

@interface RedvoxPacket1000_UserInformation : GPBMessage

/** The e-mail the user used to authenticate with */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authEmail;

/** The JWT token used for authentication */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authToken;

/** The assigned firebase token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *firebaseToken;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_DeviceInformation

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_FieldNumber) {
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceId = 1,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceUuid = 2,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceMake = 3,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceModel = 4,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceOs = 5,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceOsVersion = 6,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceAppVersion = 7,
  RedvoxPacket1000_DeviceInformation_FieldNumber_AppSettings = 8,
  RedvoxPacket1000_DeviceInformation_FieldNumber_NetworkType = 9,
  RedvoxPacket1000_DeviceInformation_FieldNumber_NetworkStrengthDb = 10,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceTempC = 11,
  RedvoxPacket1000_DeviceInformation_FieldNumber_DeviceBatteryPercent = 12,
  RedvoxPacket1000_DeviceInformation_FieldNumber_AvailableRamBytes = 13,
  RedvoxPacket1000_DeviceInformation_FieldNumber_AvailableDiskBytes = 14,
  RedvoxPacket1000_DeviceInformation_FieldNumber_CpuUtilization = 15,
  RedvoxPacket1000_DeviceInformation_FieldNumber_Metadata = 16,
};

@interface RedvoxPacket1000_DeviceInformation : GPBMessage

/** The user selectable device id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** The app provided UUID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceUuid;

/** Make of the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceMake;

/** Model of the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;

/** OS of the device */
@property(nonatomic, readwrite) RedvoxPacket1000_DeviceInformation_OsType deviceOs;

/** OS version of the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceOsVersion;

/** App version on the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceAppVersion;

/** A copy of the App's settings */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_DeviceInformation_AppSettings *appSettings;
/** Test to see if @c appSettings has been set. */
@property(nonatomic, readwrite) BOOL hasAppSettings;

/** Type of network connection */
@property(nonatomic, readwrite) RedvoxPacket1000_DeviceInformation_NetworkType networkType;

/** A value representing the strength of the network connection */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *networkStrengthDb;
/** Test to see if @c networkStrengthDb has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkStrengthDb;

/** Temperature of the device in degrees centigrade */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *deviceTempC;
/** Test to see if @c deviceTempC has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceTempC;

/** Device battery level as a percentage between 0% and 100% */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *deviceBatteryPercent;
/** Test to see if @c deviceBatteryPercent has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceBatteryPercent;

/** Available RAM in bytes */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *availableRamBytes;
/** Test to see if @c availableRamBytes has been set. */
@property(nonatomic, readwrite) BOOL hasAvailableRamBytes;

/** Available disk space in bytes */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *availableDiskBytes;
/** Test to see if @c availableDiskBytes has been set. */
@property(nonatomic, readwrite) BOOL hasAvailableDiskBytes;

/** CPU utilization */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *cpuUtilization;
/** Test to see if @c cpuUtilization has been set. */
@property(nonatomic, readwrite) BOOL hasCpuUtilization;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

/**
 * Fetches the raw value of a @c RedvoxPacket1000_DeviceInformation's @c deviceOs property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RedvoxPacket1000_DeviceInformation_DeviceOs_RawValue(RedvoxPacket1000_DeviceInformation *message);
/**
 * Sets the raw value of an @c RedvoxPacket1000_DeviceInformation's @c deviceOs property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRedvoxPacket1000_DeviceInformation_DeviceOs_RawValue(RedvoxPacket1000_DeviceInformation *message, int32_t value);

/**
 * Fetches the raw value of a @c RedvoxPacket1000_DeviceInformation's @c networkType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RedvoxPacket1000_DeviceInformation_NetworkType_RawValue(RedvoxPacket1000_DeviceInformation *message);
/**
 * Sets the raw value of an @c RedvoxPacket1000_DeviceInformation's @c networkType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRedvoxPacket1000_DeviceInformation_NetworkType_RawValue(RedvoxPacket1000_DeviceInformation *message, int32_t value);

#pragma mark - RedvoxPacket1000_DeviceInformation_AppSettings

typedef GPB_ENUM(RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber) {
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_AudioSamplingRate = 1,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_AudioSourceTuning = 2,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_AdditionalInputSensorsArray = 3,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_AutomaticallyRecord = 4,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_LaunchAtPowerUp = 5,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_RedvoxId = 6,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_PushToServer = 7,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_PublishDataAsPrivate = 8,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_ScrambleVoiceData = 9,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_ProvideBackfill = 10,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_UseCustomTimeSyncServer = 11,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_TimeSyncServerURL = 12,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_UseCustomDataServer = 13,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_DataServerURL = 14,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_AutoDeleteDataFiles = 15,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_StorageSpaceAllowance = 16,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_UseSdCardForDataStorage = 17,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_UseLocationServices = 18,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_UseLatitude = 19,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_UseLongitude = 20,
  RedvoxPacket1000_DeviceInformation_AppSettings_FieldNumber_Metadata = 21,
};

@interface RedvoxPacket1000_DeviceInformation_AppSettings : GPBMessage

@property(nonatomic, readwrite) RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate audioSamplingRate;

@property(nonatomic, readwrite) RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning audioSourceTuning;

// |additionalInputSensorsArray| contains |RedvoxPacket1000_DeviceInformation_AppSettings_InputSensor|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *additionalInputSensorsArray;
/** The number of items in @c additionalInputSensorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger additionalInputSensorsArray_Count;

@property(nonatomic, readwrite) BOOL automaticallyRecord;

@property(nonatomic, readwrite) BOOL launchAtPowerUp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *redvoxId;

@property(nonatomic, readwrite) BOOL pushToServer;

@property(nonatomic, readwrite) BOOL publishDataAsPrivate;

@property(nonatomic, readwrite) BOOL scrambleVoiceData;

@property(nonatomic, readwrite) BOOL provideBackfill;

@property(nonatomic, readwrite) BOOL useCustomTimeSyncServer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *timeSyncServerURL;

@property(nonatomic, readwrite) BOOL useCustomDataServer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *dataServerURL;

@property(nonatomic, readwrite) BOOL autoDeleteDataFiles;

@property(nonatomic, readwrite) double storageSpaceAllowance;

@property(nonatomic, readwrite) BOOL useSdCardForDataStorage;

@property(nonatomic, readwrite) BOOL useLocationServices;

@property(nonatomic, readwrite) double useLatitude;

@property(nonatomic, readwrite) double useLongitude;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

/**
 * Fetches the raw value of a @c RedvoxPacket1000_DeviceInformation_AppSettings's @c audioSamplingRate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_RawValue(RedvoxPacket1000_DeviceInformation_AppSettings *message);
/**
 * Sets the raw value of an @c RedvoxPacket1000_DeviceInformation_AppSettings's @c audioSamplingRate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRedvoxPacket1000_DeviceInformation_AppSettings_AudioSamplingRate_RawValue(RedvoxPacket1000_DeviceInformation_AppSettings *message, int32_t value);

/**
 * Fetches the raw value of a @c RedvoxPacket1000_DeviceInformation_AppSettings's @c audioSourceTuning property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_RawValue(RedvoxPacket1000_DeviceInformation_AppSettings *message);
/**
 * Sets the raw value of an @c RedvoxPacket1000_DeviceInformation_AppSettings's @c audioSourceTuning property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRedvoxPacket1000_DeviceInformation_AppSettings_AudioSourceTuning_RawValue(RedvoxPacket1000_DeviceInformation_AppSettings *message, int32_t value);

#pragma mark - RedvoxPacket1000_PacketInformation

typedef GPB_ENUM(RedvoxPacket1000_PacketInformation_FieldNumber) {
  RedvoxPacket1000_PacketInformation_FieldNumber_IsBackfilled = 1,
  RedvoxPacket1000_PacketInformation_FieldNumber_IsPrivate = 2,
  RedvoxPacket1000_PacketInformation_FieldNumber_Metadata = 3,
};

@interface RedvoxPacket1000_PacketInformation : GPBMessage

/** Field for if this packet has been backfilled or not */
@property(nonatomic, readwrite) BOOL isBackfilled;

/** Field for if this packet is private to the user or not */
@property(nonatomic, readwrite) BOOL isPrivate;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_TimingInformation

typedef GPB_ENUM(RedvoxPacket1000_TimingInformation_FieldNumber) {
  RedvoxPacket1000_TimingInformation_FieldNumber_PacketStartTsUsWall = 1,
  RedvoxPacket1000_TimingInformation_FieldNumber_PacketStartTsUsMach = 2,
  RedvoxPacket1000_TimingInformation_FieldNumber_PacketEndTsUsWall = 3,
  RedvoxPacket1000_TimingInformation_FieldNumber_PacketEndTsUsMach = 4,
  RedvoxPacket1000_TimingInformation_FieldNumber_ServerAcquisitionArrivalTsUs = 5,
  RedvoxPacket1000_TimingInformation_FieldNumber_AppStartTsUsMach = 6,
  RedvoxPacket1000_TimingInformation_FieldNumber_SynchExchangesArray = 7,
  RedvoxPacket1000_TimingInformation_FieldNumber_BestLatencyUs = 8,
  RedvoxPacket1000_TimingInformation_FieldNumber_BestOffsetUs = 9,
  RedvoxPacket1000_TimingInformation_FieldNumber_Metadata = 10,
};

@interface RedvoxPacket1000_TimingInformation : GPBMessage

/** Start timestamp of the packet using the wall clock (corresponding to first microphone sample) */
@property(nonatomic, readwrite) double packetStartTsUsWall;

/** Start timestamp of the packet using machine time (corresponding to the first microphone sample) */
@property(nonatomic, readwrite) double packetStartTsUsMach;

/** End timestamp of the packet using the wall clock (corresponding to the last microphone sample) */
@property(nonatomic, readwrite) double packetEndTsUsWall;

/** End timestamp of the packet using machine time (corresponding to the last microphone sample) */
@property(nonatomic, readwrite) double packetEndTsUsMach;

/** Timestamp that the packet arrived at the acquisition server */
@property(nonatomic, readwrite) double serverAcquisitionArrivalTsUs;

/** The start of the app as machine time */
@property(nonatomic, readwrite) double appStartTsUsMach;

/** An array of synchronization params from the synch server */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RedvoxPacket1000_TimingInformation_SynchExchange*> *synchExchangesArray;
/** The number of items in @c synchExchangesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger synchExchangesArray_Count;

/** The best latency as determined from the synch params */
@property(nonatomic, readwrite) double bestLatencyUs;

/** The best offset as determined from the synch params */
@property(nonatomic, readwrite) double bestOffsetUs;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_TimingInformation_SynchExchange

typedef GPB_ENUM(RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber) {
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_A1 = 1,
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_A2 = 2,
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_A3 = 3,
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_B1 = 4,
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_B2 = 5,
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_B3 = 6,
  RedvoxPacket1000_TimingInformation_SynchExchange_FieldNumber_Metadata = 7,
};

@interface RedvoxPacket1000_TimingInformation_SynchExchange : GPBMessage

@property(nonatomic, readwrite) double a1;

@property(nonatomic, readwrite) double a2;

@property(nonatomic, readwrite) double a3;

@property(nonatomic, readwrite) double b1;

@property(nonatomic, readwrite) double b2;

@property(nonatomic, readwrite) double b3;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_SensorChannels

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_FieldNumber) {
  RedvoxPacket1000_SensorChannels_FieldNumber_MicrophoneChannel = 1,
  RedvoxPacket1000_SensorChannels_FieldNumber_BarometerChannel = 2,
  RedvoxPacket1000_SensorChannels_FieldNumber_LocationChannel = 3,
  RedvoxPacket1000_SensorChannels_FieldNumber_AccelerometerChannel = 4,
  RedvoxPacket1000_SensorChannels_FieldNumber_GyroscopeChannel = 5,
  RedvoxPacket1000_SensorChannels_FieldNumber_MagnetometerChannel = 6,
  RedvoxPacket1000_SensorChannels_FieldNumber_LightChannel = 7,
  RedvoxPacket1000_SensorChannels_FieldNumber_InfraredChannel = 8,
  RedvoxPacket1000_SensorChannels_FieldNumber_ImageChannel = 9,
  RedvoxPacket1000_SensorChannels_FieldNumber_Metadata = 10,
};

@interface RedvoxPacket1000_SensorChannels : GPBMessage

/** The microphone channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_MicrophoneChannel *microphoneChannel;
/** Test to see if @c microphoneChannel has been set. */
@property(nonatomic, readwrite) BOOL hasMicrophoneChannel;

/** The barometer channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_SingleChannel *barometerChannel;
/** Test to see if @c barometerChannel has been set. */
@property(nonatomic, readwrite) BOOL hasBarometerChannel;

/** The location channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_LocationChannel *locationChannel;
/** Test to see if @c locationChannel has been set. */
@property(nonatomic, readwrite) BOOL hasLocationChannel;

/** The accelerometer channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_XyzChannel *accelerometerChannel;
/** Test to see if @c accelerometerChannel has been set. */
@property(nonatomic, readwrite) BOOL hasAccelerometerChannel;

/** The gyroscope channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_XyzChannel *gyroscopeChannel;
/** Test to see if @c gyroscopeChannel has been set. */
@property(nonatomic, readwrite) BOOL hasGyroscopeChannel;

/** The magnetometer channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_XyzChannel *magnetometerChannel;
/** Test to see if @c magnetometerChannel has been set. */
@property(nonatomic, readwrite) BOOL hasMagnetometerChannel;

/** The light channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_SingleChannel *lightChannel;
/** Test to see if @c lightChannel has been set. */
@property(nonatomic, readwrite) BOOL hasLightChannel;

/** The infrared channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_SingleChannel *infraredChannel;
/** Test to see if @c infraredChannel has been set. */
@property(nonatomic, readwrite) BOOL hasInfraredChannel;

/** The image channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SensorChannels_ImageChannel *imageChannel;
/** Test to see if @c imageChannel has been set. */
@property(nonatomic, readwrite) BOOL hasImageChannel;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_SensorChannels_MicrophoneChannel

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber) {
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_SensorDescription = 1,
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_FirstSampleTsUs = 2,
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_SampleRateHz = 3,
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_IsScrambled = 4,
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_SamplesArray = 5,
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_SampleStatistics = 6,
  RedvoxPacket1000_SensorChannels_MicrophoneChannel_FieldNumber_Metadata = 7,
};

@interface RedvoxPacket1000_SensorChannels_MicrophoneChannel : GPBMessage

/** The name or description of the microphone sensor */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sensorDescription;

/** Timestamp of the first microphone sample */
@property(nonatomic, readwrite) double firstSampleTsUs;

/** Microphone sample rate in Hz */
@property(nonatomic, readwrite) double sampleRateHz;

/** If audio data has been scrambled to remove voice */
@property(nonatomic, readwrite) BOOL isScrambled;

/** List of microphone samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *samplesArray;
/** The number of items in @c samplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger samplesArray_Count;

/** Statistics for microphone samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *sampleStatistics;
/** Test to see if @c sampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSampleStatistics;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_SensorChannels_SingleChannel

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber) {
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_SensorDescription = 1,
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_MeanSampleRateHz = 2,
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_SampleTsUsArray = 3,
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_SamplesArray = 4,
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_SampleRateStatistics = 5,
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_SampleStatistics = 6,
  RedvoxPacket1000_SensorChannels_SingleChannel_FieldNumber_Metadata = 7,
};

@interface RedvoxPacket1000_SensorChannels_SingleChannel : GPBMessage

/** The name or description of the sensor */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sensorDescription;

/** The mean sample rate in Hz */
@property(nonatomic, readwrite) double meanSampleRateHz;

/** A list of timestamps, one for each sample */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *sampleTsUsArray;
/** The number of items in @c sampleTsUsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sampleTsUsArray_Count;

/** A list of samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *samplesArray;
/** The number of items in @c samplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger samplesArray_Count;

/** Statistics for sample timestamps */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *sampleRateStatistics;
/** Test to see if @c sampleRateStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSampleRateStatistics;

/** Statistics for samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *sampleStatistics;
/** Test to see if @c sampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSampleStatistics;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_SensorChannels_LocationChannel

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber) {
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_SensorDescription = 1,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_MeanSampleRateHz = 2,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_SampleTsUsArray = 3,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LatitudeSamplesArray = 4,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LongitudeSamplesArray = 5,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_AltitudeSamplesArray = 6,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_SpeedSamplesArray = 7,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_AccuracySamplesArray = 8,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LocationPermissionsGranted = 9,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LocationServicesRequested = 10,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LocationServicesEnabled = 11,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LocationProvider = 12,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_SampleRateStatistics = 13,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LatitudeSampleStatistics = 14,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_LongitudeSampleStatistics = 15,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_AltitudeSampleStatistics = 16,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_SpeedSampleStatistics = 17,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_AccuracySampleStatistics = 18,
  RedvoxPacket1000_SensorChannels_LocationChannel_FieldNumber_Metadata = 19,
};

@interface RedvoxPacket1000_SensorChannels_LocationChannel : GPBMessage

/** The name or description of the sensor */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sensorDescription;

/** The mean sample rate in Hz */
@property(nonatomic, readwrite) double meanSampleRateHz;

/** A list of timestamps, one for each sample */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *sampleTsUsArray;
/** The number of items in @c sampleTsUsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sampleTsUsArray_Count;

/** A list of latitude samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *latitudeSamplesArray;
/** The number of items in @c latitudeSamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger latitudeSamplesArray_Count;

/** A list of longitude samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *longitudeSamplesArray;
/** The number of items in @c longitudeSamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger longitudeSamplesArray_Count;

/** A list of altitude samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *altitudeSamplesArray;
/** The number of items in @c altitudeSamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger altitudeSamplesArray_Count;

/** A list of speed samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *speedSamplesArray;
/** The number of items in @c speedSamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger speedSamplesArray_Count;

/** A list of accuracy samples */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *accuracySamplesArray;
/** The number of items in @c accuracySamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accuracySamplesArray_Count;

/** Have location permissions been granted by the user? */
@property(nonatomic, readwrite) BOOL locationPermissionsGranted;

/** Has location services been requested by the user? */
@property(nonatomic, readwrite) BOOL locationServicesRequested;

/** Are location services enabled and working? */
@property(nonatomic, readwrite) BOOL locationServicesEnabled;

/** Location provider enumeration */
@property(nonatomic, readwrite) RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider locationProvider;

/** Statistics for sample timestamps */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *sampleRateStatistics;
/** Test to see if @c sampleRateStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSampleRateStatistics;

/** Statistics for latitude samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *latitudeSampleStatistics;
/** Test to see if @c latitudeSampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasLatitudeSampleStatistics;

/** Statistics for longitude samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *longitudeSampleStatistics;
/** Test to see if @c longitudeSampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasLongitudeSampleStatistics;

/** Statistics for altitude samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *altitudeSampleStatistics;
/** Test to see if @c altitudeSampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasAltitudeSampleStatistics;

/** Statistics for speed samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *speedSampleStatistics;
/** Test to see if @c speedSampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSpeedSampleStatistics;

/** Statistics for accuracy samples */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *accuracySampleStatistics;
/** Test to see if @c accuracySampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasAccuracySampleStatistics;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

/**
 * Fetches the raw value of a @c RedvoxPacket1000_SensorChannels_LocationChannel's @c locationProvider property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_RawValue(RedvoxPacket1000_SensorChannels_LocationChannel *message);
/**
 * Sets the raw value of an @c RedvoxPacket1000_SensorChannels_LocationChannel's @c locationProvider property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRedvoxPacket1000_SensorChannels_LocationChannel_LocationProvider_RawValue(RedvoxPacket1000_SensorChannels_LocationChannel *message, int32_t value);

#pragma mark - RedvoxPacket1000_SensorChannels_XyzChannel

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber) {
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_SensorDescription = 1,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_MeanSampleRateHz = 2,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_SampleTsUsArray = 3,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_XSamplesArray = 4,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_YSamplesArray = 5,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_ZSamplesArray = 6,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_SampleRateStatistics = 7,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_XSampleStatistics = 8,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_YSampleStatistics = 9,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_ZSampleStatistics = 10,
  RedvoxPacket1000_SensorChannels_XyzChannel_FieldNumber_Metadata = 11,
};

@interface RedvoxPacket1000_SensorChannels_XyzChannel : GPBMessage

/** The name or description of the sensor */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sensorDescription;

/** The mean sample rate in Hz */
@property(nonatomic, readwrite) double meanSampleRateHz;

/** A list of timestamps, one for each sample */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *sampleTsUsArray;
/** The number of items in @c sampleTsUsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sampleTsUsArray_Count;

/** A list of samples for the X-channel */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *xSamplesArray;
/** The number of items in @c xSamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger xSamplesArray_Count;

/** A list of samples for the Y-channel */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *ySamplesArray;
/** The number of items in @c ySamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ySamplesArray_Count;

/** A list of samples for the Z-channel */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *zSamplesArray;
/** The number of items in @c zSamplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger zSamplesArray_Count;

/** Statistics for sample timestamps */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *sampleRateStatistics;
/** Test to see if @c sampleRateStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSampleRateStatistics;

/** Statistics for X-channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *xSampleStatistics;
/** Test to see if @c xSampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasXSampleStatistics;

/** Statistics for Y-channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *ySampleStatistics;
/** Test to see if @c ySampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasYSampleStatistics;

/** Statistics for Z-channel */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *zSampleStatistics;
/** Test to see if @c zSampleStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasZSampleStatistics;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_SensorChannels_ImageChannel

typedef GPB_ENUM(RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber) {
  RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber_SensorDescription = 1,
  RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber_MeanSampleRateHz = 2,
  RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber_SampleTsUsArray = 3,
  RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber_SamplesArray = 4,
  RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber_SampleRateStatistics = 5,
  RedvoxPacket1000_SensorChannels_ImageChannel_FieldNumber_Metadata = 6,
};

@interface RedvoxPacket1000_SensorChannels_ImageChannel : GPBMessage

/** The name or description of the sensor */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sensorDescription;

/** The mean sample rate in Hz */
@property(nonatomic, readwrite) double meanSampleRateHz;

/** A list of timestamps, one for each sample */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *sampleTsUsArray;
/** The number of items in @c sampleTsUsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sampleTsUsArray_Count;

/** A list of bytes each representing a single image */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *samplesArray;
/** The number of items in @c samplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger samplesArray_Count;

/** Statistics for sample timestamps */
@property(nonatomic, readwrite, strong, null_resettable) RedvoxPacket1000_SummaryStatistics *sampleRateStatistics;
/** Test to see if @c sampleRateStatistics has been set. */
@property(nonatomic, readwrite) BOOL hasSampleRateStatistics;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - RedvoxPacket1000_SummaryStatistics

typedef GPB_ENUM(RedvoxPacket1000_SummaryStatistics_FieldNumber) {
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Count = 1,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Mean = 2,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Median = 3,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Mode = 4,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Variance = 5,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Min = 6,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Max = 7,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Range = 8,
  RedvoxPacket1000_SummaryStatistics_FieldNumber_Metadata = 9,
};

@interface RedvoxPacket1000_SummaryStatistics : GPBMessage

/** The total count of values included in the statistics */
@property(nonatomic, readwrite) double count;

/** The mean of the values */
@property(nonatomic, readwrite) double mean;

/** The median of the values */
@property(nonatomic, readwrite) double median;

/** The mode of the values */
@property(nonatomic, readwrite) double mode;

/** The variance of the values */
@property(nonatomic, readwrite) double variance;

/** The minimum value */
@property(nonatomic, readwrite) double min;

/** The maximum value */
@property(nonatomic, readwrite) double max;

/** The range of the values */
@property(nonatomic, readwrite) double range;

/** A map from string to string for including untyped metadata */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *metadata;
/** The number of items in @c metadata without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadata_Count;

@end

#pragma mark - AcquisitionRequest

typedef GPB_ENUM(AcquisitionRequest_FieldNumber) {
  AcquisitionRequest_FieldNumber_CompressedRedvoxPacket1000 = 1,
  AcquisitionRequest_FieldNumber_Checksum = 2,
};

/**
 * Message for sending RedVox data to a redvox.io data acquisition service.
 **/
@interface AcquisitionRequest : GPBMessage

/** The compressed packet to send. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *compressedRedvoxPacket1000;

/** A checksum of the bytes in field 1. */
@property(nonatomic, readwrite) int64_t checksum;

@end

#pragma mark - AcquisitionResponse

typedef GPB_ENUM(AcquisitionResponse_FieldNumber) {
  AcquisitionResponse_FieldNumber_ResponseType = 1,
  AcquisitionResponse_FieldNumber_Checksum = 2,
  AcquisitionResponse_FieldNumber_Details = 3,
  AcquisitionResponse_FieldNumber_Resend = 4,
};

/**
 * Response from data acquisition services.
 **/
@interface AcquisitionResponse : GPBMessage

/** Response type (as above) */
@property(nonatomic, readwrite) AcquisitionResponse_ResponseType responseType;

/** Checksum computed by server */
@property(nonatomic, readwrite) int64_t checksum;

/** Any other error details */
@property(nonatomic, readwrite, copy, null_resettable) NSString *details;

/** If set, client to should attempt to resend the file */
@property(nonatomic, readwrite) BOOL resend;

@end

/**
 * Fetches the raw value of a @c AcquisitionResponse's @c responseType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AcquisitionResponse_ResponseType_RawValue(AcquisitionResponse *message);
/**
 * Sets the raw value of an @c AcquisitionResponse's @c responseType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAcquisitionResponse_ResponseType_RawValue(AcquisitionResponse *message, int32_t value);

#pragma mark - SynchRequest

typedef GPB_ENUM(SynchRequest_FieldNumber) {
  SynchRequest_FieldNumber_SeqId = 1,
  SynchRequest_FieldNumber_SubSeqId = 2,
};

@interface SynchRequest : GPBMessage

@property(nonatomic, readwrite) uint64_t seqId;

@property(nonatomic, readwrite) uint32_t subSeqId;

@end

#pragma mark - SynchResponse

typedef GPB_ENUM(SynchResponse_FieldNumber) {
  SynchResponse_FieldNumber_SeqId = 1,
  SynchResponse_FieldNumber_SubSeqId = 2,
  SynchResponse_FieldNumber_RecvTsUs = 3,
  SynchResponse_FieldNumber_SendTsUs = 4,
};

@interface SynchResponse : GPBMessage

@property(nonatomic, readwrite) uint64_t seqId;

@property(nonatomic, readwrite) uint32_t subSeqId;

@property(nonatomic, readwrite) uint64_t recvTsUs;

@property(nonatomic, readwrite) uint64_t sendTsUs;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
