// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/redvox_api1000/redvox_api_1000.proto

package io.redvox.redvox_api1000;

public final class RedvoxApi1000 {
  private RedvoxApi1000() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RedvoxPacket1000OrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Top level packet fields
     * </pre>
     *
     * <code>double api = 1;</code>
     */
    double getApi();

    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    boolean hasUserInformation();
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getUserInformation();
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder getUserInformationOrBuilder();

    /**
     * <pre>
     * Device information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
     */
    boolean hasDeviceInformation();
    /**
     * <pre>
     * Device information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation getDeviceInformation();
    /**
     * <pre>
     * Device information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder getDeviceInformationOrBuilder();

    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    boolean hasPacketInformation();
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getPacketInformation();
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder getPacketInformationOrBuilder();

    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    boolean hasTimingInformation();
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getTimingInformation();
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder getTimingInformationOrBuilder();

    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
     */
    boolean hasSensorChannels();
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getSensorChannels();
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder getSensorChannelsOrBuilder();

    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */
    int getMetadataCount();
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */
    boolean containsMetadata(
        java.lang.String key);
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMetadata();
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMetadataMap();
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */

    java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */

    java.lang.String getMetadataOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code redvox_api1000.RedvoxPacket1000}
   */
  public  static final class RedvoxPacket1000 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000)
      RedvoxPacket1000OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedvoxPacket1000.newBuilder() to construct.
    private RedvoxPacket1000(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedvoxPacket1000() {
      api_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedvoxPacket1000(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              api_ = input.readDouble();
              break;
            }
            case 18: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder subBuilder = null;
              if (userInformation_ != null) {
                subBuilder = userInformation_.toBuilder();
              }
              userInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userInformation_);
                userInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder subBuilder = null;
              if (deviceInformation_ != null) {
                subBuilder = deviceInformation_.toBuilder();
              }
              deviceInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deviceInformation_);
                deviceInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder subBuilder = null;
              if (packetInformation_ != null) {
                subBuilder = packetInformation_.toBuilder();
              }
              packetInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(packetInformation_);
                packetInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder subBuilder = null;
              if (timingInformation_ != null) {
                subBuilder = timingInformation_.toBuilder();
              }
              timingInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timingInformation_);
                timingInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder subBuilder = null;
              if (sensorChannels_ != null) {
                subBuilder = sensorChannels_.toBuilder();
              }
              sensorChannels_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensorChannels_);
                sensorChannels_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                metadata_ = com.google.protobuf.MapField.newMapField(
                    MetadataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metadata__ = input.readMessage(
                  MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metadata_.getMutableMap().put(
                  metadata__.getKey(), metadata__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Builder.class);
    }

    public interface UserInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.UserInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      java.lang.String getAuthEmail();
      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      com.google.protobuf.ByteString
          getAuthEmailBytes();

      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      java.lang.String getAuthToken();
      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      com.google.protobuf.ByteString
          getAuthTokenBytes();

      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      java.lang.String getFirebaseToken();
      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      com.google.protobuf.ByteString
          getFirebaseTokenBytes();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.UserInformation}
     */
    public  static final class UserInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.UserInformation)
        UserInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UserInformation.newBuilder() to construct.
      private UserInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UserInformation() {
        authEmail_ = "";
        authToken_ = "";
        firebaseToken_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UserInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                authEmail_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                authToken_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                firebaseToken_ = s;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000008;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder.class);
      }

      private int bitField0_;
      public static final int AUTH_EMAIL_FIELD_NUMBER = 1;
      private volatile java.lang.Object authEmail_;
      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      public java.lang.String getAuthEmail() {
        java.lang.Object ref = authEmail_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authEmail_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAuthEmailBytes() {
        java.lang.Object ref = authEmail_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authEmail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTH_TOKEN_FIELD_NUMBER = 2;
      private volatile java.lang.Object authToken_;
      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      public java.lang.String getAuthToken() {
        java.lang.Object ref = authToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authToken_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAuthTokenBytes() {
        java.lang.Object ref = authToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FIREBASE_TOKEN_FIELD_NUMBER = 3;
      private volatile java.lang.Object firebaseToken_;
      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      public java.lang.String getFirebaseToken() {
        java.lang.Object ref = firebaseToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          firebaseToken_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFirebaseTokenBytes() {
        java.lang.Object ref = firebaseToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firebaseToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int METADATA_FIELD_NUMBER = 4;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getAuthEmailBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authEmail_);
        }
        if (!getAuthTokenBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, authToken_);
        }
        if (!getFirebaseTokenBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, firebaseToken_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            4);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getAuthEmailBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authEmail_);
        }
        if (!getAuthTokenBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, authToken_);
        }
        if (!getFirebaseTokenBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, firebaseToken_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation) obj;

        boolean result = true;
        result = result && getAuthEmail()
            .equals(other.getAuthEmail());
        result = result && getAuthToken()
            .equals(other.getAuthToken());
        result = result && getFirebaseToken()
            .equals(other.getFirebaseToken());
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + AUTH_EMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getAuthEmail().hashCode();
        hash = (37 * hash) + AUTH_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAuthToken().hashCode();
        hash = (37 * hash) + FIREBASE_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getFirebaseToken().hashCode();
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.UserInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.UserInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          authEmail_ = "";

          authToken_ = "";

          firebaseToken_ = "";

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.authEmail_ = authEmail_;
          result.authToken_ = authToken_;
          result.firebaseToken_ = firebaseToken_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance()) return this;
          if (!other.getAuthEmail().isEmpty()) {
            authEmail_ = other.authEmail_;
            onChanged();
          }
          if (!other.getAuthToken().isEmpty()) {
            authToken_ = other.authToken_;
            onChanged();
          }
          if (!other.getFirebaseToken().isEmpty()) {
            firebaseToken_ = other.firebaseToken_;
            onChanged();
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object authEmail_ = "";
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public java.lang.String getAuthEmail() {
          java.lang.Object ref = authEmail_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authEmail_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public com.google.protobuf.ByteString
            getAuthEmailBytes() {
          java.lang.Object ref = authEmail_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authEmail_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public Builder setAuthEmail(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authEmail_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public Builder clearAuthEmail() {
          
          authEmail_ = getDefaultInstance().getAuthEmail();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public Builder setAuthEmailBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authEmail_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object authToken_ = "";
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public java.lang.String getAuthToken() {
          java.lang.Object ref = authToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authToken_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public com.google.protobuf.ByteString
            getAuthTokenBytes() {
          java.lang.Object ref = authToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public Builder setAuthToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public Builder clearAuthToken() {
          
          authToken_ = getDefaultInstance().getAuthToken();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public Builder setAuthTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authToken_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object firebaseToken_ = "";
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public java.lang.String getFirebaseToken() {
          java.lang.Object ref = firebaseToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            firebaseToken_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public com.google.protobuf.ByteString
            getFirebaseTokenBytes() {
          java.lang.Object ref = firebaseToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            firebaseToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public Builder setFirebaseToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          firebaseToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public Builder clearFirebaseToken() {
          
          firebaseToken_ = getDefaultInstance().getFirebaseToken();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public Builder setFirebaseTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          firebaseToken_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.UserInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.UserInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<UserInformation>
          PARSER = new com.google.protobuf.AbstractParser<UserInformation>() {
        @java.lang.Override
        public UserInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UserInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UserInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeviceInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.DeviceInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The user selectable device id
       * </pre>
       *
       * <code>string device_id = 1;</code>
       */
      java.lang.String getDeviceId();
      /**
       * <pre>
       * The user selectable device id
       * </pre>
       *
       * <code>string device_id = 1;</code>
       */
      com.google.protobuf.ByteString
          getDeviceIdBytes();

      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string device_uuid = 2;</code>
       */
      java.lang.String getDeviceUuid();
      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string device_uuid = 2;</code>
       */
      com.google.protobuf.ByteString
          getDeviceUuidBytes();

      /**
       * <pre>
       * Make of the device
       * </pre>
       *
       * <code>string device_make = 3;</code>
       */
      java.lang.String getDeviceMake();
      /**
       * <pre>
       * Make of the device
       * </pre>
       *
       * <code>string device_make = 3;</code>
       */
      com.google.protobuf.ByteString
          getDeviceMakeBytes();

      /**
       * <pre>
       * Model of the device
       * </pre>
       *
       * <code>string device_model = 4;</code>
       */
      java.lang.String getDeviceModel();
      /**
       * <pre>
       * Model of the device
       * </pre>
       *
       * <code>string device_model = 4;</code>
       */
      com.google.protobuf.ByteString
          getDeviceModelBytes();

      /**
       * <pre>
       * OS of the device
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
       */
      int getDeviceOsValue();
      /**
       * <pre>
       * OS of the device
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType getDeviceOs();

      /**
       * <pre>
       * OS version of the device
       * </pre>
       *
       * <code>string device_os_version = 6;</code>
       */
      java.lang.String getDeviceOsVersion();
      /**
       * <pre>
       * OS version of the device
       * </pre>
       *
       * <code>string device_os_version = 6;</code>
       */
      com.google.protobuf.ByteString
          getDeviceOsVersionBytes();

      /**
       * <pre>
       * App version on the device
       * </pre>
       *
       * <code>string device_app_version = 7;</code>
       */
      java.lang.String getDeviceAppVersion();
      /**
       * <pre>
       * App version on the device
       * </pre>
       *
       * <code>string device_app_version = 7;</code>
       */
      com.google.protobuf.ByteString
          getDeviceAppVersionBytes();

      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
       */
      boolean hasAppSettings();
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings getAppSettings();
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder getAppSettingsOrBuilder();

      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
       */
      int getNetworkTypeValue();
      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType getNetworkType();

      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
       */
      boolean hasNetworkStrengthDb();
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getNetworkStrengthDb();
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getNetworkStrengthDbOrBuilder();

      /**
       * <pre>
       * Temperature of the device in degrees centigrade
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
       */
      boolean hasDeviceTempC();
      /**
       * <pre>
       * Temperature of the device in degrees centigrade
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDeviceTempC();
      /**
       * <pre>
       * Temperature of the device in degrees centigrade
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getDeviceTempCOrBuilder();

      /**
       * <pre>
       * Device battery level as a percentage between 0% and 100%
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
       */
      boolean hasDeviceBatteryPercent();
      /**
       * <pre>
       * Device battery level as a percentage between 0% and 100%
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDeviceBatteryPercent();
      /**
       * <pre>
       * Device battery level as a percentage between 0% and 100%
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getDeviceBatteryPercentOrBuilder();

      /**
       * <pre>
       * Available RAM in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
       */
      boolean hasAvailableRamBytes();
      /**
       * <pre>
       * Available RAM in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAvailableRamBytes();
      /**
       * <pre>
       * Available RAM in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAvailableRamBytesOrBuilder();

      /**
       * <pre>
       * Available disk space in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
       */
      boolean hasAvailableDiskBytes();
      /**
       * <pre>
       * Available disk space in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAvailableDiskBytes();
      /**
       * <pre>
       * Available disk space in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAvailableDiskBytesOrBuilder();

      /**
       * <pre>
       * CPU utilization
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
       */
      boolean hasCpuUtilization();
      /**
       * <pre>
       * CPU utilization
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getCpuUtilization();
      /**
       * <pre>
       * CPU utilization
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getCpuUtilizationOrBuilder();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.DeviceInformation}
     */
    public  static final class DeviceInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.DeviceInformation)
        DeviceInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceInformation.newBuilder() to construct.
      private DeviceInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceInformation() {
        deviceId_ = "";
        deviceUuid_ = "";
        deviceMake_ = "";
        deviceModel_ = "";
        deviceOs_ = 0;
        deviceOsVersion_ = "";
        deviceAppVersion_ = "";
        networkType_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeviceInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceUuid_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceMake_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceModel_ = s;
                break;
              }
              case 40: {
                int rawValue = input.readEnum();

                deviceOs_ = rawValue;
                break;
              }
              case 50: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceOsVersion_ = s;
                break;
              }
              case 58: {
                java.lang.String s = input.readStringRequireUtf8();

                deviceAppVersion_ = s;
                break;
              }
              case 66: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder subBuilder = null;
                if (appSettings_ != null) {
                  subBuilder = appSettings_.toBuilder();
                }
                appSettings_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(appSettings_);
                  appSettings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 72: {
                int rawValue = input.readEnum();

                networkType_ = rawValue;
                break;
              }
              case 82: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (networkStrengthDb_ != null) {
                  subBuilder = networkStrengthDb_.toBuilder();
                }
                networkStrengthDb_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(networkStrengthDb_);
                  networkStrengthDb_ = subBuilder.buildPartial();
                }

                break;
              }
              case 90: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (deviceTempC_ != null) {
                  subBuilder = deviceTempC_.toBuilder();
                }
                deviceTempC_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deviceTempC_);
                  deviceTempC_ = subBuilder.buildPartial();
                }

                break;
              }
              case 98: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (deviceBatteryPercent_ != null) {
                  subBuilder = deviceBatteryPercent_.toBuilder();
                }
                deviceBatteryPercent_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deviceBatteryPercent_);
                  deviceBatteryPercent_ = subBuilder.buildPartial();
                }

                break;
              }
              case 106: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (availableRamBytes_ != null) {
                  subBuilder = availableRamBytes_.toBuilder();
                }
                availableRamBytes_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(availableRamBytes_);
                  availableRamBytes_ = subBuilder.buildPartial();
                }

                break;
              }
              case 114: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (availableDiskBytes_ != null) {
                  subBuilder = availableDiskBytes_.toBuilder();
                }
                availableDiskBytes_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(availableDiskBytes_);
                  availableDiskBytes_ = subBuilder.buildPartial();
                }

                break;
              }
              case 122: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (cpuUtilization_ != null) {
                  subBuilder = cpuUtilization_.toBuilder();
                }
                cpuUtilization_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cpuUtilization_);
                  cpuUtilization_ = subBuilder.buildPartial();
                }

                break;
              }
              case 130: {
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00008000;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder.class);
      }

      /**
       * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType}
       */
      public enum NetworkType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>WIFI = 0;</code>
         */
        WIFI(0),
        /**
         * <code>CELLULAR = 1;</code>
         */
        CELLULAR(1),
        /**
         * <code>NONE = 2;</code>
         */
        NONE(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>WIFI = 0;</code>
         */
        public static final int WIFI_VALUE = 0;
        /**
         * <code>CELLULAR = 1;</code>
         */
        public static final int CELLULAR_VALUE = 1;
        /**
         * <code>NONE = 2;</code>
         */
        public static final int NONE_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static NetworkType valueOf(int value) {
          return forNumber(value);
        }

        public static NetworkType forNumber(int value) {
          switch (value) {
            case 0: return WIFI;
            case 1: return CELLULAR;
            case 2: return NONE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<NetworkType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            NetworkType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<NetworkType>() {
                public NetworkType findValueByNumber(int number) {
                  return NetworkType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDescriptor().getEnumTypes().get(0);
        }

        private static final NetworkType[] VALUES = values();

        public static NetworkType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private NetworkType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType)
      }

      /**
       * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType}
       */
      public enum OsType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>ANDROID = 0;</code>
         */
        ANDROID(0),
        /**
         * <code>IOS = 1;</code>
         */
        IOS(1),
        /**
         * <code>LINUX = 2;</code>
         */
        LINUX(2),
        /**
         * <code>WINDOWS = 3;</code>
         */
        WINDOWS(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>ANDROID = 0;</code>
         */
        public static final int ANDROID_VALUE = 0;
        /**
         * <code>IOS = 1;</code>
         */
        public static final int IOS_VALUE = 1;
        /**
         * <code>LINUX = 2;</code>
         */
        public static final int LINUX_VALUE = 2;
        /**
         * <code>WINDOWS = 3;</code>
         */
        public static final int WINDOWS_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static OsType valueOf(int value) {
          return forNumber(value);
        }

        public static OsType forNumber(int value) {
          switch (value) {
            case 0: return ANDROID;
            case 1: return IOS;
            case 2: return LINUX;
            case 3: return WINDOWS;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<OsType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            OsType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<OsType>() {
                public OsType findValueByNumber(int number) {
                  return OsType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDescriptor().getEnumTypes().get(1);
        }

        private static final OsType[] VALUES = values();

        public static OsType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private OsType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType)
      }

      public interface AppSettingsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
         */
        int getAudioSamplingRateValue();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate getAudioSamplingRate();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        int getAudioSourceTuningValue();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning getAudioSourceTuning();

        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor> getAdditionalInputSensorsList();
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        int getAdditionalInputSensorsCount();
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor getAdditionalInputSensors(int index);
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        java.util.List<java.lang.Integer>
        getAdditionalInputSensorsValueList();
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        int getAdditionalInputSensorsValue(int index);

        /**
         * <code>bool automatically_record = 4;</code>
         */
        boolean getAutomaticallyRecord();

        /**
         * <code>bool launch_at_power_up = 5;</code>
         */
        boolean getLaunchAtPowerUp();

        /**
         * <code>string redvox_id = 6;</code>
         */
        java.lang.String getRedvoxId();
        /**
         * <code>string redvox_id = 6;</code>
         */
        com.google.protobuf.ByteString
            getRedvoxIdBytes();

        /**
         * <code>bool push_to_server = 7;</code>
         */
        boolean getPushToServer();

        /**
         * <code>bool publish_data_as_private = 8;</code>
         */
        boolean getPublishDataAsPrivate();

        /**
         * <code>bool scramble_voice_data = 9;</code>
         */
        boolean getScrambleVoiceData();

        /**
         * <code>bool provide_backfill = 10;</code>
         */
        boolean getProvideBackfill();

        /**
         * <code>bool use_custom_time_sync_server = 11;</code>
         */
        boolean getUseCustomTimeSyncServer();

        /**
         * <code>string time_synch_server_url = 12;</code>
         */
        java.lang.String getTimeSynchServerUrl();
        /**
         * <code>string time_synch_server_url = 12;</code>
         */
        com.google.protobuf.ByteString
            getTimeSynchServerUrlBytes();

        /**
         * <code>bool use_custom_data_server = 13;</code>
         */
        boolean getUseCustomDataServer();

        /**
         * <code>string data_server_url = 14;</code>
         */
        java.lang.String getDataServerUrl();
        /**
         * <code>string data_server_url = 14;</code>
         */
        com.google.protobuf.ByteString
            getDataServerUrlBytes();

        /**
         * <code>bool auto_delete_data_files = 15;</code>
         */
        boolean getAutoDeleteDataFiles();

        /**
         * <code>double storage_space_allowance = 16;</code>
         */
        double getStorageSpaceAllowance();

        /**
         * <code>bool use_sd_card_for_data_storage = 17;</code>
         */
        boolean getUseSdCardForDataStorage();

        /**
         * <code>bool use_location_services = 18;</code>
         */
        boolean getUseLocationServices();

        /**
         * <code>double use_latitude = 19;</code>
         */
        double getUseLatitude();

        /**
         * <code>double use_longitude = 20;</code>
         */
        double getUseLongitude();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings}
       */
      public  static final class AppSettings extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings)
          AppSettingsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AppSettings.newBuilder() to construct.
        private AppSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AppSettings() {
          audioSamplingRate_ = 0;
          audioSourceTuning_ = 0;
          additionalInputSensors_ = java.util.Collections.emptyList();
          automaticallyRecord_ = false;
          launchAtPowerUp_ = false;
          redvoxId_ = "";
          pushToServer_ = false;
          publishDataAsPrivate_ = false;
          scrambleVoiceData_ = false;
          provideBackfill_ = false;
          useCustomTimeSyncServer_ = false;
          timeSynchServerUrl_ = "";
          useCustomDataServer_ = false;
          dataServerUrl_ = "";
          autoDeleteDataFiles_ = false;
          storageSpaceAllowance_ = 0D;
          useSdCardForDataStorage_ = false;
          useLocationServices_ = false;
          useLatitude_ = 0D;
          useLongitude_ = 0D;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AppSettings(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();

                  audioSamplingRate_ = rawValue;
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  audioSourceTuning_ = rawValue;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    additionalInputSensors_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  additionalInputSensors_.add(rawValue);
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int rawValue = input.readEnum();
                    if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                      additionalInputSensors_ = new java.util.ArrayList<java.lang.Integer>();
                      mutable_bitField0_ |= 0x00000004;
                    }
                    additionalInputSensors_.add(rawValue);
                  }
                  input.popLimit(oldLimit);
                  break;
                }
                case 32: {

                  automaticallyRecord_ = input.readBool();
                  break;
                }
                case 40: {

                  launchAtPowerUp_ = input.readBool();
                  break;
                }
                case 50: {
                  java.lang.String s = input.readStringRequireUtf8();

                  redvoxId_ = s;
                  break;
                }
                case 56: {

                  pushToServer_ = input.readBool();
                  break;
                }
                case 64: {

                  publishDataAsPrivate_ = input.readBool();
                  break;
                }
                case 72: {

                  scrambleVoiceData_ = input.readBool();
                  break;
                }
                case 80: {

                  provideBackfill_ = input.readBool();
                  break;
                }
                case 88: {

                  useCustomTimeSyncServer_ = input.readBool();
                  break;
                }
                case 98: {
                  java.lang.String s = input.readStringRequireUtf8();

                  timeSynchServerUrl_ = s;
                  break;
                }
                case 104: {

                  useCustomDataServer_ = input.readBool();
                  break;
                }
                case 114: {
                  java.lang.String s = input.readStringRequireUtf8();

                  dataServerUrl_ = s;
                  break;
                }
                case 120: {

                  autoDeleteDataFiles_ = input.readBool();
                  break;
                }
                case 129: {

                  storageSpaceAllowance_ = input.readDouble();
                  break;
                }
                case 136: {

                  useSdCardForDataStorage_ = input.readBool();
                  break;
                }
                case 144: {

                  useLocationServices_ = input.readBool();
                  break;
                }
                case 153: {

                  useLatitude_ = input.readDouble();
                  break;
                }
                case 161: {

                  useLongitude_ = input.readDouble();
                  break;
                }
                case 170: {
                  if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00100000;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              additionalInputSensors_ = java.util.Collections.unmodifiableList(additionalInputSensors_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 21:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder.class);
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate}
         */
        public enum AudioSamplingRate
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>HZ_80 = 0;</code>
           */
          HZ_80(0),
          /**
           * <code>HZ_800 = 1;</code>
           */
          HZ_800(1),
          /**
           * <code>HZ_8000 = 2;</code>
           */
          HZ_8000(2),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>HZ_80 = 0;</code>
           */
          public static final int HZ_80_VALUE = 0;
          /**
           * <code>HZ_800 = 1;</code>
           */
          public static final int HZ_800_VALUE = 1;
          /**
           * <code>HZ_8000 = 2;</code>
           */
          public static final int HZ_8000_VALUE = 2;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static AudioSamplingRate valueOf(int value) {
            return forNumber(value);
          }

          public static AudioSamplingRate forNumber(int value) {
            switch (value) {
              case 0: return HZ_80;
              case 1: return HZ_800;
              case 2: return HZ_8000;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<AudioSamplingRate>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              AudioSamplingRate> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AudioSamplingRate>() {
                  public AudioSamplingRate findValueByNumber(int number) {
                    return AudioSamplingRate.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDescriptor().getEnumTypes().get(0);
          }

          private static final AudioSamplingRate[] VALUES = values();

          public static AudioSamplingRate valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private AudioSamplingRate(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate)
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning}
         */
        public enum AudioSourceTuning
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>INFRASOUND = 0;</code>
           */
          INFRASOUND(0),
          /**
           * <code>LOW_AUDIO = 1;</code>
           */
          LOW_AUDIO(1),
          /**
           * <code>AUDIO = 2;</code>
           */
          AUDIO(2),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>INFRASOUND = 0;</code>
           */
          public static final int INFRASOUND_VALUE = 0;
          /**
           * <code>LOW_AUDIO = 1;</code>
           */
          public static final int LOW_AUDIO_VALUE = 1;
          /**
           * <code>AUDIO = 2;</code>
           */
          public static final int AUDIO_VALUE = 2;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static AudioSourceTuning valueOf(int value) {
            return forNumber(value);
          }

          public static AudioSourceTuning forNumber(int value) {
            switch (value) {
              case 0: return INFRASOUND;
              case 1: return LOW_AUDIO;
              case 2: return AUDIO;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<AudioSourceTuning>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              AudioSourceTuning> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AudioSourceTuning>() {
                  public AudioSourceTuning findValueByNumber(int number) {
                    return AudioSourceTuning.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDescriptor().getEnumTypes().get(1);
          }

          private static final AudioSourceTuning[] VALUES = values();

          public static AudioSourceTuning valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private AudioSourceTuning(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning)
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor}
         */
        public enum InputSensor
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>BAROMETER = 0;</code>
           */
          BAROMETER(0),
          /**
           * <code>ACCELEROMETER = 1;</code>
           */
          ACCELEROMETER(1),
          /**
           * <code>ACCELEROMETER_FAST = 2;</code>
           */
          ACCELEROMETER_FAST(2),
          /**
           * <code>MAGNETOMETER = 3;</code>
           */
          MAGNETOMETER(3),
          /**
           * <code>MAGNETOMETER_FAST = 4;</code>
           */
          MAGNETOMETER_FAST(4),
          /**
           * <code>GYROSCOPE = 5;</code>
           */
          GYROSCOPE(5),
          /**
           * <code>GYROSCOPE_FAST = 6;</code>
           */
          GYROSCOPE_FAST(6),
          /**
           * <code>LUMINOSITY = 7;</code>
           */
          LUMINOSITY(7),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>BAROMETER = 0;</code>
           */
          public static final int BAROMETER_VALUE = 0;
          /**
           * <code>ACCELEROMETER = 1;</code>
           */
          public static final int ACCELEROMETER_VALUE = 1;
          /**
           * <code>ACCELEROMETER_FAST = 2;</code>
           */
          public static final int ACCELEROMETER_FAST_VALUE = 2;
          /**
           * <code>MAGNETOMETER = 3;</code>
           */
          public static final int MAGNETOMETER_VALUE = 3;
          /**
           * <code>MAGNETOMETER_FAST = 4;</code>
           */
          public static final int MAGNETOMETER_FAST_VALUE = 4;
          /**
           * <code>GYROSCOPE = 5;</code>
           */
          public static final int GYROSCOPE_VALUE = 5;
          /**
           * <code>GYROSCOPE_FAST = 6;</code>
           */
          public static final int GYROSCOPE_FAST_VALUE = 6;
          /**
           * <code>LUMINOSITY = 7;</code>
           */
          public static final int LUMINOSITY_VALUE = 7;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static InputSensor valueOf(int value) {
            return forNumber(value);
          }

          public static InputSensor forNumber(int value) {
            switch (value) {
              case 0: return BAROMETER;
              case 1: return ACCELEROMETER;
              case 2: return ACCELEROMETER_FAST;
              case 3: return MAGNETOMETER;
              case 4: return MAGNETOMETER_FAST;
              case 5: return GYROSCOPE;
              case 6: return GYROSCOPE_FAST;
              case 7: return LUMINOSITY;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<InputSensor>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              InputSensor> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<InputSensor>() {
                  public InputSensor findValueByNumber(int number) {
                    return InputSensor.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDescriptor().getEnumTypes().get(2);
          }

          private static final InputSensor[] VALUES = values();

          public static InputSensor valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private InputSensor(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor)
        }

        private int bitField0_;
        public static final int AUDIO_SAMPLING_RATE_FIELD_NUMBER = 1;
        private int audioSamplingRate_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
         */
        public int getAudioSamplingRateValue() {
          return audioSamplingRate_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate getAudioSamplingRate() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate.valueOf(audioSamplingRate_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate.UNRECOGNIZED : result;
        }

        public static final int AUDIO_SOURCE_TUNING_FIELD_NUMBER = 2;
        private int audioSourceTuning_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        public int getAudioSourceTuningValue() {
          return audioSourceTuning_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning getAudioSourceTuning() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning.valueOf(audioSourceTuning_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning.UNRECOGNIZED : result;
        }

        public static final int ADDITIONAL_INPUT_SENSORS_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Integer> additionalInputSensors_;
        private static final com.google.protobuf.Internal.ListAdapter.Converter<
            java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor> additionalInputSensors_converter_ =
                new com.google.protobuf.Internal.ListAdapter.Converter<
                    java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor>() {
                  public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor convert(java.lang.Integer from) {
                    @SuppressWarnings("deprecation")
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor.valueOf(from);
                    return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor.UNRECOGNIZED : result;
                  }
                };
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor> getAdditionalInputSensorsList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor>(additionalInputSensors_, additionalInputSensors_converter_);
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public int getAdditionalInputSensorsCount() {
          return additionalInputSensors_.size();
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor getAdditionalInputSensors(int index) {
          return additionalInputSensors_converter_.convert(additionalInputSensors_.get(index));
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getAdditionalInputSensorsValueList() {
          return additionalInputSensors_;
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public int getAdditionalInputSensorsValue(int index) {
          return additionalInputSensors_.get(index);
        }
        private int additionalInputSensorsMemoizedSerializedSize;

        public static final int AUTOMATICALLY_RECORD_FIELD_NUMBER = 4;
        private boolean automaticallyRecord_;
        /**
         * <code>bool automatically_record = 4;</code>
         */
        public boolean getAutomaticallyRecord() {
          return automaticallyRecord_;
        }

        public static final int LAUNCH_AT_POWER_UP_FIELD_NUMBER = 5;
        private boolean launchAtPowerUp_;
        /**
         * <code>bool launch_at_power_up = 5;</code>
         */
        public boolean getLaunchAtPowerUp() {
          return launchAtPowerUp_;
        }

        public static final int REDVOX_ID_FIELD_NUMBER = 6;
        private volatile java.lang.Object redvoxId_;
        /**
         * <code>string redvox_id = 6;</code>
         */
        public java.lang.String getRedvoxId() {
          java.lang.Object ref = redvoxId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            redvoxId_ = s;
            return s;
          }
        }
        /**
         * <code>string redvox_id = 6;</code>
         */
        public com.google.protobuf.ByteString
            getRedvoxIdBytes() {
          java.lang.Object ref = redvoxId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            redvoxId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PUSH_TO_SERVER_FIELD_NUMBER = 7;
        private boolean pushToServer_;
        /**
         * <code>bool push_to_server = 7;</code>
         */
        public boolean getPushToServer() {
          return pushToServer_;
        }

        public static final int PUBLISH_DATA_AS_PRIVATE_FIELD_NUMBER = 8;
        private boolean publishDataAsPrivate_;
        /**
         * <code>bool publish_data_as_private = 8;</code>
         */
        public boolean getPublishDataAsPrivate() {
          return publishDataAsPrivate_;
        }

        public static final int SCRAMBLE_VOICE_DATA_FIELD_NUMBER = 9;
        private boolean scrambleVoiceData_;
        /**
         * <code>bool scramble_voice_data = 9;</code>
         */
        public boolean getScrambleVoiceData() {
          return scrambleVoiceData_;
        }

        public static final int PROVIDE_BACKFILL_FIELD_NUMBER = 10;
        private boolean provideBackfill_;
        /**
         * <code>bool provide_backfill = 10;</code>
         */
        public boolean getProvideBackfill() {
          return provideBackfill_;
        }

        public static final int USE_CUSTOM_TIME_SYNC_SERVER_FIELD_NUMBER = 11;
        private boolean useCustomTimeSyncServer_;
        /**
         * <code>bool use_custom_time_sync_server = 11;</code>
         */
        public boolean getUseCustomTimeSyncServer() {
          return useCustomTimeSyncServer_;
        }

        public static final int TIME_SYNCH_SERVER_URL_FIELD_NUMBER = 12;
        private volatile java.lang.Object timeSynchServerUrl_;
        /**
         * <code>string time_synch_server_url = 12;</code>
         */
        public java.lang.String getTimeSynchServerUrl() {
          java.lang.Object ref = timeSynchServerUrl_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            timeSynchServerUrl_ = s;
            return s;
          }
        }
        /**
         * <code>string time_synch_server_url = 12;</code>
         */
        public com.google.protobuf.ByteString
            getTimeSynchServerUrlBytes() {
          java.lang.Object ref = timeSynchServerUrl_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            timeSynchServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int USE_CUSTOM_DATA_SERVER_FIELD_NUMBER = 13;
        private boolean useCustomDataServer_;
        /**
         * <code>bool use_custom_data_server = 13;</code>
         */
        public boolean getUseCustomDataServer() {
          return useCustomDataServer_;
        }

        public static final int DATA_SERVER_URL_FIELD_NUMBER = 14;
        private volatile java.lang.Object dataServerUrl_;
        /**
         * <code>string data_server_url = 14;</code>
         */
        public java.lang.String getDataServerUrl() {
          java.lang.Object ref = dataServerUrl_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            dataServerUrl_ = s;
            return s;
          }
        }
        /**
         * <code>string data_server_url = 14;</code>
         */
        public com.google.protobuf.ByteString
            getDataServerUrlBytes() {
          java.lang.Object ref = dataServerUrl_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int AUTO_DELETE_DATA_FILES_FIELD_NUMBER = 15;
        private boolean autoDeleteDataFiles_;
        /**
         * <code>bool auto_delete_data_files = 15;</code>
         */
        public boolean getAutoDeleteDataFiles() {
          return autoDeleteDataFiles_;
        }

        public static final int STORAGE_SPACE_ALLOWANCE_FIELD_NUMBER = 16;
        private double storageSpaceAllowance_;
        /**
         * <code>double storage_space_allowance = 16;</code>
         */
        public double getStorageSpaceAllowance() {
          return storageSpaceAllowance_;
        }

        public static final int USE_SD_CARD_FOR_DATA_STORAGE_FIELD_NUMBER = 17;
        private boolean useSdCardForDataStorage_;
        /**
         * <code>bool use_sd_card_for_data_storage = 17;</code>
         */
        public boolean getUseSdCardForDataStorage() {
          return useSdCardForDataStorage_;
        }

        public static final int USE_LOCATION_SERVICES_FIELD_NUMBER = 18;
        private boolean useLocationServices_;
        /**
         * <code>bool use_location_services = 18;</code>
         */
        public boolean getUseLocationServices() {
          return useLocationServices_;
        }

        public static final int USE_LATITUDE_FIELD_NUMBER = 19;
        private double useLatitude_;
        /**
         * <code>double use_latitude = 19;</code>
         */
        public double getUseLatitude() {
          return useLatitude_;
        }

        public static final int USE_LONGITUDE_FIELD_NUMBER = 20;
        private double useLongitude_;
        /**
         * <code>double use_longitude = 20;</code>
         */
        public double getUseLongitude() {
          return useLongitude_;
        }

        public static final int METADATA_FIELD_NUMBER = 21;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (audioSamplingRate_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate.HZ_80.getNumber()) {
            output.writeEnum(1, audioSamplingRate_);
          }
          if (audioSourceTuning_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning.INFRASOUND.getNumber()) {
            output.writeEnum(2, audioSourceTuning_);
          }
          if (getAdditionalInputSensorsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(additionalInputSensorsMemoizedSerializedSize);
          }
          for (int i = 0; i < additionalInputSensors_.size(); i++) {
            output.writeEnumNoTag(additionalInputSensors_.get(i));
          }
          if (automaticallyRecord_ != false) {
            output.writeBool(4, automaticallyRecord_);
          }
          if (launchAtPowerUp_ != false) {
            output.writeBool(5, launchAtPowerUp_);
          }
          if (!getRedvoxIdBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, redvoxId_);
          }
          if (pushToServer_ != false) {
            output.writeBool(7, pushToServer_);
          }
          if (publishDataAsPrivate_ != false) {
            output.writeBool(8, publishDataAsPrivate_);
          }
          if (scrambleVoiceData_ != false) {
            output.writeBool(9, scrambleVoiceData_);
          }
          if (provideBackfill_ != false) {
            output.writeBool(10, provideBackfill_);
          }
          if (useCustomTimeSyncServer_ != false) {
            output.writeBool(11, useCustomTimeSyncServer_);
          }
          if (!getTimeSynchServerUrlBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 12, timeSynchServerUrl_);
          }
          if (useCustomDataServer_ != false) {
            output.writeBool(13, useCustomDataServer_);
          }
          if (!getDataServerUrlBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 14, dataServerUrl_);
          }
          if (autoDeleteDataFiles_ != false) {
            output.writeBool(15, autoDeleteDataFiles_);
          }
          if (storageSpaceAllowance_ != 0D) {
            output.writeDouble(16, storageSpaceAllowance_);
          }
          if (useSdCardForDataStorage_ != false) {
            output.writeBool(17, useSdCardForDataStorage_);
          }
          if (useLocationServices_ != false) {
            output.writeBool(18, useLocationServices_);
          }
          if (useLatitude_ != 0D) {
            output.writeDouble(19, useLatitude_);
          }
          if (useLongitude_ != 0D) {
            output.writeDouble(20, useLongitude_);
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              21);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (audioSamplingRate_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate.HZ_80.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, audioSamplingRate_);
          }
          if (audioSourceTuning_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning.INFRASOUND.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(2, audioSourceTuning_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < additionalInputSensors_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeEnumSizeNoTag(additionalInputSensors_.get(i));
            }
            size += dataSize;
            if (!getAdditionalInputSensorsList().isEmpty()) {  size += 1;
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(dataSize);
            }additionalInputSensorsMemoizedSerializedSize = dataSize;
          }
          if (automaticallyRecord_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(4, automaticallyRecord_);
          }
          if (launchAtPowerUp_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(5, launchAtPowerUp_);
          }
          if (!getRedvoxIdBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, redvoxId_);
          }
          if (pushToServer_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(7, pushToServer_);
          }
          if (publishDataAsPrivate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(8, publishDataAsPrivate_);
          }
          if (scrambleVoiceData_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, scrambleVoiceData_);
          }
          if (provideBackfill_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(10, provideBackfill_);
          }
          if (useCustomTimeSyncServer_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(11, useCustomTimeSyncServer_);
          }
          if (!getTimeSynchServerUrlBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, timeSynchServerUrl_);
          }
          if (useCustomDataServer_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(13, useCustomDataServer_);
          }
          if (!getDataServerUrlBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, dataServerUrl_);
          }
          if (autoDeleteDataFiles_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(15, autoDeleteDataFiles_);
          }
          if (storageSpaceAllowance_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(16, storageSpaceAllowance_);
          }
          if (useSdCardForDataStorage_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(17, useSdCardForDataStorage_);
          }
          if (useLocationServices_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(18, useLocationServices_);
          }
          if (useLatitude_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(19, useLatitude_);
          }
          if (useLongitude_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(20, useLongitude_);
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(21, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings) obj;

          boolean result = true;
          result = result && audioSamplingRate_ == other.audioSamplingRate_;
          result = result && audioSourceTuning_ == other.audioSourceTuning_;
          result = result && additionalInputSensors_.equals(other.additionalInputSensors_);
          result = result && (getAutomaticallyRecord()
              == other.getAutomaticallyRecord());
          result = result && (getLaunchAtPowerUp()
              == other.getLaunchAtPowerUp());
          result = result && getRedvoxId()
              .equals(other.getRedvoxId());
          result = result && (getPushToServer()
              == other.getPushToServer());
          result = result && (getPublishDataAsPrivate()
              == other.getPublishDataAsPrivate());
          result = result && (getScrambleVoiceData()
              == other.getScrambleVoiceData());
          result = result && (getProvideBackfill()
              == other.getProvideBackfill());
          result = result && (getUseCustomTimeSyncServer()
              == other.getUseCustomTimeSyncServer());
          result = result && getTimeSynchServerUrl()
              .equals(other.getTimeSynchServerUrl());
          result = result && (getUseCustomDataServer()
              == other.getUseCustomDataServer());
          result = result && getDataServerUrl()
              .equals(other.getDataServerUrl());
          result = result && (getAutoDeleteDataFiles()
              == other.getAutoDeleteDataFiles());
          result = result && (
              java.lang.Double.doubleToLongBits(getStorageSpaceAllowance())
              == java.lang.Double.doubleToLongBits(
                  other.getStorageSpaceAllowance()));
          result = result && (getUseSdCardForDataStorage()
              == other.getUseSdCardForDataStorage());
          result = result && (getUseLocationServices()
              == other.getUseLocationServices());
          result = result && (
              java.lang.Double.doubleToLongBits(getUseLatitude())
              == java.lang.Double.doubleToLongBits(
                  other.getUseLatitude()));
          result = result && (
              java.lang.Double.doubleToLongBits(getUseLongitude())
              == java.lang.Double.doubleToLongBits(
                  other.getUseLongitude()));
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + AUDIO_SAMPLING_RATE_FIELD_NUMBER;
          hash = (53 * hash) + audioSamplingRate_;
          hash = (37 * hash) + AUDIO_SOURCE_TUNING_FIELD_NUMBER;
          hash = (53 * hash) + audioSourceTuning_;
          if (getAdditionalInputSensorsCount() > 0) {
            hash = (37 * hash) + ADDITIONAL_INPUT_SENSORS_FIELD_NUMBER;
            hash = (53 * hash) + additionalInputSensors_.hashCode();
          }
          hash = (37 * hash) + AUTOMATICALLY_RECORD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getAutomaticallyRecord());
          hash = (37 * hash) + LAUNCH_AT_POWER_UP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLaunchAtPowerUp());
          hash = (37 * hash) + REDVOX_ID_FIELD_NUMBER;
          hash = (53 * hash) + getRedvoxId().hashCode();
          hash = (37 * hash) + PUSH_TO_SERVER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPushToServer());
          hash = (37 * hash) + PUBLISH_DATA_AS_PRIVATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPublishDataAsPrivate());
          hash = (37 * hash) + SCRAMBLE_VOICE_DATA_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getScrambleVoiceData());
          hash = (37 * hash) + PROVIDE_BACKFILL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getProvideBackfill());
          hash = (37 * hash) + USE_CUSTOM_TIME_SYNC_SERVER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseCustomTimeSyncServer());
          hash = (37 * hash) + TIME_SYNCH_SERVER_URL_FIELD_NUMBER;
          hash = (53 * hash) + getTimeSynchServerUrl().hashCode();
          hash = (37 * hash) + USE_CUSTOM_DATA_SERVER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseCustomDataServer());
          hash = (37 * hash) + DATA_SERVER_URL_FIELD_NUMBER;
          hash = (53 * hash) + getDataServerUrl().hashCode();
          hash = (37 * hash) + AUTO_DELETE_DATA_FILES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getAutoDeleteDataFiles());
          hash = (37 * hash) + STORAGE_SPACE_ALLOWANCE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getStorageSpaceAllowance()));
          hash = (37 * hash) + USE_SD_CARD_FOR_DATA_STORAGE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseSdCardForDataStorage());
          hash = (37 * hash) + USE_LOCATION_SERVICES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseLocationServices());
          hash = (37 * hash) + USE_LATITUDE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getUseLatitude()));
          hash = (37 * hash) + USE_LONGITUDE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getUseLongitude()));
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 21:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 21:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            audioSamplingRate_ = 0;

            audioSourceTuning_ = 0;

            additionalInputSensors_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            automaticallyRecord_ = false;

            launchAtPowerUp_ = false;

            redvoxId_ = "";

            pushToServer_ = false;

            publishDataAsPrivate_ = false;

            scrambleVoiceData_ = false;

            provideBackfill_ = false;

            useCustomTimeSyncServer_ = false;

            timeSynchServerUrl_ = "";

            useCustomDataServer_ = false;

            dataServerUrl_ = "";

            autoDeleteDataFiles_ = false;

            storageSpaceAllowance_ = 0D;

            useSdCardForDataStorage_ = false;

            useLocationServices_ = false;

            useLatitude_ = 0D;

            useLongitude_ = 0D;

            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.audioSamplingRate_ = audioSamplingRate_;
            result.audioSourceTuning_ = audioSourceTuning_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              additionalInputSensors_ = java.util.Collections.unmodifiableList(additionalInputSensors_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.additionalInputSensors_ = additionalInputSensors_;
            result.automaticallyRecord_ = automaticallyRecord_;
            result.launchAtPowerUp_ = launchAtPowerUp_;
            result.redvoxId_ = redvoxId_;
            result.pushToServer_ = pushToServer_;
            result.publishDataAsPrivate_ = publishDataAsPrivate_;
            result.scrambleVoiceData_ = scrambleVoiceData_;
            result.provideBackfill_ = provideBackfill_;
            result.useCustomTimeSyncServer_ = useCustomTimeSyncServer_;
            result.timeSynchServerUrl_ = timeSynchServerUrl_;
            result.useCustomDataServer_ = useCustomDataServer_;
            result.dataServerUrl_ = dataServerUrl_;
            result.autoDeleteDataFiles_ = autoDeleteDataFiles_;
            result.storageSpaceAllowance_ = storageSpaceAllowance_;
            result.useSdCardForDataStorage_ = useSdCardForDataStorage_;
            result.useLocationServices_ = useLocationServices_;
            result.useLatitude_ = useLatitude_;
            result.useLongitude_ = useLongitude_;
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDefaultInstance()) return this;
            if (other.audioSamplingRate_ != 0) {
              setAudioSamplingRateValue(other.getAudioSamplingRateValue());
            }
            if (other.audioSourceTuning_ != 0) {
              setAudioSourceTuningValue(other.getAudioSourceTuningValue());
            }
            if (!other.additionalInputSensors_.isEmpty()) {
              if (additionalInputSensors_.isEmpty()) {
                additionalInputSensors_ = other.additionalInputSensors_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureAdditionalInputSensorsIsMutable();
                additionalInputSensors_.addAll(other.additionalInputSensors_);
              }
              onChanged();
            }
            if (other.getAutomaticallyRecord() != false) {
              setAutomaticallyRecord(other.getAutomaticallyRecord());
            }
            if (other.getLaunchAtPowerUp() != false) {
              setLaunchAtPowerUp(other.getLaunchAtPowerUp());
            }
            if (!other.getRedvoxId().isEmpty()) {
              redvoxId_ = other.redvoxId_;
              onChanged();
            }
            if (other.getPushToServer() != false) {
              setPushToServer(other.getPushToServer());
            }
            if (other.getPublishDataAsPrivate() != false) {
              setPublishDataAsPrivate(other.getPublishDataAsPrivate());
            }
            if (other.getScrambleVoiceData() != false) {
              setScrambleVoiceData(other.getScrambleVoiceData());
            }
            if (other.getProvideBackfill() != false) {
              setProvideBackfill(other.getProvideBackfill());
            }
            if (other.getUseCustomTimeSyncServer() != false) {
              setUseCustomTimeSyncServer(other.getUseCustomTimeSyncServer());
            }
            if (!other.getTimeSynchServerUrl().isEmpty()) {
              timeSynchServerUrl_ = other.timeSynchServerUrl_;
              onChanged();
            }
            if (other.getUseCustomDataServer() != false) {
              setUseCustomDataServer(other.getUseCustomDataServer());
            }
            if (!other.getDataServerUrl().isEmpty()) {
              dataServerUrl_ = other.dataServerUrl_;
              onChanged();
            }
            if (other.getAutoDeleteDataFiles() != false) {
              setAutoDeleteDataFiles(other.getAutoDeleteDataFiles());
            }
            if (other.getStorageSpaceAllowance() != 0D) {
              setStorageSpaceAllowance(other.getStorageSpaceAllowance());
            }
            if (other.getUseSdCardForDataStorage() != false) {
              setUseSdCardForDataStorage(other.getUseSdCardForDataStorage());
            }
            if (other.getUseLocationServices() != false) {
              setUseLocationServices(other.getUseLocationServices());
            }
            if (other.getUseLatitude() != 0D) {
              setUseLatitude(other.getUseLatitude());
            }
            if (other.getUseLongitude() != 0D) {
              setUseLongitude(other.getUseLongitude());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int audioSamplingRate_ = 0;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
           */
          public int getAudioSamplingRateValue() {
            return audioSamplingRate_;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
           */
          public Builder setAudioSamplingRateValue(int value) {
            audioSamplingRate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate getAudioSamplingRate() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate.valueOf(audioSamplingRate_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate.UNRECOGNIZED : result;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
           */
          public Builder setAudioSamplingRate(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            audioSamplingRate_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSamplingRate audio_sampling_rate = 1;</code>
           */
          public Builder clearAudioSamplingRate() {
            
            audioSamplingRate_ = 0;
            onChanged();
            return this;
          }

          private int audioSourceTuning_ = 0;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public int getAudioSourceTuningValue() {
            return audioSourceTuning_;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public Builder setAudioSourceTuningValue(int value) {
            audioSourceTuning_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning getAudioSourceTuning() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning.valueOf(audioSourceTuning_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning.UNRECOGNIZED : result;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public Builder setAudioSourceTuning(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            audioSourceTuning_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public Builder clearAudioSourceTuning() {
            
            audioSourceTuning_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> additionalInputSensors_ =
            java.util.Collections.emptyList();
          private void ensureAdditionalInputSensorsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              additionalInputSensors_ = new java.util.ArrayList<java.lang.Integer>(additionalInputSensors_);
              bitField0_ |= 0x00000004;
            }
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor> getAdditionalInputSensorsList() {
            return new com.google.protobuf.Internal.ListAdapter<
                java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor>(additionalInputSensors_, additionalInputSensors_converter_);
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public int getAdditionalInputSensorsCount() {
            return additionalInputSensors_.size();
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor getAdditionalInputSensors(int index) {
            return additionalInputSensors_converter_.convert(additionalInputSensors_.get(index));
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder setAdditionalInputSensors(
              int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.set(index, value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAdditionalInputSensors(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.add(value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAllAdditionalInputSensors(
              java.lang.Iterable<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor> values) {
            ensureAdditionalInputSensorsIsMutable();
            for (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor value : values) {
              additionalInputSensors_.add(value.getNumber());
            }
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder clearAdditionalInputSensors() {
            additionalInputSensors_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public java.util.List<java.lang.Integer>
          getAdditionalInputSensorsValueList() {
            return java.util.Collections.unmodifiableList(additionalInputSensors_);
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public int getAdditionalInputSensorsValue(int index) {
            return additionalInputSensors_.get(index);
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder setAdditionalInputSensorsValue(
              int index, int value) {
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAdditionalInputSensorsValue(int value) {
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAllAdditionalInputSensorsValue(
              java.lang.Iterable<java.lang.Integer> values) {
            ensureAdditionalInputSensorsIsMutable();
            for (int value : values) {
              additionalInputSensors_.add(value);
            }
            onChanged();
            return this;
          }

          private boolean automaticallyRecord_ ;
          /**
           * <code>bool automatically_record = 4;</code>
           */
          public boolean getAutomaticallyRecord() {
            return automaticallyRecord_;
          }
          /**
           * <code>bool automatically_record = 4;</code>
           */
          public Builder setAutomaticallyRecord(boolean value) {
            
            automaticallyRecord_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool automatically_record = 4;</code>
           */
          public Builder clearAutomaticallyRecord() {
            
            automaticallyRecord_ = false;
            onChanged();
            return this;
          }

          private boolean launchAtPowerUp_ ;
          /**
           * <code>bool launch_at_power_up = 5;</code>
           */
          public boolean getLaunchAtPowerUp() {
            return launchAtPowerUp_;
          }
          /**
           * <code>bool launch_at_power_up = 5;</code>
           */
          public Builder setLaunchAtPowerUp(boolean value) {
            
            launchAtPowerUp_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool launch_at_power_up = 5;</code>
           */
          public Builder clearLaunchAtPowerUp() {
            
            launchAtPowerUp_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object redvoxId_ = "";
          /**
           * <code>string redvox_id = 6;</code>
           */
          public java.lang.String getRedvoxId() {
            java.lang.Object ref = redvoxId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              redvoxId_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public com.google.protobuf.ByteString
              getRedvoxIdBytes() {
            java.lang.Object ref = redvoxId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              redvoxId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public Builder setRedvoxId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            redvoxId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public Builder clearRedvoxId() {
            
            redvoxId_ = getDefaultInstance().getRedvoxId();
            onChanged();
            return this;
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public Builder setRedvoxIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            redvoxId_ = value;
            onChanged();
            return this;
          }

          private boolean pushToServer_ ;
          /**
           * <code>bool push_to_server = 7;</code>
           */
          public boolean getPushToServer() {
            return pushToServer_;
          }
          /**
           * <code>bool push_to_server = 7;</code>
           */
          public Builder setPushToServer(boolean value) {
            
            pushToServer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool push_to_server = 7;</code>
           */
          public Builder clearPushToServer() {
            
            pushToServer_ = false;
            onChanged();
            return this;
          }

          private boolean publishDataAsPrivate_ ;
          /**
           * <code>bool publish_data_as_private = 8;</code>
           */
          public boolean getPublishDataAsPrivate() {
            return publishDataAsPrivate_;
          }
          /**
           * <code>bool publish_data_as_private = 8;</code>
           */
          public Builder setPublishDataAsPrivate(boolean value) {
            
            publishDataAsPrivate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool publish_data_as_private = 8;</code>
           */
          public Builder clearPublishDataAsPrivate() {
            
            publishDataAsPrivate_ = false;
            onChanged();
            return this;
          }

          private boolean scrambleVoiceData_ ;
          /**
           * <code>bool scramble_voice_data = 9;</code>
           */
          public boolean getScrambleVoiceData() {
            return scrambleVoiceData_;
          }
          /**
           * <code>bool scramble_voice_data = 9;</code>
           */
          public Builder setScrambleVoiceData(boolean value) {
            
            scrambleVoiceData_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool scramble_voice_data = 9;</code>
           */
          public Builder clearScrambleVoiceData() {
            
            scrambleVoiceData_ = false;
            onChanged();
            return this;
          }

          private boolean provideBackfill_ ;
          /**
           * <code>bool provide_backfill = 10;</code>
           */
          public boolean getProvideBackfill() {
            return provideBackfill_;
          }
          /**
           * <code>bool provide_backfill = 10;</code>
           */
          public Builder setProvideBackfill(boolean value) {
            
            provideBackfill_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool provide_backfill = 10;</code>
           */
          public Builder clearProvideBackfill() {
            
            provideBackfill_ = false;
            onChanged();
            return this;
          }

          private boolean useCustomTimeSyncServer_ ;
          /**
           * <code>bool use_custom_time_sync_server = 11;</code>
           */
          public boolean getUseCustomTimeSyncServer() {
            return useCustomTimeSyncServer_;
          }
          /**
           * <code>bool use_custom_time_sync_server = 11;</code>
           */
          public Builder setUseCustomTimeSyncServer(boolean value) {
            
            useCustomTimeSyncServer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_custom_time_sync_server = 11;</code>
           */
          public Builder clearUseCustomTimeSyncServer() {
            
            useCustomTimeSyncServer_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object timeSynchServerUrl_ = "";
          /**
           * <code>string time_synch_server_url = 12;</code>
           */
          public java.lang.String getTimeSynchServerUrl() {
            java.lang.Object ref = timeSynchServerUrl_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              timeSynchServerUrl_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string time_synch_server_url = 12;</code>
           */
          public com.google.protobuf.ByteString
              getTimeSynchServerUrlBytes() {
            java.lang.Object ref = timeSynchServerUrl_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              timeSynchServerUrl_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string time_synch_server_url = 12;</code>
           */
          public Builder setTimeSynchServerUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            timeSynchServerUrl_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string time_synch_server_url = 12;</code>
           */
          public Builder clearTimeSynchServerUrl() {
            
            timeSynchServerUrl_ = getDefaultInstance().getTimeSynchServerUrl();
            onChanged();
            return this;
          }
          /**
           * <code>string time_synch_server_url = 12;</code>
           */
          public Builder setTimeSynchServerUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            timeSynchServerUrl_ = value;
            onChanged();
            return this;
          }

          private boolean useCustomDataServer_ ;
          /**
           * <code>bool use_custom_data_server = 13;</code>
           */
          public boolean getUseCustomDataServer() {
            return useCustomDataServer_;
          }
          /**
           * <code>bool use_custom_data_server = 13;</code>
           */
          public Builder setUseCustomDataServer(boolean value) {
            
            useCustomDataServer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_custom_data_server = 13;</code>
           */
          public Builder clearUseCustomDataServer() {
            
            useCustomDataServer_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object dataServerUrl_ = "";
          /**
           * <code>string data_server_url = 14;</code>
           */
          public java.lang.String getDataServerUrl() {
            java.lang.Object ref = dataServerUrl_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              dataServerUrl_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public com.google.protobuf.ByteString
              getDataServerUrlBytes() {
            java.lang.Object ref = dataServerUrl_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              dataServerUrl_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public Builder setDataServerUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            dataServerUrl_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public Builder clearDataServerUrl() {
            
            dataServerUrl_ = getDefaultInstance().getDataServerUrl();
            onChanged();
            return this;
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public Builder setDataServerUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            dataServerUrl_ = value;
            onChanged();
            return this;
          }

          private boolean autoDeleteDataFiles_ ;
          /**
           * <code>bool auto_delete_data_files = 15;</code>
           */
          public boolean getAutoDeleteDataFiles() {
            return autoDeleteDataFiles_;
          }
          /**
           * <code>bool auto_delete_data_files = 15;</code>
           */
          public Builder setAutoDeleteDataFiles(boolean value) {
            
            autoDeleteDataFiles_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool auto_delete_data_files = 15;</code>
           */
          public Builder clearAutoDeleteDataFiles() {
            
            autoDeleteDataFiles_ = false;
            onChanged();
            return this;
          }

          private double storageSpaceAllowance_ ;
          /**
           * <code>double storage_space_allowance = 16;</code>
           */
          public double getStorageSpaceAllowance() {
            return storageSpaceAllowance_;
          }
          /**
           * <code>double storage_space_allowance = 16;</code>
           */
          public Builder setStorageSpaceAllowance(double value) {
            
            storageSpaceAllowance_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double storage_space_allowance = 16;</code>
           */
          public Builder clearStorageSpaceAllowance() {
            
            storageSpaceAllowance_ = 0D;
            onChanged();
            return this;
          }

          private boolean useSdCardForDataStorage_ ;
          /**
           * <code>bool use_sd_card_for_data_storage = 17;</code>
           */
          public boolean getUseSdCardForDataStorage() {
            return useSdCardForDataStorage_;
          }
          /**
           * <code>bool use_sd_card_for_data_storage = 17;</code>
           */
          public Builder setUseSdCardForDataStorage(boolean value) {
            
            useSdCardForDataStorage_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_sd_card_for_data_storage = 17;</code>
           */
          public Builder clearUseSdCardForDataStorage() {
            
            useSdCardForDataStorage_ = false;
            onChanged();
            return this;
          }

          private boolean useLocationServices_ ;
          /**
           * <code>bool use_location_services = 18;</code>
           */
          public boolean getUseLocationServices() {
            return useLocationServices_;
          }
          /**
           * <code>bool use_location_services = 18;</code>
           */
          public Builder setUseLocationServices(boolean value) {
            
            useLocationServices_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_location_services = 18;</code>
           */
          public Builder clearUseLocationServices() {
            
            useLocationServices_ = false;
            onChanged();
            return this;
          }

          private double useLatitude_ ;
          /**
           * <code>double use_latitude = 19;</code>
           */
          public double getUseLatitude() {
            return useLatitude_;
          }
          /**
           * <code>double use_latitude = 19;</code>
           */
          public Builder setUseLatitude(double value) {
            
            useLatitude_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double use_latitude = 19;</code>
           */
          public Builder clearUseLatitude() {
            
            useLatitude_ = 0D;
            onChanged();
            return this;
          }

          private double useLongitude_ ;
          /**
           * <code>double use_longitude = 20;</code>
           */
          public double getUseLongitude() {
            return useLongitude_;
          }
          /**
           * <code>double use_longitude = 20;</code>
           */
          public Builder setUseLongitude(double value) {
            
            useLongitude_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double use_longitude = 20;</code>
           */
          public Builder clearUseLongitude() {
            
            useLongitude_ = 0D;
            onChanged();
            return this;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AppSettings>
            PARSER = new com.google.protobuf.AbstractParser<AppSettings>() {
          @java.lang.Override
          public AppSettings parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AppSettings(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AppSettings> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AppSettings> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int DEVICE_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object deviceId_;
      /**
       * <pre>
       * The user selectable device id
       * </pre>
       *
       * <code>string device_id = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The user selectable device id
       * </pre>
       *
       * <code>string device_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICE_UUID_FIELD_NUMBER = 2;
      private volatile java.lang.Object deviceUuid_;
      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string device_uuid = 2;</code>
       */
      public java.lang.String getDeviceUuid() {
        java.lang.Object ref = deviceUuid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceUuid_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string device_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceUuidBytes() {
        java.lang.Object ref = deviceUuid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICE_MAKE_FIELD_NUMBER = 3;
      private volatile java.lang.Object deviceMake_;
      /**
       * <pre>
       * Make of the device
       * </pre>
       *
       * <code>string device_make = 3;</code>
       */
      public java.lang.String getDeviceMake() {
        java.lang.Object ref = deviceMake_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceMake_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Make of the device
       * </pre>
       *
       * <code>string device_make = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceMakeBytes() {
        java.lang.Object ref = deviceMake_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceMake_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICE_MODEL_FIELD_NUMBER = 4;
      private volatile java.lang.Object deviceModel_;
      /**
       * <pre>
       * Model of the device
       * </pre>
       *
       * <code>string device_model = 4;</code>
       */
      public java.lang.String getDeviceModel() {
        java.lang.Object ref = deviceModel_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceModel_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Model of the device
       * </pre>
       *
       * <code>string device_model = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceModelBytes() {
        java.lang.Object ref = deviceModel_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceModel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICE_OS_FIELD_NUMBER = 5;
      private int deviceOs_;
      /**
       * <pre>
       * OS of the device
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
       */
      public int getDeviceOsValue() {
        return deviceOs_;
      }
      /**
       * <pre>
       * OS of the device
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType getDeviceOs() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType.valueOf(deviceOs_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType.UNRECOGNIZED : result;
      }

      public static final int DEVICE_OS_VERSION_FIELD_NUMBER = 6;
      private volatile java.lang.Object deviceOsVersion_;
      /**
       * <pre>
       * OS version of the device
       * </pre>
       *
       * <code>string device_os_version = 6;</code>
       */
      public java.lang.String getDeviceOsVersion() {
        java.lang.Object ref = deviceOsVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceOsVersion_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * OS version of the device
       * </pre>
       *
       * <code>string device_os_version = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceOsVersionBytes() {
        java.lang.Object ref = deviceOsVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceOsVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICE_APP_VERSION_FIELD_NUMBER = 7;
      private volatile java.lang.Object deviceAppVersion_;
      /**
       * <pre>
       * App version on the device
       * </pre>
       *
       * <code>string device_app_version = 7;</code>
       */
      public java.lang.String getDeviceAppVersion() {
        java.lang.Object ref = deviceAppVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceAppVersion_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * App version on the device
       * </pre>
       *
       * <code>string device_app_version = 7;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceAppVersionBytes() {
        java.lang.Object ref = deviceAppVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceAppVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int APP_SETTINGS_FIELD_NUMBER = 8;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings appSettings_;
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
       */
      public boolean hasAppSettings() {
        return appSettings_ != null;
      }
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings getAppSettings() {
        return appSettings_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDefaultInstance() : appSettings_;
      }
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder getAppSettingsOrBuilder() {
        return getAppSettings();
      }

      public static final int NETWORK_TYPE_FIELD_NUMBER = 9;
      private int networkType_;
      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
       */
      public int getNetworkTypeValue() {
        return networkType_;
      }
      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType getNetworkType() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType.valueOf(networkType_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType.UNRECOGNIZED : result;
      }

      public static final int NETWORK_STRENGTH_DB_FIELD_NUMBER = 10;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics networkStrengthDb_;
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
       */
      public boolean hasNetworkStrengthDb() {
        return networkStrengthDb_ != null;
      }
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getNetworkStrengthDb() {
        return networkStrengthDb_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : networkStrengthDb_;
      }
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getNetworkStrengthDbOrBuilder() {
        return getNetworkStrengthDb();
      }

      public static final int DEVICE_TEMP_C_FIELD_NUMBER = 11;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics deviceTempC_;
      /**
       * <pre>
       * Temperature of the device in degrees centigrade
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
       */
      public boolean hasDeviceTempC() {
        return deviceTempC_ != null;
      }
      /**
       * <pre>
       * Temperature of the device in degrees centigrade
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDeviceTempC() {
        return deviceTempC_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : deviceTempC_;
      }
      /**
       * <pre>
       * Temperature of the device in degrees centigrade
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getDeviceTempCOrBuilder() {
        return getDeviceTempC();
      }

      public static final int DEVICE_BATTERY_PERCENT_FIELD_NUMBER = 12;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics deviceBatteryPercent_;
      /**
       * <pre>
       * Device battery level as a percentage between 0% and 100%
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
       */
      public boolean hasDeviceBatteryPercent() {
        return deviceBatteryPercent_ != null;
      }
      /**
       * <pre>
       * Device battery level as a percentage between 0% and 100%
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDeviceBatteryPercent() {
        return deviceBatteryPercent_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : deviceBatteryPercent_;
      }
      /**
       * <pre>
       * Device battery level as a percentage between 0% and 100%
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getDeviceBatteryPercentOrBuilder() {
        return getDeviceBatteryPercent();
      }

      public static final int AVAILABLE_RAM_BYTES_FIELD_NUMBER = 13;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics availableRamBytes_;
      /**
       * <pre>
       * Available RAM in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
       */
      public boolean hasAvailableRamBytes() {
        return availableRamBytes_ != null;
      }
      /**
       * <pre>
       * Available RAM in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAvailableRamBytes() {
        return availableRamBytes_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : availableRamBytes_;
      }
      /**
       * <pre>
       * Available RAM in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAvailableRamBytesOrBuilder() {
        return getAvailableRamBytes();
      }

      public static final int AVAILABLE_DISK_BYTES_FIELD_NUMBER = 14;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics availableDiskBytes_;
      /**
       * <pre>
       * Available disk space in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
       */
      public boolean hasAvailableDiskBytes() {
        return availableDiskBytes_ != null;
      }
      /**
       * <pre>
       * Available disk space in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAvailableDiskBytes() {
        return availableDiskBytes_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : availableDiskBytes_;
      }
      /**
       * <pre>
       * Available disk space in bytes
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAvailableDiskBytesOrBuilder() {
        return getAvailableDiskBytes();
      }

      public static final int CPU_UTILIZATION_FIELD_NUMBER = 15;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics cpuUtilization_;
      /**
       * <pre>
       * CPU utilization
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
       */
      public boolean hasCpuUtilization() {
        return cpuUtilization_ != null;
      }
      /**
       * <pre>
       * CPU utilization
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getCpuUtilization() {
        return cpuUtilization_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : cpuUtilization_;
      }
      /**
       * <pre>
       * CPU utilization
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getCpuUtilizationOrBuilder() {
        return getCpuUtilization();
      }

      public static final int METADATA_FIELD_NUMBER = 16;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 16;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getDeviceIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceId_);
        }
        if (!getDeviceUuidBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceUuid_);
        }
        if (!getDeviceMakeBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, deviceMake_);
        }
        if (!getDeviceModelBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, deviceModel_);
        }
        if (deviceOs_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType.ANDROID.getNumber()) {
          output.writeEnum(5, deviceOs_);
        }
        if (!getDeviceOsVersionBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, deviceOsVersion_);
        }
        if (!getDeviceAppVersionBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, deviceAppVersion_);
        }
        if (appSettings_ != null) {
          output.writeMessage(8, getAppSettings());
        }
        if (networkType_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType.WIFI.getNumber()) {
          output.writeEnum(9, networkType_);
        }
        if (networkStrengthDb_ != null) {
          output.writeMessage(10, getNetworkStrengthDb());
        }
        if (deviceTempC_ != null) {
          output.writeMessage(11, getDeviceTempC());
        }
        if (deviceBatteryPercent_ != null) {
          output.writeMessage(12, getDeviceBatteryPercent());
        }
        if (availableRamBytes_ != null) {
          output.writeMessage(13, getAvailableRamBytes());
        }
        if (availableDiskBytes_ != null) {
          output.writeMessage(14, getAvailableDiskBytes());
        }
        if (cpuUtilization_ != null) {
          output.writeMessage(15, getCpuUtilization());
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            16);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getDeviceIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceId_);
        }
        if (!getDeviceUuidBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceUuid_);
        }
        if (!getDeviceMakeBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, deviceMake_);
        }
        if (!getDeviceModelBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, deviceModel_);
        }
        if (deviceOs_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType.ANDROID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, deviceOs_);
        }
        if (!getDeviceOsVersionBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, deviceOsVersion_);
        }
        if (!getDeviceAppVersionBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, deviceAppVersion_);
        }
        if (appSettings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, getAppSettings());
        }
        if (networkType_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType.WIFI.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(9, networkType_);
        }
        if (networkStrengthDb_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, getNetworkStrengthDb());
        }
        if (deviceTempC_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, getDeviceTempC());
        }
        if (deviceBatteryPercent_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, getDeviceBatteryPercent());
        }
        if (availableRamBytes_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, getAvailableRamBytes());
        }
        if (availableDiskBytes_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, getAvailableDiskBytes());
        }
        if (cpuUtilization_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, getCpuUtilization());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(16, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation) obj;

        boolean result = true;
        result = result && getDeviceId()
            .equals(other.getDeviceId());
        result = result && getDeviceUuid()
            .equals(other.getDeviceUuid());
        result = result && getDeviceMake()
            .equals(other.getDeviceMake());
        result = result && getDeviceModel()
            .equals(other.getDeviceModel());
        result = result && deviceOs_ == other.deviceOs_;
        result = result && getDeviceOsVersion()
            .equals(other.getDeviceOsVersion());
        result = result && getDeviceAppVersion()
            .equals(other.getDeviceAppVersion());
        result = result && (hasAppSettings() == other.hasAppSettings());
        if (hasAppSettings()) {
          result = result && getAppSettings()
              .equals(other.getAppSettings());
        }
        result = result && networkType_ == other.networkType_;
        result = result && (hasNetworkStrengthDb() == other.hasNetworkStrengthDb());
        if (hasNetworkStrengthDb()) {
          result = result && getNetworkStrengthDb()
              .equals(other.getNetworkStrengthDb());
        }
        result = result && (hasDeviceTempC() == other.hasDeviceTempC());
        if (hasDeviceTempC()) {
          result = result && getDeviceTempC()
              .equals(other.getDeviceTempC());
        }
        result = result && (hasDeviceBatteryPercent() == other.hasDeviceBatteryPercent());
        if (hasDeviceBatteryPercent()) {
          result = result && getDeviceBatteryPercent()
              .equals(other.getDeviceBatteryPercent());
        }
        result = result && (hasAvailableRamBytes() == other.hasAvailableRamBytes());
        if (hasAvailableRamBytes()) {
          result = result && getAvailableRamBytes()
              .equals(other.getAvailableRamBytes());
        }
        result = result && (hasAvailableDiskBytes() == other.hasAvailableDiskBytes());
        if (hasAvailableDiskBytes()) {
          result = result && getAvailableDiskBytes()
              .equals(other.getAvailableDiskBytes());
        }
        result = result && (hasCpuUtilization() == other.hasCpuUtilization());
        if (hasCpuUtilization()) {
          result = result && getCpuUtilization()
              .equals(other.getCpuUtilization());
        }
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceId().hashCode();
        hash = (37 * hash) + DEVICE_UUID_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceUuid().hashCode();
        hash = (37 * hash) + DEVICE_MAKE_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceMake().hashCode();
        hash = (37 * hash) + DEVICE_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceModel().hashCode();
        hash = (37 * hash) + DEVICE_OS_FIELD_NUMBER;
        hash = (53 * hash) + deviceOs_;
        hash = (37 * hash) + DEVICE_OS_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceOsVersion().hashCode();
        hash = (37 * hash) + DEVICE_APP_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceAppVersion().hashCode();
        if (hasAppSettings()) {
          hash = (37 * hash) + APP_SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getAppSettings().hashCode();
        }
        hash = (37 * hash) + NETWORK_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + networkType_;
        if (hasNetworkStrengthDb()) {
          hash = (37 * hash) + NETWORK_STRENGTH_DB_FIELD_NUMBER;
          hash = (53 * hash) + getNetworkStrengthDb().hashCode();
        }
        if (hasDeviceTempC()) {
          hash = (37 * hash) + DEVICE_TEMP_C_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceTempC().hashCode();
        }
        if (hasDeviceBatteryPercent()) {
          hash = (37 * hash) + DEVICE_BATTERY_PERCENT_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceBatteryPercent().hashCode();
        }
        if (hasAvailableRamBytes()) {
          hash = (37 * hash) + AVAILABLE_RAM_BYTES_FIELD_NUMBER;
          hash = (53 * hash) + getAvailableRamBytes().hashCode();
        }
        if (hasAvailableDiskBytes()) {
          hash = (37 * hash) + AVAILABLE_DISK_BYTES_FIELD_NUMBER;
          hash = (53 * hash) + getAvailableDiskBytes().hashCode();
        }
        if (hasCpuUtilization()) {
          hash = (37 * hash) + CPU_UTILIZATION_FIELD_NUMBER;
          hash = (53 * hash) + getCpuUtilization().hashCode();
        }
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.DeviceInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.DeviceInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 16:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 16:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          deviceId_ = "";

          deviceUuid_ = "";

          deviceMake_ = "";

          deviceModel_ = "";

          deviceOs_ = 0;

          deviceOsVersion_ = "";

          deviceAppVersion_ = "";

          if (appSettingsBuilder_ == null) {
            appSettings_ = null;
          } else {
            appSettings_ = null;
            appSettingsBuilder_ = null;
          }
          networkType_ = 0;

          if (networkStrengthDbBuilder_ == null) {
            networkStrengthDb_ = null;
          } else {
            networkStrengthDb_ = null;
            networkStrengthDbBuilder_ = null;
          }
          if (deviceTempCBuilder_ == null) {
            deviceTempC_ = null;
          } else {
            deviceTempC_ = null;
            deviceTempCBuilder_ = null;
          }
          if (deviceBatteryPercentBuilder_ == null) {
            deviceBatteryPercent_ = null;
          } else {
            deviceBatteryPercent_ = null;
            deviceBatteryPercentBuilder_ = null;
          }
          if (availableRamBytesBuilder_ == null) {
            availableRamBytes_ = null;
          } else {
            availableRamBytes_ = null;
            availableRamBytesBuilder_ = null;
          }
          if (availableDiskBytesBuilder_ == null) {
            availableDiskBytes_ = null;
          } else {
            availableDiskBytes_ = null;
            availableDiskBytesBuilder_ = null;
          }
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilization_ = null;
          } else {
            cpuUtilization_ = null;
            cpuUtilizationBuilder_ = null;
          }
          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.deviceId_ = deviceId_;
          result.deviceUuid_ = deviceUuid_;
          result.deviceMake_ = deviceMake_;
          result.deviceModel_ = deviceModel_;
          result.deviceOs_ = deviceOs_;
          result.deviceOsVersion_ = deviceOsVersion_;
          result.deviceAppVersion_ = deviceAppVersion_;
          if (appSettingsBuilder_ == null) {
            result.appSettings_ = appSettings_;
          } else {
            result.appSettings_ = appSettingsBuilder_.build();
          }
          result.networkType_ = networkType_;
          if (networkStrengthDbBuilder_ == null) {
            result.networkStrengthDb_ = networkStrengthDb_;
          } else {
            result.networkStrengthDb_ = networkStrengthDbBuilder_.build();
          }
          if (deviceTempCBuilder_ == null) {
            result.deviceTempC_ = deviceTempC_;
          } else {
            result.deviceTempC_ = deviceTempCBuilder_.build();
          }
          if (deviceBatteryPercentBuilder_ == null) {
            result.deviceBatteryPercent_ = deviceBatteryPercent_;
          } else {
            result.deviceBatteryPercent_ = deviceBatteryPercentBuilder_.build();
          }
          if (availableRamBytesBuilder_ == null) {
            result.availableRamBytes_ = availableRamBytes_;
          } else {
            result.availableRamBytes_ = availableRamBytesBuilder_.build();
          }
          if (availableDiskBytesBuilder_ == null) {
            result.availableDiskBytes_ = availableDiskBytes_;
          } else {
            result.availableDiskBytes_ = availableDiskBytesBuilder_.build();
          }
          if (cpuUtilizationBuilder_ == null) {
            result.cpuUtilization_ = cpuUtilization_;
          } else {
            result.cpuUtilization_ = cpuUtilizationBuilder_.build();
          }
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDefaultInstance()) return this;
          if (!other.getDeviceId().isEmpty()) {
            deviceId_ = other.deviceId_;
            onChanged();
          }
          if (!other.getDeviceUuid().isEmpty()) {
            deviceUuid_ = other.deviceUuid_;
            onChanged();
          }
          if (!other.getDeviceMake().isEmpty()) {
            deviceMake_ = other.deviceMake_;
            onChanged();
          }
          if (!other.getDeviceModel().isEmpty()) {
            deviceModel_ = other.deviceModel_;
            onChanged();
          }
          if (other.deviceOs_ != 0) {
            setDeviceOsValue(other.getDeviceOsValue());
          }
          if (!other.getDeviceOsVersion().isEmpty()) {
            deviceOsVersion_ = other.deviceOsVersion_;
            onChanged();
          }
          if (!other.getDeviceAppVersion().isEmpty()) {
            deviceAppVersion_ = other.deviceAppVersion_;
            onChanged();
          }
          if (other.hasAppSettings()) {
            mergeAppSettings(other.getAppSettings());
          }
          if (other.networkType_ != 0) {
            setNetworkTypeValue(other.getNetworkTypeValue());
          }
          if (other.hasNetworkStrengthDb()) {
            mergeNetworkStrengthDb(other.getNetworkStrengthDb());
          }
          if (other.hasDeviceTempC()) {
            mergeDeviceTempC(other.getDeviceTempC());
          }
          if (other.hasDeviceBatteryPercent()) {
            mergeDeviceBatteryPercent(other.getDeviceBatteryPercent());
          }
          if (other.hasAvailableRamBytes()) {
            mergeAvailableRamBytes(other.getAvailableRamBytes());
          }
          if (other.hasAvailableDiskBytes()) {
            mergeAvailableDiskBytes(other.getAvailableDiskBytes());
          }
          if (other.hasCpuUtilization()) {
            mergeCpuUtilization(other.getCpuUtilization());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object deviceId_ = "";
        /**
         * <pre>
         * The user selectable device id
         * </pre>
         *
         * <code>string device_id = 1;</code>
         */
        public java.lang.String getDeviceId() {
          java.lang.Object ref = deviceId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The user selectable device id
         * </pre>
         *
         * <code>string device_id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceIdBytes() {
          java.lang.Object ref = deviceId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The user selectable device id
         * </pre>
         *
         * <code>string device_id = 1;</code>
         */
        public Builder setDeviceId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The user selectable device id
         * </pre>
         *
         * <code>string device_id = 1;</code>
         */
        public Builder clearDeviceId() {
          
          deviceId_ = getDefaultInstance().getDeviceId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The user selectable device id
         * </pre>
         *
         * <code>string device_id = 1;</code>
         */
        public Builder setDeviceIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object deviceUuid_ = "";
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string device_uuid = 2;</code>
         */
        public java.lang.String getDeviceUuid() {
          java.lang.Object ref = deviceUuid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceUuid_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string device_uuid = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceUuidBytes() {
          java.lang.Object ref = deviceUuid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceUuid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string device_uuid = 2;</code>
         */
        public Builder setDeviceUuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceUuid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string device_uuid = 2;</code>
         */
        public Builder clearDeviceUuid() {
          
          deviceUuid_ = getDefaultInstance().getDeviceUuid();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string device_uuid = 2;</code>
         */
        public Builder setDeviceUuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceUuid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object deviceMake_ = "";
        /**
         * <pre>
         * Make of the device
         * </pre>
         *
         * <code>string device_make = 3;</code>
         */
        public java.lang.String getDeviceMake() {
          java.lang.Object ref = deviceMake_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceMake_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Make of the device
         * </pre>
         *
         * <code>string device_make = 3;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceMakeBytes() {
          java.lang.Object ref = deviceMake_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceMake_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Make of the device
         * </pre>
         *
         * <code>string device_make = 3;</code>
         */
        public Builder setDeviceMake(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceMake_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Make of the device
         * </pre>
         *
         * <code>string device_make = 3;</code>
         */
        public Builder clearDeviceMake() {
          
          deviceMake_ = getDefaultInstance().getDeviceMake();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Make of the device
         * </pre>
         *
         * <code>string device_make = 3;</code>
         */
        public Builder setDeviceMakeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceMake_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object deviceModel_ = "";
        /**
         * <pre>
         * Model of the device
         * </pre>
         *
         * <code>string device_model = 4;</code>
         */
        public java.lang.String getDeviceModel() {
          java.lang.Object ref = deviceModel_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceModel_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Model of the device
         * </pre>
         *
         * <code>string device_model = 4;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceModelBytes() {
          java.lang.Object ref = deviceModel_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceModel_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Model of the device
         * </pre>
         *
         * <code>string device_model = 4;</code>
         */
        public Builder setDeviceModel(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceModel_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Model of the device
         * </pre>
         *
         * <code>string device_model = 4;</code>
         */
        public Builder clearDeviceModel() {
          
          deviceModel_ = getDefaultInstance().getDeviceModel();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Model of the device
         * </pre>
         *
         * <code>string device_model = 4;</code>
         */
        public Builder setDeviceModelBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceModel_ = value;
          onChanged();
          return this;
        }

        private int deviceOs_ = 0;
        /**
         * <pre>
         * OS of the device
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
         */
        public int getDeviceOsValue() {
          return deviceOs_;
        }
        /**
         * <pre>
         * OS of the device
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
         */
        public Builder setDeviceOsValue(int value) {
          deviceOs_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS of the device
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType getDeviceOs() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType.valueOf(deviceOs_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * OS of the device
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
         */
        public Builder setDeviceOs(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.OsType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          deviceOs_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS of the device
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.OsType device_os = 5;</code>
         */
        public Builder clearDeviceOs() {
          
          deviceOs_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object deviceOsVersion_ = "";
        /**
         * <pre>
         * OS version of the device
         * </pre>
         *
         * <code>string device_os_version = 6;</code>
         */
        public java.lang.String getDeviceOsVersion() {
          java.lang.Object ref = deviceOsVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceOsVersion_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * OS version of the device
         * </pre>
         *
         * <code>string device_os_version = 6;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceOsVersionBytes() {
          java.lang.Object ref = deviceOsVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceOsVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * OS version of the device
         * </pre>
         *
         * <code>string device_os_version = 6;</code>
         */
        public Builder setDeviceOsVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceOsVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS version of the device
         * </pre>
         *
         * <code>string device_os_version = 6;</code>
         */
        public Builder clearDeviceOsVersion() {
          
          deviceOsVersion_ = getDefaultInstance().getDeviceOsVersion();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS version of the device
         * </pre>
         *
         * <code>string device_os_version = 6;</code>
         */
        public Builder setDeviceOsVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceOsVersion_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object deviceAppVersion_ = "";
        /**
         * <pre>
         * App version on the device
         * </pre>
         *
         * <code>string device_app_version = 7;</code>
         */
        public java.lang.String getDeviceAppVersion() {
          java.lang.Object ref = deviceAppVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            deviceAppVersion_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * App version on the device
         * </pre>
         *
         * <code>string device_app_version = 7;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceAppVersionBytes() {
          java.lang.Object ref = deviceAppVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            deviceAppVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * App version on the device
         * </pre>
         *
         * <code>string device_app_version = 7;</code>
         */
        public Builder setDeviceAppVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          deviceAppVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * App version on the device
         * </pre>
         *
         * <code>string device_app_version = 7;</code>
         */
        public Builder clearDeviceAppVersion() {
          
          deviceAppVersion_ = getDefaultInstance().getDeviceAppVersion();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * App version on the device
         * </pre>
         *
         * <code>string device_app_version = 7;</code>
         */
        public Builder setDeviceAppVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          deviceAppVersion_ = value;
          onChanged();
          return this;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings appSettings_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder> appSettingsBuilder_;
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public boolean hasAppSettings() {
          return appSettingsBuilder_ != null || appSettings_ != null;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings getAppSettings() {
          if (appSettingsBuilder_ == null) {
            return appSettings_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDefaultInstance() : appSettings_;
          } else {
            return appSettingsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public Builder setAppSettings(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings value) {
          if (appSettingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            appSettings_ = value;
            onChanged();
          } else {
            appSettingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public Builder setAppSettings(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder builderForValue) {
          if (appSettingsBuilder_ == null) {
            appSettings_ = builderForValue.build();
            onChanged();
          } else {
            appSettingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public Builder mergeAppSettings(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings value) {
          if (appSettingsBuilder_ == null) {
            if (appSettings_ != null) {
              appSettings_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.newBuilder(appSettings_).mergeFrom(value).buildPartial();
            } else {
              appSettings_ = value;
            }
            onChanged();
          } else {
            appSettingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public Builder clearAppSettings() {
          if (appSettingsBuilder_ == null) {
            appSettings_ = null;
            onChanged();
          } else {
            appSettings_ = null;
            appSettingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder getAppSettingsBuilder() {
          
          onChanged();
          return getAppSettingsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder getAppSettingsOrBuilder() {
          if (appSettingsBuilder_ != null) {
            return appSettingsBuilder_.getMessageOrBuilder();
          } else {
            return appSettings_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.getDefaultInstance() : appSettings_;
          }
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.AppSettings app_settings = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder> 
            getAppSettingsFieldBuilder() {
          if (appSettingsBuilder_ == null) {
            appSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettings.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.AppSettingsOrBuilder>(
                    getAppSettings(),
                    getParentForChildren(),
                    isClean());
            appSettings_ = null;
          }
          return appSettingsBuilder_;
        }

        private int networkType_ = 0;
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
         */
        public int getNetworkTypeValue() {
          return networkType_;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
         */
        public Builder setNetworkTypeValue(int value) {
          networkType_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType getNetworkType() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType.valueOf(networkType_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
         */
        public Builder setNetworkType(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.NetworkType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          networkType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation.NetworkType network_type = 9;</code>
         */
        public Builder clearNetworkType() {
          
          networkType_ = 0;
          onChanged();
          return this;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics networkStrengthDb_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> networkStrengthDbBuilder_;
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public boolean hasNetworkStrengthDb() {
          return networkStrengthDbBuilder_ != null || networkStrengthDb_ != null;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getNetworkStrengthDb() {
          if (networkStrengthDbBuilder_ == null) {
            return networkStrengthDb_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : networkStrengthDb_;
          } else {
            return networkStrengthDbBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public Builder setNetworkStrengthDb(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (networkStrengthDbBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            networkStrengthDb_ = value;
            onChanged();
          } else {
            networkStrengthDbBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public Builder setNetworkStrengthDb(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (networkStrengthDbBuilder_ == null) {
            networkStrengthDb_ = builderForValue.build();
            onChanged();
          } else {
            networkStrengthDbBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public Builder mergeNetworkStrengthDb(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (networkStrengthDbBuilder_ == null) {
            if (networkStrengthDb_ != null) {
              networkStrengthDb_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(networkStrengthDb_).mergeFrom(value).buildPartial();
            } else {
              networkStrengthDb_ = value;
            }
            onChanged();
          } else {
            networkStrengthDbBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public Builder clearNetworkStrengthDb() {
          if (networkStrengthDbBuilder_ == null) {
            networkStrengthDb_ = null;
            onChanged();
          } else {
            networkStrengthDb_ = null;
            networkStrengthDbBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getNetworkStrengthDbBuilder() {
          
          onChanged();
          return getNetworkStrengthDbFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getNetworkStrengthDbOrBuilder() {
          if (networkStrengthDbBuilder_ != null) {
            return networkStrengthDbBuilder_.getMessageOrBuilder();
          } else {
            return networkStrengthDb_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : networkStrengthDb_;
          }
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics network_strength_db = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getNetworkStrengthDbFieldBuilder() {
          if (networkStrengthDbBuilder_ == null) {
            networkStrengthDbBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getNetworkStrengthDb(),
                    getParentForChildren(),
                    isClean());
            networkStrengthDb_ = null;
          }
          return networkStrengthDbBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics deviceTempC_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> deviceTempCBuilder_;
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public boolean hasDeviceTempC() {
          return deviceTempCBuilder_ != null || deviceTempC_ != null;
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDeviceTempC() {
          if (deviceTempCBuilder_ == null) {
            return deviceTempC_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : deviceTempC_;
          } else {
            return deviceTempCBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public Builder setDeviceTempC(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (deviceTempCBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deviceTempC_ = value;
            onChanged();
          } else {
            deviceTempCBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public Builder setDeviceTempC(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (deviceTempCBuilder_ == null) {
            deviceTempC_ = builderForValue.build();
            onChanged();
          } else {
            deviceTempCBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public Builder mergeDeviceTempC(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (deviceTempCBuilder_ == null) {
            if (deviceTempC_ != null) {
              deviceTempC_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(deviceTempC_).mergeFrom(value).buildPartial();
            } else {
              deviceTempC_ = value;
            }
            onChanged();
          } else {
            deviceTempCBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public Builder clearDeviceTempC() {
          if (deviceTempCBuilder_ == null) {
            deviceTempC_ = null;
            onChanged();
          } else {
            deviceTempC_ = null;
            deviceTempCBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getDeviceTempCBuilder() {
          
          onChanged();
          return getDeviceTempCFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getDeviceTempCOrBuilder() {
          if (deviceTempCBuilder_ != null) {
            return deviceTempCBuilder_.getMessageOrBuilder();
          } else {
            return deviceTempC_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : deviceTempC_;
          }
        }
        /**
         * <pre>
         * Temperature of the device in degrees centigrade
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_temp_c = 11;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getDeviceTempCFieldBuilder() {
          if (deviceTempCBuilder_ == null) {
            deviceTempCBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getDeviceTempC(),
                    getParentForChildren(),
                    isClean());
            deviceTempC_ = null;
          }
          return deviceTempCBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics deviceBatteryPercent_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> deviceBatteryPercentBuilder_;
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public boolean hasDeviceBatteryPercent() {
          return deviceBatteryPercentBuilder_ != null || deviceBatteryPercent_ != null;
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDeviceBatteryPercent() {
          if (deviceBatteryPercentBuilder_ == null) {
            return deviceBatteryPercent_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : deviceBatteryPercent_;
          } else {
            return deviceBatteryPercentBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public Builder setDeviceBatteryPercent(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (deviceBatteryPercentBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deviceBatteryPercent_ = value;
            onChanged();
          } else {
            deviceBatteryPercentBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public Builder setDeviceBatteryPercent(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (deviceBatteryPercentBuilder_ == null) {
            deviceBatteryPercent_ = builderForValue.build();
            onChanged();
          } else {
            deviceBatteryPercentBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public Builder mergeDeviceBatteryPercent(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (deviceBatteryPercentBuilder_ == null) {
            if (deviceBatteryPercent_ != null) {
              deviceBatteryPercent_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(deviceBatteryPercent_).mergeFrom(value).buildPartial();
            } else {
              deviceBatteryPercent_ = value;
            }
            onChanged();
          } else {
            deviceBatteryPercentBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public Builder clearDeviceBatteryPercent() {
          if (deviceBatteryPercentBuilder_ == null) {
            deviceBatteryPercent_ = null;
            onChanged();
          } else {
            deviceBatteryPercent_ = null;
            deviceBatteryPercentBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getDeviceBatteryPercentBuilder() {
          
          onChanged();
          return getDeviceBatteryPercentFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getDeviceBatteryPercentOrBuilder() {
          if (deviceBatteryPercentBuilder_ != null) {
            return deviceBatteryPercentBuilder_.getMessageOrBuilder();
          } else {
            return deviceBatteryPercent_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : deviceBatteryPercent_;
          }
        }
        /**
         * <pre>
         * Device battery level as a percentage between 0% and 100%
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics device_battery_percent = 12;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getDeviceBatteryPercentFieldBuilder() {
          if (deviceBatteryPercentBuilder_ == null) {
            deviceBatteryPercentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getDeviceBatteryPercent(),
                    getParentForChildren(),
                    isClean());
            deviceBatteryPercent_ = null;
          }
          return deviceBatteryPercentBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics availableRamBytes_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> availableRamBytesBuilder_;
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public boolean hasAvailableRamBytes() {
          return availableRamBytesBuilder_ != null || availableRamBytes_ != null;
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAvailableRamBytes() {
          if (availableRamBytesBuilder_ == null) {
            return availableRamBytes_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : availableRamBytes_;
          } else {
            return availableRamBytesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public Builder setAvailableRamBytes(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (availableRamBytesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            availableRamBytes_ = value;
            onChanged();
          } else {
            availableRamBytesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public Builder setAvailableRamBytes(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (availableRamBytesBuilder_ == null) {
            availableRamBytes_ = builderForValue.build();
            onChanged();
          } else {
            availableRamBytesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public Builder mergeAvailableRamBytes(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (availableRamBytesBuilder_ == null) {
            if (availableRamBytes_ != null) {
              availableRamBytes_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(availableRamBytes_).mergeFrom(value).buildPartial();
            } else {
              availableRamBytes_ = value;
            }
            onChanged();
          } else {
            availableRamBytesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public Builder clearAvailableRamBytes() {
          if (availableRamBytesBuilder_ == null) {
            availableRamBytes_ = null;
            onChanged();
          } else {
            availableRamBytes_ = null;
            availableRamBytesBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getAvailableRamBytesBuilder() {
          
          onChanged();
          return getAvailableRamBytesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAvailableRamBytesOrBuilder() {
          if (availableRamBytesBuilder_ != null) {
            return availableRamBytesBuilder_.getMessageOrBuilder();
          } else {
            return availableRamBytes_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : availableRamBytes_;
          }
        }
        /**
         * <pre>
         * Available RAM in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_ram_bytes = 13;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getAvailableRamBytesFieldBuilder() {
          if (availableRamBytesBuilder_ == null) {
            availableRamBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getAvailableRamBytes(),
                    getParentForChildren(),
                    isClean());
            availableRamBytes_ = null;
          }
          return availableRamBytesBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics availableDiskBytes_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> availableDiskBytesBuilder_;
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public boolean hasAvailableDiskBytes() {
          return availableDiskBytesBuilder_ != null || availableDiskBytes_ != null;
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAvailableDiskBytes() {
          if (availableDiskBytesBuilder_ == null) {
            return availableDiskBytes_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : availableDiskBytes_;
          } else {
            return availableDiskBytesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public Builder setAvailableDiskBytes(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (availableDiskBytesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            availableDiskBytes_ = value;
            onChanged();
          } else {
            availableDiskBytesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public Builder setAvailableDiskBytes(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (availableDiskBytesBuilder_ == null) {
            availableDiskBytes_ = builderForValue.build();
            onChanged();
          } else {
            availableDiskBytesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public Builder mergeAvailableDiskBytes(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (availableDiskBytesBuilder_ == null) {
            if (availableDiskBytes_ != null) {
              availableDiskBytes_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(availableDiskBytes_).mergeFrom(value).buildPartial();
            } else {
              availableDiskBytes_ = value;
            }
            onChanged();
          } else {
            availableDiskBytesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public Builder clearAvailableDiskBytes() {
          if (availableDiskBytesBuilder_ == null) {
            availableDiskBytes_ = null;
            onChanged();
          } else {
            availableDiskBytes_ = null;
            availableDiskBytesBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getAvailableDiskBytesBuilder() {
          
          onChanged();
          return getAvailableDiskBytesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAvailableDiskBytesOrBuilder() {
          if (availableDiskBytesBuilder_ != null) {
            return availableDiskBytesBuilder_.getMessageOrBuilder();
          } else {
            return availableDiskBytes_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : availableDiskBytes_;
          }
        }
        /**
         * <pre>
         * Available disk space in bytes
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics available_disk_bytes = 14;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getAvailableDiskBytesFieldBuilder() {
          if (availableDiskBytesBuilder_ == null) {
            availableDiskBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getAvailableDiskBytes(),
                    getParentForChildren(),
                    isClean());
            availableDiskBytes_ = null;
          }
          return availableDiskBytesBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics cpuUtilization_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> cpuUtilizationBuilder_;
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public boolean hasCpuUtilization() {
          return cpuUtilizationBuilder_ != null || cpuUtilization_ != null;
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getCpuUtilization() {
          if (cpuUtilizationBuilder_ == null) {
            return cpuUtilization_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : cpuUtilization_;
          } else {
            return cpuUtilizationBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public Builder setCpuUtilization(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (cpuUtilizationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cpuUtilization_ = value;
            onChanged();
          } else {
            cpuUtilizationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public Builder setCpuUtilization(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilization_ = builderForValue.build();
            onChanged();
          } else {
            cpuUtilizationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public Builder mergeCpuUtilization(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (cpuUtilizationBuilder_ == null) {
            if (cpuUtilization_ != null) {
              cpuUtilization_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(cpuUtilization_).mergeFrom(value).buildPartial();
            } else {
              cpuUtilization_ = value;
            }
            onChanged();
          } else {
            cpuUtilizationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public Builder clearCpuUtilization() {
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilization_ = null;
            onChanged();
          } else {
            cpuUtilization_ = null;
            cpuUtilizationBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getCpuUtilizationBuilder() {
          
          onChanged();
          return getCpuUtilizationFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getCpuUtilizationOrBuilder() {
          if (cpuUtilizationBuilder_ != null) {
            return cpuUtilizationBuilder_.getMessageOrBuilder();
          } else {
            return cpuUtilization_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : cpuUtilization_;
          }
        }
        /**
         * <pre>
         * CPU utilization
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics cpu_utilization = 15;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getCpuUtilizationFieldBuilder() {
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getCpuUtilization(),
                    getParentForChildren(),
                    isClean());
            cpuUtilization_ = null;
          }
          return cpuUtilizationBuilder_;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 16;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.DeviceInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DeviceInformation>
          PARSER = new com.google.protobuf.AbstractParser<DeviceInformation>() {
        @java.lang.Override
        public DeviceInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeviceInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeviceInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PacketInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.PacketInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Field for if this packet has been backfilled or not
       * </pre>
       *
       * <code>bool is_backfilled = 1;</code>
       */
      boolean getIsBackfilled();

      /**
       * <pre>
       * Field for if this packet is private to the user or not
       * </pre>
       *
       * <code>bool is_private = 2;</code>
       */
      boolean getIsPrivate();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.PacketInformation}
     */
    public  static final class PacketInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.PacketInformation)
        PacketInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PacketInformation.newBuilder() to construct.
      private PacketInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PacketInformation() {
        isBackfilled_ = false;
        isPrivate_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PacketInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                isBackfilled_ = input.readBool();
                break;
              }
              case 16: {

                isPrivate_ = input.readBool();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000004;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder.class);
      }

      private int bitField0_;
      public static final int IS_BACKFILLED_FIELD_NUMBER = 1;
      private boolean isBackfilled_;
      /**
       * <pre>
       * Field for if this packet has been backfilled or not
       * </pre>
       *
       * <code>bool is_backfilled = 1;</code>
       */
      public boolean getIsBackfilled() {
        return isBackfilled_;
      }

      public static final int IS_PRIVATE_FIELD_NUMBER = 2;
      private boolean isPrivate_;
      /**
       * <pre>
       * Field for if this packet is private to the user or not
       * </pre>
       *
       * <code>bool is_private = 2;</code>
       */
      public boolean getIsPrivate() {
        return isPrivate_;
      }

      public static final int METADATA_FIELD_NUMBER = 3;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (isBackfilled_ != false) {
          output.writeBool(1, isBackfilled_);
        }
        if (isPrivate_ != false) {
          output.writeBool(2, isPrivate_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            3);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (isBackfilled_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isBackfilled_);
        }
        if (isPrivate_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, isPrivate_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation) obj;

        boolean result = true;
        result = result && (getIsBackfilled()
            == other.getIsBackfilled());
        result = result && (getIsPrivate()
            == other.getIsPrivate());
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + IS_BACKFILLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsBackfilled());
        hash = (37 * hash) + IS_PRIVATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsPrivate());
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.PacketInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.PacketInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 3:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 3:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isBackfilled_ = false;

          isPrivate_ = false;

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.isBackfilled_ = isBackfilled_;
          result.isPrivate_ = isPrivate_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance()) return this;
          if (other.getIsBackfilled() != false) {
            setIsBackfilled(other.getIsBackfilled());
          }
          if (other.getIsPrivate() != false) {
            setIsPrivate(other.getIsPrivate());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isBackfilled_ ;
        /**
         * <pre>
         * Field for if this packet has been backfilled or not
         * </pre>
         *
         * <code>bool is_backfilled = 1;</code>
         */
        public boolean getIsBackfilled() {
          return isBackfilled_;
        }
        /**
         * <pre>
         * Field for if this packet has been backfilled or not
         * </pre>
         *
         * <code>bool is_backfilled = 1;</code>
         */
        public Builder setIsBackfilled(boolean value) {
          
          isBackfilled_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Field for if this packet has been backfilled or not
         * </pre>
         *
         * <code>bool is_backfilled = 1;</code>
         */
        public Builder clearIsBackfilled() {
          
          isBackfilled_ = false;
          onChanged();
          return this;
        }

        private boolean isPrivate_ ;
        /**
         * <pre>
         * Field for if this packet is private to the user or not
         * </pre>
         *
         * <code>bool is_private = 2;</code>
         */
        public boolean getIsPrivate() {
          return isPrivate_;
        }
        /**
         * <pre>
         * Field for if this packet is private to the user or not
         * </pre>
         *
         * <code>bool is_private = 2;</code>
         */
        public Builder setIsPrivate(boolean value) {
          
          isPrivate_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Field for if this packet is private to the user or not
         * </pre>
         *
         * <code>bool is_private = 2;</code>
         */
        public Builder clearIsPrivate() {
          
          isPrivate_ = false;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.PacketInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.PacketInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PacketInformation>
          PARSER = new com.google.protobuf.AbstractParser<PacketInformation>() {
        @java.lang.Override
        public PacketInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PacketInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PacketInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PacketInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TimingInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.TimingInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Start timestamp of the packet using the wall clock (corresponding to first microphone sample)
       * </pre>
       *
       * <code>double packet_start_ts_us_wall = 1;</code>
       */
      double getPacketStartTsUsWall();

      /**
       * <pre>
       * Start timestamp of the packet using machine time (corresponding to the first microphone sample)
       * </pre>
       *
       * <code>double packet_start_ts_us_mach = 2;</code>
       */
      double getPacketStartTsUsMach();

      /**
       * <pre>
       * End timestamp of the packet using the wall clock (corresponding to the last microphone sample)
       * </pre>
       *
       * <code>double packet_end_ts_us_wall = 3;</code>
       */
      double getPacketEndTsUsWall();

      /**
       * <pre>
       * End timestamp of the packet using machine time (corresponding to the last microphone sample)
       * </pre>
       *
       * <code>double packet_end_ts_us_mach = 4;</code>
       */
      double getPacketEndTsUsMach();

      /**
       * <pre>
       * Timestamp that the packet arrived at the acquisition server
       * </pre>
       *
       * <code>double server_acquisition_arrival_ts_us = 5;</code>
       */
      double getServerAcquisitionArrivalTsUs();

      /**
       * <pre>
       * The start of the app as machine time
       * </pre>
       *
       * <code>double app_start_ts_us_mach = 6;</code>
       */
      double getAppStartTsUsMach();

      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> 
          getSynchExchangesList();
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getSynchExchanges(int index);
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      int getSynchExchangesCount();
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      java.util.List<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
          getSynchExchangesOrBuilderList();
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder getSynchExchangesOrBuilder(
          int index);

      /**
       * <pre>
       * The best latency as determined from the synch params
       * </pre>
       *
       * <code>double best_latency_us = 8;</code>
       */
      double getBestLatencyUs();

      /**
       * <pre>
       * The best offset as determined from the synch params
       * </pre>
       *
       * <code>double best_offset_us = 9;</code>
       */
      double getBestOffsetUs();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation}
     */
    public  static final class TimingInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.TimingInformation)
        TimingInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TimingInformation.newBuilder() to construct.
      private TimingInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TimingInformation() {
        packetStartTsUsWall_ = 0D;
        packetStartTsUsMach_ = 0D;
        packetEndTsUsWall_ = 0D;
        packetEndTsUsMach_ = 0D;
        serverAcquisitionArrivalTsUs_ = 0D;
        appStartTsUsMach_ = 0D;
        synchExchanges_ = java.util.Collections.emptyList();
        bestLatencyUs_ = 0D;
        bestOffsetUs_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TimingInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {

                packetStartTsUsWall_ = input.readDouble();
                break;
              }
              case 17: {

                packetStartTsUsMach_ = input.readDouble();
                break;
              }
              case 25: {

                packetEndTsUsWall_ = input.readDouble();
                break;
              }
              case 33: {

                packetEndTsUsMach_ = input.readDouble();
                break;
              }
              case 41: {

                serverAcquisitionArrivalTsUs_ = input.readDouble();
                break;
              }
              case 49: {

                appStartTsUsMach_ = input.readDouble();
                break;
              }
              case 58: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  synchExchanges_ = new java.util.ArrayList<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange>();
                  mutable_bitField0_ |= 0x00000040;
                }
                synchExchanges_.add(
                    input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.parser(), extensionRegistry));
                break;
              }
              case 65: {

                bestLatencyUs_ = input.readDouble();
                break;
              }
              case 73: {

                bestOffsetUs_ = input.readDouble();
                break;
              }
              case 82: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000200;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            synchExchanges_ = java.util.Collections.unmodifiableList(synchExchanges_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder.class);
      }

      public interface SynchExchangeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>double a1 = 1;</code>
         */
        double getA1();

        /**
         * <code>double a2 = 2;</code>
         */
        double getA2();

        /**
         * <code>double a3 = 3;</code>
         */
        double getA3();

        /**
         * <code>double b1 = 4;</code>
         */
        double getB1();

        /**
         * <code>double b2 = 5;</code>
         */
        double getB2();

        /**
         * <code>double b3 = 6;</code>
         */
        double getB3();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange}
       */
      public  static final class SynchExchange extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
          SynchExchangeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SynchExchange.newBuilder() to construct.
        private SynchExchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SynchExchange() {
          a1_ = 0D;
          a2_ = 0D;
          a3_ = 0D;
          b1_ = 0D;
          b2_ = 0D;
          b3_ = 0D;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SynchExchange(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {

                  a1_ = input.readDouble();
                  break;
                }
                case 17: {

                  a2_ = input.readDouble();
                  break;
                }
                case 25: {

                  a3_ = input.readDouble();
                  break;
                }
                case 33: {

                  b1_ = input.readDouble();
                  break;
                }
                case 41: {

                  b2_ = input.readDouble();
                  break;
                }
                case 49: {

                  b3_ = input.readDouble();
                  break;
                }
                case 58: {
                  if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000040;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 7:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder.class);
        }

        private int bitField0_;
        public static final int A1_FIELD_NUMBER = 1;
        private double a1_;
        /**
         * <code>double a1 = 1;</code>
         */
        public double getA1() {
          return a1_;
        }

        public static final int A2_FIELD_NUMBER = 2;
        private double a2_;
        /**
         * <code>double a2 = 2;</code>
         */
        public double getA2() {
          return a2_;
        }

        public static final int A3_FIELD_NUMBER = 3;
        private double a3_;
        /**
         * <code>double a3 = 3;</code>
         */
        public double getA3() {
          return a3_;
        }

        public static final int B1_FIELD_NUMBER = 4;
        private double b1_;
        /**
         * <code>double b1 = 4;</code>
         */
        public double getB1() {
          return b1_;
        }

        public static final int B2_FIELD_NUMBER = 5;
        private double b2_;
        /**
         * <code>double b2 = 5;</code>
         */
        public double getB2() {
          return b2_;
        }

        public static final int B3_FIELD_NUMBER = 6;
        private double b3_;
        /**
         * <code>double b3 = 6;</code>
         */
        public double getB3() {
          return b3_;
        }

        public static final int METADATA_FIELD_NUMBER = 7;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (a1_ != 0D) {
            output.writeDouble(1, a1_);
          }
          if (a2_ != 0D) {
            output.writeDouble(2, a2_);
          }
          if (a3_ != 0D) {
            output.writeDouble(3, a3_);
          }
          if (b1_ != 0D) {
            output.writeDouble(4, b1_);
          }
          if (b2_ != 0D) {
            output.writeDouble(5, b2_);
          }
          if (b3_ != 0D) {
            output.writeDouble(6, b3_);
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              7);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (a1_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(1, a1_);
          }
          if (a2_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, a2_);
          }
          if (a3_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, a3_);
          }
          if (b1_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, b1_);
          }
          if (b2_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(5, b2_);
          }
          if (b3_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(6, b3_);
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange) obj;

          boolean result = true;
          result = result && (
              java.lang.Double.doubleToLongBits(getA1())
              == java.lang.Double.doubleToLongBits(
                  other.getA1()));
          result = result && (
              java.lang.Double.doubleToLongBits(getA2())
              == java.lang.Double.doubleToLongBits(
                  other.getA2()));
          result = result && (
              java.lang.Double.doubleToLongBits(getA3())
              == java.lang.Double.doubleToLongBits(
                  other.getA3()));
          result = result && (
              java.lang.Double.doubleToLongBits(getB1())
              == java.lang.Double.doubleToLongBits(
                  other.getB1()));
          result = result && (
              java.lang.Double.doubleToLongBits(getB2())
              == java.lang.Double.doubleToLongBits(
                  other.getB2()));
          result = result && (
              java.lang.Double.doubleToLongBits(getB3())
              == java.lang.Double.doubleToLongBits(
                  other.getB3()));
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + A1_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getA1()));
          hash = (37 * hash) + A2_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getA2()));
          hash = (37 * hash) + A3_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getA3()));
          hash = (37 * hash) + B1_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getB1()));
          hash = (37 * hash) + B2_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getB2()));
          hash = (37 * hash) + B3_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getB3()));
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 7:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 7:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            a1_ = 0D;

            a2_ = 0D;

            a3_ = 0D;

            b1_ = 0D;

            b2_ = 0D;

            b3_ = 0D;

            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.a1_ = a1_;
            result.a2_ = a2_;
            result.a3_ = a3_;
            result.b1_ = b1_;
            result.b2_ = b2_;
            result.b3_ = b3_;
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance()) return this;
            if (other.getA1() != 0D) {
              setA1(other.getA1());
            }
            if (other.getA2() != 0D) {
              setA2(other.getA2());
            }
            if (other.getA3() != 0D) {
              setA3(other.getA3());
            }
            if (other.getB1() != 0D) {
              setB1(other.getB1());
            }
            if (other.getB2() != 0D) {
              setB2(other.getB2());
            }
            if (other.getB3() != 0D) {
              setB3(other.getB3());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private double a1_ ;
          /**
           * <code>double a1 = 1;</code>
           */
          public double getA1() {
            return a1_;
          }
          /**
           * <code>double a1 = 1;</code>
           */
          public Builder setA1(double value) {
            
            a1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double a1 = 1;</code>
           */
          public Builder clearA1() {
            
            a1_ = 0D;
            onChanged();
            return this;
          }

          private double a2_ ;
          /**
           * <code>double a2 = 2;</code>
           */
          public double getA2() {
            return a2_;
          }
          /**
           * <code>double a2 = 2;</code>
           */
          public Builder setA2(double value) {
            
            a2_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double a2 = 2;</code>
           */
          public Builder clearA2() {
            
            a2_ = 0D;
            onChanged();
            return this;
          }

          private double a3_ ;
          /**
           * <code>double a3 = 3;</code>
           */
          public double getA3() {
            return a3_;
          }
          /**
           * <code>double a3 = 3;</code>
           */
          public Builder setA3(double value) {
            
            a3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double a3 = 3;</code>
           */
          public Builder clearA3() {
            
            a3_ = 0D;
            onChanged();
            return this;
          }

          private double b1_ ;
          /**
           * <code>double b1 = 4;</code>
           */
          public double getB1() {
            return b1_;
          }
          /**
           * <code>double b1 = 4;</code>
           */
          public Builder setB1(double value) {
            
            b1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double b1 = 4;</code>
           */
          public Builder clearB1() {
            
            b1_ = 0D;
            onChanged();
            return this;
          }

          private double b2_ ;
          /**
           * <code>double b2 = 5;</code>
           */
          public double getB2() {
            return b2_;
          }
          /**
           * <code>double b2 = 5;</code>
           */
          public Builder setB2(double value) {
            
            b2_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double b2 = 5;</code>
           */
          public Builder clearB2() {
            
            b2_ = 0D;
            onChanged();
            return this;
          }

          private double b3_ ;
          /**
           * <code>double b3 = 6;</code>
           */
          public double getB3() {
            return b3_;
          }
          /**
           * <code>double b3 = 6;</code>
           */
          public Builder setB3(double value) {
            
            b3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double b3 = 6;</code>
           */
          public Builder clearB3() {
            
            b3_ = 0D;
            onChanged();
            return this;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SynchExchange>
            PARSER = new com.google.protobuf.AbstractParser<SynchExchange>() {
          @java.lang.Override
          public SynchExchange parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SynchExchange(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SynchExchange> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SynchExchange> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int PACKET_START_TS_US_WALL_FIELD_NUMBER = 1;
      private double packetStartTsUsWall_;
      /**
       * <pre>
       * Start timestamp of the packet using the wall clock (corresponding to first microphone sample)
       * </pre>
       *
       * <code>double packet_start_ts_us_wall = 1;</code>
       */
      public double getPacketStartTsUsWall() {
        return packetStartTsUsWall_;
      }

      public static final int PACKET_START_TS_US_MACH_FIELD_NUMBER = 2;
      private double packetStartTsUsMach_;
      /**
       * <pre>
       * Start timestamp of the packet using machine time (corresponding to the first microphone sample)
       * </pre>
       *
       * <code>double packet_start_ts_us_mach = 2;</code>
       */
      public double getPacketStartTsUsMach() {
        return packetStartTsUsMach_;
      }

      public static final int PACKET_END_TS_US_WALL_FIELD_NUMBER = 3;
      private double packetEndTsUsWall_;
      /**
       * <pre>
       * End timestamp of the packet using the wall clock (corresponding to the last microphone sample)
       * </pre>
       *
       * <code>double packet_end_ts_us_wall = 3;</code>
       */
      public double getPacketEndTsUsWall() {
        return packetEndTsUsWall_;
      }

      public static final int PACKET_END_TS_US_MACH_FIELD_NUMBER = 4;
      private double packetEndTsUsMach_;
      /**
       * <pre>
       * End timestamp of the packet using machine time (corresponding to the last microphone sample)
       * </pre>
       *
       * <code>double packet_end_ts_us_mach = 4;</code>
       */
      public double getPacketEndTsUsMach() {
        return packetEndTsUsMach_;
      }

      public static final int SERVER_ACQUISITION_ARRIVAL_TS_US_FIELD_NUMBER = 5;
      private double serverAcquisitionArrivalTsUs_;
      /**
       * <pre>
       * Timestamp that the packet arrived at the acquisition server
       * </pre>
       *
       * <code>double server_acquisition_arrival_ts_us = 5;</code>
       */
      public double getServerAcquisitionArrivalTsUs() {
        return serverAcquisitionArrivalTsUs_;
      }

      public static final int APP_START_TS_US_MACH_FIELD_NUMBER = 6;
      private double appStartTsUsMach_;
      /**
       * <pre>
       * The start of the app as machine time
       * </pre>
       *
       * <code>double app_start_ts_us_mach = 6;</code>
       */
      public double getAppStartTsUsMach() {
        return appStartTsUsMach_;
      }

      public static final int SYNCH_EXCHANGES_FIELD_NUMBER = 7;
      private java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> synchExchanges_;
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> getSynchExchangesList() {
        return synchExchanges_;
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public java.util.List<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
          getSynchExchangesOrBuilderList() {
        return synchExchanges_;
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public int getSynchExchangesCount() {
        return synchExchanges_.size();
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getSynchExchanges(int index) {
        return synchExchanges_.get(index);
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder getSynchExchangesOrBuilder(
          int index) {
        return synchExchanges_.get(index);
      }

      public static final int BEST_LATENCY_US_FIELD_NUMBER = 8;
      private double bestLatencyUs_;
      /**
       * <pre>
       * The best latency as determined from the synch params
       * </pre>
       *
       * <code>double best_latency_us = 8;</code>
       */
      public double getBestLatencyUs() {
        return bestLatencyUs_;
      }

      public static final int BEST_OFFSET_US_FIELD_NUMBER = 9;
      private double bestOffsetUs_;
      /**
       * <pre>
       * The best offset as determined from the synch params
       * </pre>
       *
       * <code>double best_offset_us = 9;</code>
       */
      public double getBestOffsetUs() {
        return bestOffsetUs_;
      }

      public static final int METADATA_FIELD_NUMBER = 10;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (packetStartTsUsWall_ != 0D) {
          output.writeDouble(1, packetStartTsUsWall_);
        }
        if (packetStartTsUsMach_ != 0D) {
          output.writeDouble(2, packetStartTsUsMach_);
        }
        if (packetEndTsUsWall_ != 0D) {
          output.writeDouble(3, packetEndTsUsWall_);
        }
        if (packetEndTsUsMach_ != 0D) {
          output.writeDouble(4, packetEndTsUsMach_);
        }
        if (serverAcquisitionArrivalTsUs_ != 0D) {
          output.writeDouble(5, serverAcquisitionArrivalTsUs_);
        }
        if (appStartTsUsMach_ != 0D) {
          output.writeDouble(6, appStartTsUsMach_);
        }
        for (int i = 0; i < synchExchanges_.size(); i++) {
          output.writeMessage(7, synchExchanges_.get(i));
        }
        if (bestLatencyUs_ != 0D) {
          output.writeDouble(8, bestLatencyUs_);
        }
        if (bestOffsetUs_ != 0D) {
          output.writeDouble(9, bestOffsetUs_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            10);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (packetStartTsUsWall_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, packetStartTsUsWall_);
        }
        if (packetStartTsUsMach_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, packetStartTsUsMach_);
        }
        if (packetEndTsUsWall_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, packetEndTsUsWall_);
        }
        if (packetEndTsUsMach_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, packetEndTsUsMach_);
        }
        if (serverAcquisitionArrivalTsUs_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, serverAcquisitionArrivalTsUs_);
        }
        if (appStartTsUsMach_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, appStartTsUsMach_);
        }
        for (int i = 0; i < synchExchanges_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, synchExchanges_.get(i));
        }
        if (bestLatencyUs_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, bestLatencyUs_);
        }
        if (bestOffsetUs_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, bestOffsetUs_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation) obj;

        boolean result = true;
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketStartTsUsWall())
            == java.lang.Double.doubleToLongBits(
                other.getPacketStartTsUsWall()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketStartTsUsMach())
            == java.lang.Double.doubleToLongBits(
                other.getPacketStartTsUsMach()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketEndTsUsWall())
            == java.lang.Double.doubleToLongBits(
                other.getPacketEndTsUsWall()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketEndTsUsMach())
            == java.lang.Double.doubleToLongBits(
                other.getPacketEndTsUsMach()));
        result = result && (
            java.lang.Double.doubleToLongBits(getServerAcquisitionArrivalTsUs())
            == java.lang.Double.doubleToLongBits(
                other.getServerAcquisitionArrivalTsUs()));
        result = result && (
            java.lang.Double.doubleToLongBits(getAppStartTsUsMach())
            == java.lang.Double.doubleToLongBits(
                other.getAppStartTsUsMach()));
        result = result && getSynchExchangesList()
            .equals(other.getSynchExchangesList());
        result = result && (
            java.lang.Double.doubleToLongBits(getBestLatencyUs())
            == java.lang.Double.doubleToLongBits(
                other.getBestLatencyUs()));
        result = result && (
            java.lang.Double.doubleToLongBits(getBestOffsetUs())
            == java.lang.Double.doubleToLongBits(
                other.getBestOffsetUs()));
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PACKET_START_TS_US_WALL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketStartTsUsWall()));
        hash = (37 * hash) + PACKET_START_TS_US_MACH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketStartTsUsMach()));
        hash = (37 * hash) + PACKET_END_TS_US_WALL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketEndTsUsWall()));
        hash = (37 * hash) + PACKET_END_TS_US_MACH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketEndTsUsMach()));
        hash = (37 * hash) + SERVER_ACQUISITION_ARRIVAL_TS_US_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getServerAcquisitionArrivalTsUs()));
        hash = (37 * hash) + APP_START_TS_US_MACH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAppStartTsUsMach()));
        if (getSynchExchangesCount() > 0) {
          hash = (37 * hash) + SYNCH_EXCHANGES_FIELD_NUMBER;
          hash = (53 * hash) + getSynchExchangesList().hashCode();
        }
        hash = (37 * hash) + BEST_LATENCY_US_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBestLatencyUs()));
        hash = (37 * hash) + BEST_OFFSET_US_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBestOffsetUs()));
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.TimingInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 10:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 10:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSynchExchangesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          packetStartTsUsWall_ = 0D;

          packetStartTsUsMach_ = 0D;

          packetEndTsUsWall_ = 0D;

          packetEndTsUsMach_ = 0D;

          serverAcquisitionArrivalTsUs_ = 0D;

          appStartTsUsMach_ = 0D;

          if (synchExchangesBuilder_ == null) {
            synchExchanges_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            synchExchangesBuilder_.clear();
          }
          bestLatencyUs_ = 0D;

          bestOffsetUs_ = 0D;

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.packetStartTsUsWall_ = packetStartTsUsWall_;
          result.packetStartTsUsMach_ = packetStartTsUsMach_;
          result.packetEndTsUsWall_ = packetEndTsUsWall_;
          result.packetEndTsUsMach_ = packetEndTsUsMach_;
          result.serverAcquisitionArrivalTsUs_ = serverAcquisitionArrivalTsUs_;
          result.appStartTsUsMach_ = appStartTsUsMach_;
          if (synchExchangesBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              synchExchanges_ = java.util.Collections.unmodifiableList(synchExchanges_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.synchExchanges_ = synchExchanges_;
          } else {
            result.synchExchanges_ = synchExchangesBuilder_.build();
          }
          result.bestLatencyUs_ = bestLatencyUs_;
          result.bestOffsetUs_ = bestOffsetUs_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance()) return this;
          if (other.getPacketStartTsUsWall() != 0D) {
            setPacketStartTsUsWall(other.getPacketStartTsUsWall());
          }
          if (other.getPacketStartTsUsMach() != 0D) {
            setPacketStartTsUsMach(other.getPacketStartTsUsMach());
          }
          if (other.getPacketEndTsUsWall() != 0D) {
            setPacketEndTsUsWall(other.getPacketEndTsUsWall());
          }
          if (other.getPacketEndTsUsMach() != 0D) {
            setPacketEndTsUsMach(other.getPacketEndTsUsMach());
          }
          if (other.getServerAcquisitionArrivalTsUs() != 0D) {
            setServerAcquisitionArrivalTsUs(other.getServerAcquisitionArrivalTsUs());
          }
          if (other.getAppStartTsUsMach() != 0D) {
            setAppStartTsUsMach(other.getAppStartTsUsMach());
          }
          if (synchExchangesBuilder_ == null) {
            if (!other.synchExchanges_.isEmpty()) {
              if (synchExchanges_.isEmpty()) {
                synchExchanges_ = other.synchExchanges_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureSynchExchangesIsMutable();
                synchExchanges_.addAll(other.synchExchanges_);
              }
              onChanged();
            }
          } else {
            if (!other.synchExchanges_.isEmpty()) {
              if (synchExchangesBuilder_.isEmpty()) {
                synchExchangesBuilder_.dispose();
                synchExchangesBuilder_ = null;
                synchExchanges_ = other.synchExchanges_;
                bitField0_ = (bitField0_ & ~0x00000040);
                synchExchangesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSynchExchangesFieldBuilder() : null;
              } else {
                synchExchangesBuilder_.addAllMessages(other.synchExchanges_);
              }
            }
          }
          if (other.getBestLatencyUs() != 0D) {
            setBestLatencyUs(other.getBestLatencyUs());
          }
          if (other.getBestOffsetUs() != 0D) {
            setBestOffsetUs(other.getBestOffsetUs());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double packetStartTsUsWall_ ;
        /**
         * <pre>
         * Start timestamp of the packet using the wall clock (corresponding to first microphone sample)
         * </pre>
         *
         * <code>double packet_start_ts_us_wall = 1;</code>
         */
        public double getPacketStartTsUsWall() {
          return packetStartTsUsWall_;
        }
        /**
         * <pre>
         * Start timestamp of the packet using the wall clock (corresponding to first microphone sample)
         * </pre>
         *
         * <code>double packet_start_ts_us_wall = 1;</code>
         */
        public Builder setPacketStartTsUsWall(double value) {
          
          packetStartTsUsWall_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Start timestamp of the packet using the wall clock (corresponding to first microphone sample)
         * </pre>
         *
         * <code>double packet_start_ts_us_wall = 1;</code>
         */
        public Builder clearPacketStartTsUsWall() {
          
          packetStartTsUsWall_ = 0D;
          onChanged();
          return this;
        }

        private double packetStartTsUsMach_ ;
        /**
         * <pre>
         * Start timestamp of the packet using machine time (corresponding to the first microphone sample)
         * </pre>
         *
         * <code>double packet_start_ts_us_mach = 2;</code>
         */
        public double getPacketStartTsUsMach() {
          return packetStartTsUsMach_;
        }
        /**
         * <pre>
         * Start timestamp of the packet using machine time (corresponding to the first microphone sample)
         * </pre>
         *
         * <code>double packet_start_ts_us_mach = 2;</code>
         */
        public Builder setPacketStartTsUsMach(double value) {
          
          packetStartTsUsMach_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Start timestamp of the packet using machine time (corresponding to the first microphone sample)
         * </pre>
         *
         * <code>double packet_start_ts_us_mach = 2;</code>
         */
        public Builder clearPacketStartTsUsMach() {
          
          packetStartTsUsMach_ = 0D;
          onChanged();
          return this;
        }

        private double packetEndTsUsWall_ ;
        /**
         * <pre>
         * End timestamp of the packet using the wall clock (corresponding to the last microphone sample)
         * </pre>
         *
         * <code>double packet_end_ts_us_wall = 3;</code>
         */
        public double getPacketEndTsUsWall() {
          return packetEndTsUsWall_;
        }
        /**
         * <pre>
         * End timestamp of the packet using the wall clock (corresponding to the last microphone sample)
         * </pre>
         *
         * <code>double packet_end_ts_us_wall = 3;</code>
         */
        public Builder setPacketEndTsUsWall(double value) {
          
          packetEndTsUsWall_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * End timestamp of the packet using the wall clock (corresponding to the last microphone sample)
         * </pre>
         *
         * <code>double packet_end_ts_us_wall = 3;</code>
         */
        public Builder clearPacketEndTsUsWall() {
          
          packetEndTsUsWall_ = 0D;
          onChanged();
          return this;
        }

        private double packetEndTsUsMach_ ;
        /**
         * <pre>
         * End timestamp of the packet using machine time (corresponding to the last microphone sample)
         * </pre>
         *
         * <code>double packet_end_ts_us_mach = 4;</code>
         */
        public double getPacketEndTsUsMach() {
          return packetEndTsUsMach_;
        }
        /**
         * <pre>
         * End timestamp of the packet using machine time (corresponding to the last microphone sample)
         * </pre>
         *
         * <code>double packet_end_ts_us_mach = 4;</code>
         */
        public Builder setPacketEndTsUsMach(double value) {
          
          packetEndTsUsMach_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * End timestamp of the packet using machine time (corresponding to the last microphone sample)
         * </pre>
         *
         * <code>double packet_end_ts_us_mach = 4;</code>
         */
        public Builder clearPacketEndTsUsMach() {
          
          packetEndTsUsMach_ = 0D;
          onChanged();
          return this;
        }

        private double serverAcquisitionArrivalTsUs_ ;
        /**
         * <pre>
         * Timestamp that the packet arrived at the acquisition server
         * </pre>
         *
         * <code>double server_acquisition_arrival_ts_us = 5;</code>
         */
        public double getServerAcquisitionArrivalTsUs() {
          return serverAcquisitionArrivalTsUs_;
        }
        /**
         * <pre>
         * Timestamp that the packet arrived at the acquisition server
         * </pre>
         *
         * <code>double server_acquisition_arrival_ts_us = 5;</code>
         */
        public Builder setServerAcquisitionArrivalTsUs(double value) {
          
          serverAcquisitionArrivalTsUs_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Timestamp that the packet arrived at the acquisition server
         * </pre>
         *
         * <code>double server_acquisition_arrival_ts_us = 5;</code>
         */
        public Builder clearServerAcquisitionArrivalTsUs() {
          
          serverAcquisitionArrivalTsUs_ = 0D;
          onChanged();
          return this;
        }

        private double appStartTsUsMach_ ;
        /**
         * <pre>
         * The start of the app as machine time
         * </pre>
         *
         * <code>double app_start_ts_us_mach = 6;</code>
         */
        public double getAppStartTsUsMach() {
          return appStartTsUsMach_;
        }
        /**
         * <pre>
         * The start of the app as machine time
         * </pre>
         *
         * <code>double app_start_ts_us_mach = 6;</code>
         */
        public Builder setAppStartTsUsMach(double value) {
          
          appStartTsUsMach_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The start of the app as machine time
         * </pre>
         *
         * <code>double app_start_ts_us_mach = 6;</code>
         */
        public Builder clearAppStartTsUsMach() {
          
          appStartTsUsMach_ = 0D;
          onChanged();
          return this;
        }

        private java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> synchExchanges_ =
          java.util.Collections.emptyList();
        private void ensureSynchExchangesIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            synchExchanges_ = new java.util.ArrayList<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange>(synchExchanges_);
            bitField0_ |= 0x00000040;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> synchExchangesBuilder_;

        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> getSynchExchangesList() {
          if (synchExchangesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(synchExchanges_);
          } else {
            return synchExchangesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public int getSynchExchangesCount() {
          if (synchExchangesBuilder_ == null) {
            return synchExchanges_.size();
          } else {
            return synchExchangesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getSynchExchanges(int index) {
          if (synchExchangesBuilder_ == null) {
            return synchExchanges_.get(index);
          } else {
            return synchExchangesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder setSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange value) {
          if (synchExchangesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSynchExchangesIsMutable();
            synchExchanges_.set(index, value);
            onChanged();
          } else {
            synchExchangesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder setSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder builderForValue) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.set(index, builderForValue.build());
            onChanged();
          } else {
            synchExchangesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange value) {
          if (synchExchangesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(value);
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange value) {
          if (synchExchangesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(index, value);
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder builderForValue) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(builderForValue.build());
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder builderForValue) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(index, builderForValue.build());
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addAllSynchExchanges(
            java.lang.Iterable<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> values) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, synchExchanges_);
            onChanged();
          } else {
            synchExchangesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder clearSynchExchanges() {
          if (synchExchangesBuilder_ == null) {
            synchExchanges_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            synchExchangesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder removeSynchExchanges(int index) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.remove(index);
            onChanged();
          } else {
            synchExchangesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder getSynchExchangesBuilder(
            int index) {
          return getSynchExchangesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder getSynchExchangesOrBuilder(
            int index) {
          if (synchExchangesBuilder_ == null) {
            return synchExchanges_.get(index);  } else {
            return synchExchangesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public java.util.List<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
             getSynchExchangesOrBuilderList() {
          if (synchExchangesBuilder_ != null) {
            return synchExchangesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(synchExchanges_);
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder addSynchExchangesBuilder() {
          return getSynchExchangesFieldBuilder().addBuilder(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance());
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder addSynchExchangesBuilder(
            int index) {
          return getSynchExchangesFieldBuilder().addBuilder(
              index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance());
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder> 
             getSynchExchangesBuilderList() {
          return getSynchExchangesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
            getSynchExchangesFieldBuilder() {
          if (synchExchangesBuilder_ == null) {
            synchExchangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder>(
                    synchExchanges_,
                    ((bitField0_ & 0x00000040) == 0x00000040),
                    getParentForChildren(),
                    isClean());
            synchExchanges_ = null;
          }
          return synchExchangesBuilder_;
        }

        private double bestLatencyUs_ ;
        /**
         * <pre>
         * The best latency as determined from the synch params
         * </pre>
         *
         * <code>double best_latency_us = 8;</code>
         */
        public double getBestLatencyUs() {
          return bestLatencyUs_;
        }
        /**
         * <pre>
         * The best latency as determined from the synch params
         * </pre>
         *
         * <code>double best_latency_us = 8;</code>
         */
        public Builder setBestLatencyUs(double value) {
          
          bestLatencyUs_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The best latency as determined from the synch params
         * </pre>
         *
         * <code>double best_latency_us = 8;</code>
         */
        public Builder clearBestLatencyUs() {
          
          bestLatencyUs_ = 0D;
          onChanged();
          return this;
        }

        private double bestOffsetUs_ ;
        /**
         * <pre>
         * The best offset as determined from the synch params
         * </pre>
         *
         * <code>double best_offset_us = 9;</code>
         */
        public double getBestOffsetUs() {
          return bestOffsetUs_;
        }
        /**
         * <pre>
         * The best offset as determined from the synch params
         * </pre>
         *
         * <code>double best_offset_us = 9;</code>
         */
        public Builder setBestOffsetUs(double value) {
          
          bestOffsetUs_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The best offset as determined from the synch params
         * </pre>
         *
         * <code>double best_offset_us = 9;</code>
         */
        public Builder clearBestOffsetUs() {
          
          bestOffsetUs_ = 0D;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.TimingInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.TimingInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TimingInformation>
          PARSER = new com.google.protobuf.AbstractParser<TimingInformation>() {
        @java.lang.Override
        public TimingInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimingInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TimingInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TimingInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SensorChannelsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The microphone channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
       */
      boolean hasMicrophoneChannel();
      /**
       * <pre>
       * The microphone channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel getMicrophoneChannel();
      /**
       * <pre>
       * The microphone channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder getMicrophoneChannelOrBuilder();

      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      boolean hasBarometerChannel();
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getBarometerChannel();
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getBarometerChannelOrBuilder();

      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      boolean hasLocationChannel();
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getLocationChannel();
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder getLocationChannelOrBuilder();

      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      boolean hasAccelerometerChannel();
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getAccelerometerChannel();
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getAccelerometerChannelOrBuilder();

      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      boolean hasGyroscopeChannel();
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getGyroscopeChannel();
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getGyroscopeChannelOrBuilder();

      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      boolean hasMagnetometerChannel();
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getMagnetometerChannel();
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getMagnetometerChannelOrBuilder();

      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      boolean hasLightChannel();
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getLightChannel();
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getLightChannelOrBuilder();

      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      boolean hasInfraredChannel();
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getInfraredChannel();
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getInfraredChannelOrBuilder();

      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      boolean hasImageChannel();
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getImageChannel();
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder getImageChannelOrBuilder();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels}
     */
    public  static final class SensorChannels extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels)
        SensorChannelsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SensorChannels.newBuilder() to construct.
      private SensorChannels(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SensorChannels() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SensorChannels(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder subBuilder = null;
                if (microphoneChannel_ != null) {
                  subBuilder = microphoneChannel_.toBuilder();
                }
                microphoneChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(microphoneChannel_);
                  microphoneChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder subBuilder = null;
                if (barometerChannel_ != null) {
                  subBuilder = barometerChannel_.toBuilder();
                }
                barometerChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(barometerChannel_);
                  barometerChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder subBuilder = null;
                if (locationChannel_ != null) {
                  subBuilder = locationChannel_.toBuilder();
                }
                locationChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(locationChannel_);
                  locationChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder subBuilder = null;
                if (accelerometerChannel_ != null) {
                  subBuilder = accelerometerChannel_.toBuilder();
                }
                accelerometerChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(accelerometerChannel_);
                  accelerometerChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder subBuilder = null;
                if (gyroscopeChannel_ != null) {
                  subBuilder = gyroscopeChannel_.toBuilder();
                }
                gyroscopeChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(gyroscopeChannel_);
                  gyroscopeChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder subBuilder = null;
                if (magnetometerChannel_ != null) {
                  subBuilder = magnetometerChannel_.toBuilder();
                }
                magnetometerChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(magnetometerChannel_);
                  magnetometerChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 58: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder subBuilder = null;
                if (lightChannel_ != null) {
                  subBuilder = lightChannel_.toBuilder();
                }
                lightChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lightChannel_);
                  lightChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 66: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder subBuilder = null;
                if (infraredChannel_ != null) {
                  subBuilder = infraredChannel_.toBuilder();
                }
                infraredChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(infraredChannel_);
                  infraredChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 74: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder subBuilder = null;
                if (imageChannel_ != null) {
                  subBuilder = imageChannel_.toBuilder();
                }
                imageChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(imageChannel_);
                  imageChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 82: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000200;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder.class);
      }

      public interface MicrophoneChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the microphone sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the microphone sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * Timestamp of the first microphone sample
         * </pre>
         *
         * <code>double first_sample_ts_us = 2;</code>
         */
        double getFirstSampleTsUs();

        /**
         * <pre>
         * Microphone sample rate in Hz
         * </pre>
         *
         * <code>double sample_rate_hz = 3;</code>
         */
        double getSampleRateHz();

        /**
         * <pre>
         * If audio data has been scrambled to remove voice
         * </pre>
         *
         * <code>bool is_scrambled = 4;</code>
         */
        boolean getIsScrambled();

        /**
         * <pre>
         * List of microphone samples
         * </pre>
         *
         * <code>repeated double samples = 5;</code>
         */
        java.util.List<java.lang.Double> getSamplesList();
        /**
         * <pre>
         * List of microphone samples
         * </pre>
         *
         * <code>repeated double samples = 5;</code>
         */
        int getSamplesCount();
        /**
         * <pre>
         * List of microphone samples
         * </pre>
         *
         * <code>repeated double samples = 5;</code>
         */
        double getSamples(int index);

        /**
         * <pre>
         * Statistics for microphone samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        boolean hasSampleStatistics();
        /**
         * <pre>
         * Statistics for microphone samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleStatistics();
        /**
         * <pre>
         * Statistics for microphone samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleStatisticsOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel}
       */
      public  static final class MicrophoneChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)
          MicrophoneChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MicrophoneChannel.newBuilder() to construct.
        private MicrophoneChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MicrophoneChannel() {
          sensorDescription_ = "";
          firstSampleTsUs_ = 0D;
          sampleRateHz_ = 0D;
          isScrambled_ = false;
          samples_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private MicrophoneChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  firstSampleTsUs_ = input.readDouble();
                  break;
                }
                case 25: {

                  sampleRateHz_ = input.readDouble();
                  break;
                }
                case 32: {

                  isScrambled_ = input.readBool();
                  break;
                }
                case 41: {
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    samples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  samples_.add(input.readDouble());
                  break;
                }
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                    samples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    samples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 50: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleStatistics_ != null) {
                    subBuilder = sampleStatistics_.toBuilder();
                  }
                  sampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleStatistics_);
                    sampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000040;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 7:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the microphone sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the microphone sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FIRST_SAMPLE_TS_US_FIELD_NUMBER = 2;
        private double firstSampleTsUs_;
        /**
         * <pre>
         * Timestamp of the first microphone sample
         * </pre>
         *
         * <code>double first_sample_ts_us = 2;</code>
         */
        public double getFirstSampleTsUs() {
          return firstSampleTsUs_;
        }

        public static final int SAMPLE_RATE_HZ_FIELD_NUMBER = 3;
        private double sampleRateHz_;
        /**
         * <pre>
         * Microphone sample rate in Hz
         * </pre>
         *
         * <code>double sample_rate_hz = 3;</code>
         */
        public double getSampleRateHz() {
          return sampleRateHz_;
        }

        public static final int IS_SCRAMBLED_FIELD_NUMBER = 4;
        private boolean isScrambled_;
        /**
         * <pre>
         * If audio data has been scrambled to remove voice
         * </pre>
         *
         * <code>bool is_scrambled = 4;</code>
         */
        public boolean getIsScrambled() {
          return isScrambled_;
        }

        public static final int SAMPLES_FIELD_NUMBER = 5;
        private java.util.List<java.lang.Double> samples_;
        /**
         * <pre>
         * List of microphone samples
         * </pre>
         *
         * <code>repeated double samples = 5;</code>
         */
        public java.util.List<java.lang.Double>
            getSamplesList() {
          return samples_;
        }
        /**
         * <pre>
         * List of microphone samples
         * </pre>
         *
         * <code>repeated double samples = 5;</code>
         */
        public int getSamplesCount() {
          return samples_.size();
        }
        /**
         * <pre>
         * List of microphone samples
         * </pre>
         *
         * <code>repeated double samples = 5;</code>
         */
        public double getSamples(int index) {
          return samples_.get(index);
        }
        private int samplesMemoizedSerializedSize = -1;

        public static final int SAMPLE_STATISTICS_FIELD_NUMBER = 6;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleStatistics_;
        /**
         * <pre>
         * Statistics for microphone samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        public boolean hasSampleStatistics() {
          return sampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for microphone samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleStatistics() {
          return sampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for microphone samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleStatisticsOrBuilder() {
          return getSampleStatistics();
        }

        public static final int METADATA_FIELD_NUMBER = 7;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (firstSampleTsUs_ != 0D) {
            output.writeDouble(2, firstSampleTsUs_);
          }
          if (sampleRateHz_ != 0D) {
            output.writeDouble(3, sampleRateHz_);
          }
          if (isScrambled_ != false) {
            output.writeBool(4, isScrambled_);
          }
          if (getSamplesList().size() > 0) {
            output.writeUInt32NoTag(42);
            output.writeUInt32NoTag(samplesMemoizedSerializedSize);
          }
          for (int i = 0; i < samples_.size(); i++) {
            output.writeDoubleNoTag(samples_.get(i));
          }
          if (sampleStatistics_ != null) {
            output.writeMessage(6, getSampleStatistics());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              7);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (firstSampleTsUs_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, firstSampleTsUs_);
          }
          if (sampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, sampleRateHz_);
          }
          if (isScrambled_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(4, isScrambled_);
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSamplesList().size();
            size += dataSize;
            if (!getSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            samplesMemoizedSerializedSize = dataSize;
          }
          if (sampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getSampleStatistics());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getFirstSampleTsUs())
              == java.lang.Double.doubleToLongBits(
                  other.getFirstSampleTsUs()));
          result = result && (
              java.lang.Double.doubleToLongBits(getSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getSampleRateHz()));
          result = result && (getIsScrambled()
              == other.getIsScrambled());
          result = result && getSamplesList()
              .equals(other.getSamplesList());
          result = result && (hasSampleStatistics() == other.hasSampleStatistics());
          if (hasSampleStatistics()) {
            result = result && getSampleStatistics()
                .equals(other.getSampleStatistics());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + FIRST_SAMPLE_TS_US_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFirstSampleTsUs()));
          hash = (37 * hash) + SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSampleRateHz()));
          hash = (37 * hash) + IS_SCRAMBLED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsScrambled());
          if (getSamplesCount() > 0) {
            hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSamplesList().hashCode();
          }
          if (hasSampleStatistics()) {
            hash = (37 * hash) + SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleStatistics().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 7:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 7:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            firstSampleTsUs_ = 0D;

            sampleRateHz_ = 0D;

            isScrambled_ = false;

            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            if (sampleStatisticsBuilder_ == null) {
              sampleStatistics_ = null;
            } else {
              sampleStatistics_ = null;
              sampleStatisticsBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.firstSampleTsUs_ = firstSampleTsUs_;
            result.sampleRateHz_ = sampleRateHz_;
            result.isScrambled_ = isScrambled_;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.samples_ = samples_;
            if (sampleStatisticsBuilder_ == null) {
              result.sampleStatistics_ = sampleStatistics_;
            } else {
              result.sampleStatistics_ = sampleStatisticsBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getFirstSampleTsUs() != 0D) {
              setFirstSampleTsUs(other.getFirstSampleTsUs());
            }
            if (other.getSampleRateHz() != 0D) {
              setSampleRateHz(other.getSampleRateHz());
            }
            if (other.getIsScrambled() != false) {
              setIsScrambled(other.getIsScrambled());
            }
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
            if (other.hasSampleStatistics()) {
              mergeSampleStatistics(other.getSampleStatistics());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the microphone sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the microphone sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the microphone sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the microphone sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the microphone sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double firstSampleTsUs_ ;
          /**
           * <pre>
           * Timestamp of the first microphone sample
           * </pre>
           *
           * <code>double first_sample_ts_us = 2;</code>
           */
          public double getFirstSampleTsUs() {
            return firstSampleTsUs_;
          }
          /**
           * <pre>
           * Timestamp of the first microphone sample
           * </pre>
           *
           * <code>double first_sample_ts_us = 2;</code>
           */
          public Builder setFirstSampleTsUs(double value) {
            
            firstSampleTsUs_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Timestamp of the first microphone sample
           * </pre>
           *
           * <code>double first_sample_ts_us = 2;</code>
           */
          public Builder clearFirstSampleTsUs() {
            
            firstSampleTsUs_ = 0D;
            onChanged();
            return this;
          }

          private double sampleRateHz_ ;
          /**
           * <pre>
           * Microphone sample rate in Hz
           * </pre>
           *
           * <code>double sample_rate_hz = 3;</code>
           */
          public double getSampleRateHz() {
            return sampleRateHz_;
          }
          /**
           * <pre>
           * Microphone sample rate in Hz
           * </pre>
           *
           * <code>double sample_rate_hz = 3;</code>
           */
          public Builder setSampleRateHz(double value) {
            
            sampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Microphone sample rate in Hz
           * </pre>
           *
           * <code>double sample_rate_hz = 3;</code>
           */
          public Builder clearSampleRateHz() {
            
            sampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private boolean isScrambled_ ;
          /**
           * <pre>
           * If audio data has been scrambled to remove voice
           * </pre>
           *
           * <code>bool is_scrambled = 4;</code>
           */
          public boolean getIsScrambled() {
            return isScrambled_;
          }
          /**
           * <pre>
           * If audio data has been scrambled to remove voice
           * </pre>
           *
           * <code>bool is_scrambled = 4;</code>
           */
          public Builder setIsScrambled(boolean value) {
            
            isScrambled_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * If audio data has been scrambled to remove voice
           * </pre>
           *
           * <code>bool is_scrambled = 4;</code>
           */
          public Builder clearIsScrambled() {
            
            isScrambled_ = false;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> samples_ = java.util.Collections.emptyList();
          private void ensureSamplesIsMutable() {
            if (!((bitField0_ & 0x00000010) == 0x00000010)) {
              samples_ = new java.util.ArrayList<java.lang.Double>(samples_);
              bitField0_ |= 0x00000010;
             }
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public java.util.List<java.lang.Double>
              getSamplesList() {
            return java.util.Collections.unmodifiableList(samples_);
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public int getSamplesCount() {
            return samples_.size();
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public double getSamples(int index) {
            return samples_.get(index);
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public Builder setSamples(
              int index, double value) {
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public Builder addSamples(double value) {
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public Builder addAllSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * List of microphone samples
           * </pre>
           *
           * <code>repeated double samples = 5;</code>
           */
          public Builder clearSamples() {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public boolean hasSampleStatistics() {
            return sampleStatisticsBuilder_ != null || sampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleStatistics() {
            if (sampleStatisticsBuilder_ == null) {
              return sampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleStatistics_;
            } else {
              return sampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder setSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleStatistics_ = value;
              onChanged();
            } else {
              sampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder setSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleStatisticsBuilder_ == null) {
              sampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder mergeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleStatisticsBuilder_ == null) {
              if (sampleStatistics_ != null) {
                sampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleStatistics_ = value;
              }
              onChanged();
            } else {
              sampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder clearSampleStatistics() {
            if (sampleStatisticsBuilder_ == null) {
              sampleStatistics_ = null;
              onChanged();
            } else {
              sampleStatistics_ = null;
              sampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleStatisticsBuilder() {
            
            onChanged();
            return getSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleStatisticsOrBuilder() {
            if (sampleStatisticsBuilder_ != null) {
              return sampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for microphone samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleStatisticsFieldBuilder() {
            if (sampleStatisticsBuilder_ == null) {
              sampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleStatistics_ = null;
            }
            return sampleStatisticsBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MicrophoneChannel>
            PARSER = new com.google.protobuf.AbstractParser<MicrophoneChannel>() {
          @java.lang.Override
          public MicrophoneChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MicrophoneChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<MicrophoneChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MicrophoneChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface SingleChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        double getMeanSampleRateHz();

        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        java.util.List<java.lang.Double> getSampleTsUsList();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        int getSampleTsUsCount();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        double getSampleTsUs(int index);

        /**
         * <pre>
         * A list of samples
         * </pre>
         *
         * <code>repeated double samples = 4;</code>
         */
        java.util.List<java.lang.Double> getSamplesList();
        /**
         * <pre>
         * A list of samples
         * </pre>
         *
         * <code>repeated double samples = 4;</code>
         */
        int getSamplesCount();
        /**
         * <pre>
         * A list of samples
         * </pre>
         *
         * <code>repeated double samples = 4;</code>
         */
        double getSamples(int index);

        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        boolean hasSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        boolean hasSampleStatistics();
        /**
         * <pre>
         * Statistics for samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleStatistics();
        /**
         * <pre>
         * Statistics for samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleStatisticsOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel}
       */
      public  static final class SingleChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
          SingleChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SingleChannel.newBuilder() to construct.
        private SingleChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SingleChannel() {
          sensorDescription_ = "";
          meanSampleRateHz_ = 0D;
          sampleTsUs_ = java.util.Collections.emptyList();
          samples_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SingleChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  meanSampleRateHz_ = input.readDouble();
                  break;
                }
                case 25: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  sampleTsUs_.add(input.readDouble());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    sampleTsUs_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 33: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    samples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  samples_.add(input.readDouble());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                    samples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    samples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 42: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleRateStatistics_ != null) {
                    subBuilder = sampleRateStatistics_.toBuilder();
                  }
                  sampleRateStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleRateStatistics_);
                    sampleRateStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleStatistics_ != null) {
                    subBuilder = sampleStatistics_.toBuilder();
                  }
                  sampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleStatistics_);
                    sampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000040;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 7:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER = 2;
        private double meanSampleRateHz_;
        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        public double getMeanSampleRateHz() {
          return meanSampleRateHz_;
        }

        public static final int SAMPLE_TS_US_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Double> sampleTsUs_;
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public java.util.List<java.lang.Double>
            getSampleTsUsList() {
          return sampleTsUs_;
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public int getSampleTsUsCount() {
          return sampleTsUs_.size();
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public double getSampleTsUs(int index) {
          return sampleTsUs_.get(index);
        }
        private int sampleTsUsMemoizedSerializedSize = -1;

        public static final int SAMPLES_FIELD_NUMBER = 4;
        private java.util.List<java.lang.Double> samples_;
        /**
         * <pre>
         * A list of samples
         * </pre>
         *
         * <code>repeated double samples = 4;</code>
         */
        public java.util.List<java.lang.Double>
            getSamplesList() {
          return samples_;
        }
        /**
         * <pre>
         * A list of samples
         * </pre>
         *
         * <code>repeated double samples = 4;</code>
         */
        public int getSamplesCount() {
          return samples_.size();
        }
        /**
         * <pre>
         * A list of samples
         * </pre>
         *
         * <code>repeated double samples = 4;</code>
         */
        public double getSamples(int index) {
          return samples_.get(index);
        }
        private int samplesMemoizedSerializedSize = -1;

        public static final int SAMPLE_RATE_STATISTICS_FIELD_NUMBER = 5;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_;
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public boolean hasSampleRateStatistics() {
          return sampleRateStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
          return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
          return getSampleRateStatistics();
        }

        public static final int SAMPLE_STATISTICS_FIELD_NUMBER = 6;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleStatistics_;
        /**
         * <pre>
         * Statistics for samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        public boolean hasSampleStatistics() {
          return sampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleStatistics() {
          return sampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleStatisticsOrBuilder() {
          return getSampleStatistics();
        }

        public static final int METADATA_FIELD_NUMBER = 7;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 7;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            output.writeDouble(2, meanSampleRateHz_);
          }
          if (getSampleTsUsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(sampleTsUsMemoizedSerializedSize);
          }
          for (int i = 0; i < sampleTsUs_.size(); i++) {
            output.writeDoubleNoTag(sampleTsUs_.get(i));
          }
          if (getSamplesList().size() > 0) {
            output.writeUInt32NoTag(34);
            output.writeUInt32NoTag(samplesMemoizedSerializedSize);
          }
          for (int i = 0; i < samples_.size(); i++) {
            output.writeDoubleNoTag(samples_.get(i));
          }
          if (sampleRateStatistics_ != null) {
            output.writeMessage(5, getSampleRateStatistics());
          }
          if (sampleStatistics_ != null) {
            output.writeMessage(6, getSampleStatistics());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              7);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, meanSampleRateHz_);
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSampleTsUsList().size();
            size += dataSize;
            if (!getSampleTsUsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            sampleTsUsMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSamplesList().size();
            size += dataSize;
            if (!getSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            samplesMemoizedSerializedSize = dataSize;
          }
          if (sampleRateStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getSampleRateStatistics());
          }
          if (sampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getSampleStatistics());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getMeanSampleRateHz()));
          result = result && getSampleTsUsList()
              .equals(other.getSampleTsUsList());
          result = result && getSamplesList()
              .equals(other.getSamplesList());
          result = result && (hasSampleRateStatistics() == other.hasSampleRateStatistics());
          if (hasSampleRateStatistics()) {
            result = result && getSampleRateStatistics()
                .equals(other.getSampleRateStatistics());
          }
          result = result && (hasSampleStatistics() == other.hasSampleStatistics());
          if (hasSampleStatistics()) {
            result = result && getSampleStatistics()
                .equals(other.getSampleStatistics());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz()));
          if (getSampleTsUsCount() > 0) {
            hash = (37 * hash) + SAMPLE_TS_US_FIELD_NUMBER;
            hash = (53 * hash) + getSampleTsUsList().hashCode();
          }
          if (getSamplesCount() > 0) {
            hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSamplesList().hashCode();
          }
          if (hasSampleRateStatistics()) {
            hash = (37 * hash) + SAMPLE_RATE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleRateStatistics().hashCode();
          }
          if (hasSampleStatistics()) {
            hash = (37 * hash) + SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleStatistics().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 7:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 7:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            meanSampleRateHz_ = 0D;

            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }
            if (sampleStatisticsBuilder_ == null) {
              sampleStatistics_ = null;
            } else {
              sampleStatistics_ = null;
              sampleStatisticsBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.meanSampleRateHz_ = meanSampleRateHz_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.sampleTsUs_ = sampleTsUs_;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.samples_ = samples_;
            if (sampleRateStatisticsBuilder_ == null) {
              result.sampleRateStatistics_ = sampleRateStatistics_;
            } else {
              result.sampleRateStatistics_ = sampleRateStatisticsBuilder_.build();
            }
            if (sampleStatisticsBuilder_ == null) {
              result.sampleStatistics_ = sampleStatistics_;
            } else {
              result.sampleStatistics_ = sampleStatisticsBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getMeanSampleRateHz() != 0D) {
              setMeanSampleRateHz(other.getMeanSampleRateHz());
            }
            if (!other.sampleTsUs_.isEmpty()) {
              if (sampleTsUs_.isEmpty()) {
                sampleTsUs_ = other.sampleTsUs_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSampleTsUsIsMutable();
                sampleTsUs_.addAll(other.sampleTsUs_);
              }
              onChanged();
            }
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
            if (other.hasSampleRateStatistics()) {
              mergeSampleRateStatistics(other.getSampleRateStatistics());
            }
            if (other.hasSampleStatistics()) {
              mergeSampleStatistics(other.getSampleStatistics());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double meanSampleRateHz_ ;
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public double getMeanSampleRateHz() {
            return meanSampleRateHz_;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder setMeanSampleRateHz(double value) {
            
            meanSampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder clearMeanSampleRateHz() {
            
            meanSampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> sampleTsUs_ = java.util.Collections.emptyList();
          private void ensureSampleTsUsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = new java.util.ArrayList<java.lang.Double>(sampleTsUs_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public java.util.List<java.lang.Double>
              getSampleTsUsList() {
            return java.util.Collections.unmodifiableList(sampleTsUs_);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public int getSampleTsUsCount() {
            return sampleTsUs_.size();
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public double getSampleTsUs(int index) {
            return sampleTsUs_.get(index);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder setSampleTsUs(
              int index, double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addSampleTsUs(double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addAllSampleTsUs(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSampleTsUsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sampleTsUs_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder clearSampleTsUs() {
            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> samples_ = java.util.Collections.emptyList();
          private void ensureSamplesIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = new java.util.ArrayList<java.lang.Double>(samples_);
              bitField0_ |= 0x00000008;
             }
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public java.util.List<java.lang.Double>
              getSamplesList() {
            return java.util.Collections.unmodifiableList(samples_);
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public int getSamplesCount() {
            return samples_.size();
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public double getSamples(int index) {
            return samples_.get(index);
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public Builder setSamples(
              int index, double value) {
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public Builder addSamples(double value) {
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public Builder addAllSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples
           * </pre>
           *
           * <code>repeated double samples = 4;</code>
           */
          public Builder clearSamples() {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleRateStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public boolean hasSampleRateStatistics() {
            return sampleRateStatisticsBuilder_ != null || sampleRateStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            } else {
              return sampleRateStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder setSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleRateStatistics_ = value;
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder setSampleRateStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder mergeSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (sampleRateStatistics_ != null) {
                sampleRateStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleRateStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleRateStatistics_ = value;
              }
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder clearSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
              onChanged();
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleRateStatisticsBuilder() {
            
            onChanged();
            return getSampleRateStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
            if (sampleRateStatisticsBuilder_ != null) {
              return sampleRateStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleRateStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleRateStatisticsFieldBuilder() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleRateStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleRateStatistics_ = null;
            }
            return sampleRateStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public boolean hasSampleStatistics() {
            return sampleStatisticsBuilder_ != null || sampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleStatistics() {
            if (sampleStatisticsBuilder_ == null) {
              return sampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleStatistics_;
            } else {
              return sampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder setSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleStatistics_ = value;
              onChanged();
            } else {
              sampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder setSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleStatisticsBuilder_ == null) {
              sampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder mergeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleStatisticsBuilder_ == null) {
              if (sampleStatistics_ != null) {
                sampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleStatistics_ = value;
              }
              onChanged();
            } else {
              sampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public Builder clearSampleStatistics() {
            if (sampleStatisticsBuilder_ == null) {
              sampleStatistics_ = null;
              onChanged();
            } else {
              sampleStatistics_ = null;
              sampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleStatisticsBuilder() {
            
            onChanged();
            return getSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleStatisticsOrBuilder() {
            if (sampleStatisticsBuilder_ != null) {
              return sampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_statistics = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleStatisticsFieldBuilder() {
            if (sampleStatisticsBuilder_ == null) {
              sampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleStatistics_ = null;
            }
            return sampleStatisticsBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 7;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SingleChannel>
            PARSER = new com.google.protobuf.AbstractParser<SingleChannel>() {
          @java.lang.Override
          public SingleChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SingleChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SingleChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SingleChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface LocationChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        double getMeanSampleRateHz();

        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        java.util.List<java.lang.Double> getSampleTsUsList();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        int getSampleTsUsCount();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        double getSampleTsUs(int index);

        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>repeated double latitude_samples = 4;</code>
         */
        java.util.List<java.lang.Double> getLatitudeSamplesList();
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>repeated double latitude_samples = 4;</code>
         */
        int getLatitudeSamplesCount();
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>repeated double latitude_samples = 4;</code>
         */
        double getLatitudeSamples(int index);

        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>repeated double longitude_samples = 5;</code>
         */
        java.util.List<java.lang.Double> getLongitudeSamplesList();
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>repeated double longitude_samples = 5;</code>
         */
        int getLongitudeSamplesCount();
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>repeated double longitude_samples = 5;</code>
         */
        double getLongitudeSamples(int index);

        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>repeated double altitude_samples = 6;</code>
         */
        java.util.List<java.lang.Double> getAltitudeSamplesList();
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>repeated double altitude_samples = 6;</code>
         */
        int getAltitudeSamplesCount();
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>repeated double altitude_samples = 6;</code>
         */
        double getAltitudeSamples(int index);

        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>repeated double speed_samples = 7;</code>
         */
        java.util.List<java.lang.Double> getSpeedSamplesList();
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>repeated double speed_samples = 7;</code>
         */
        int getSpeedSamplesCount();
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>repeated double speed_samples = 7;</code>
         */
        double getSpeedSamples(int index);

        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>repeated double accuracy_samples = 8;</code>
         */
        java.util.List<java.lang.Double> getAccuracySamplesList();
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>repeated double accuracy_samples = 8;</code>
         */
        int getAccuracySamplesCount();
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>repeated double accuracy_samples = 8;</code>
         */
        double getAccuracySamples(int index);

        /**
         * <pre>
         * Have location permissions been granted by the user?
         * </pre>
         *
         * <code>bool location_permissions_granted = 9;</code>
         */
        boolean getLocationPermissionsGranted();

        /**
         * <pre>
         * Has location services been requested by the user?
         * </pre>
         *
         * <code>bool location_services_requested = 10;</code>
         */
        boolean getLocationServicesRequested();

        /**
         * <pre>
         * Are location services enabled and working?
         * </pre>
         *
         * <code>bool location_services_enabled = 11;</code>
         */
        boolean getLocationServicesEnabled();

        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
         */
        int getLocationProviderValue();
        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider getLocationProvider();

        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
         */
        boolean hasSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
         */
        boolean hasLatitudeSampleStatistics();
        /**
         * <pre>
         * Statistics for latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getLatitudeSampleStatistics();
        /**
         * <pre>
         * Statistics for latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getLatitudeSampleStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
         */
        boolean hasLongitudeSampleStatistics();
        /**
         * <pre>
         * Statistics for longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getLongitudeSampleStatistics();
        /**
         * <pre>
         * Statistics for longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getLongitudeSampleStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
         */
        boolean hasAltitudeSampleStatistics();
        /**
         * <pre>
         * Statistics for altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAltitudeSampleStatistics();
        /**
         * <pre>
         * Statistics for altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAltitudeSampleStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
         */
        boolean hasSpeedSampleStatistics();
        /**
         * <pre>
         * Statistics for speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSpeedSampleStatistics();
        /**
         * <pre>
         * Statistics for speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSpeedSampleStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
         */
        boolean hasAccuracySampleStatistics();
        /**
         * <pre>
         * Statistics for accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAccuracySampleStatistics();
        /**
         * <pre>
         * Statistics for accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAccuracySampleStatisticsOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel}
       */
      public  static final class LocationChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
          LocationChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use LocationChannel.newBuilder() to construct.
        private LocationChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private LocationChannel() {
          sensorDescription_ = "";
          meanSampleRateHz_ = 0D;
          sampleTsUs_ = java.util.Collections.emptyList();
          latitudeSamples_ = java.util.Collections.emptyList();
          longitudeSamples_ = java.util.Collections.emptyList();
          altitudeSamples_ = java.util.Collections.emptyList();
          speedSamples_ = java.util.Collections.emptyList();
          accuracySamples_ = java.util.Collections.emptyList();
          locationPermissionsGranted_ = false;
          locationServicesRequested_ = false;
          locationServicesEnabled_ = false;
          locationProvider_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private LocationChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  meanSampleRateHz_ = input.readDouble();
                  break;
                }
                case 25: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  sampleTsUs_.add(input.readDouble());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    sampleTsUs_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 33: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    latitudeSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  latitudeSamples_.add(input.readDouble());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                    latitudeSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    latitudeSamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 41: {
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    longitudeSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  longitudeSamples_.add(input.readDouble());
                  break;
                }
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                    longitudeSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    longitudeSamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 49: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    altitudeSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  altitudeSamples_.add(input.readDouble());
                  break;
                }
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                    altitudeSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    altitudeSamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 57: {
                  if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    speedSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000040;
                  }
                  speedSamples_.add(input.readDouble());
                  break;
                }
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                    speedSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000040;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    speedSamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 65: {
                  if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    accuracySamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  accuracySamples_.add(input.readDouble());
                  break;
                }
                case 66: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                    accuracySamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    accuracySamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 72: {

                  locationPermissionsGranted_ = input.readBool();
                  break;
                }
                case 80: {

                  locationServicesRequested_ = input.readBool();
                  break;
                }
                case 88: {

                  locationServicesEnabled_ = input.readBool();
                  break;
                }
                case 96: {
                  int rawValue = input.readEnum();

                  locationProvider_ = rawValue;
                  break;
                }
                case 106: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleRateStatistics_ != null) {
                    subBuilder = sampleRateStatistics_.toBuilder();
                  }
                  sampleRateStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleRateStatistics_);
                    sampleRateStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 114: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (latitudeSampleStatistics_ != null) {
                    subBuilder = latitudeSampleStatistics_.toBuilder();
                  }
                  latitudeSampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(latitudeSampleStatistics_);
                    latitudeSampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 122: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (longitudeSampleStatistics_ != null) {
                    subBuilder = longitudeSampleStatistics_.toBuilder();
                  }
                  longitudeSampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(longitudeSampleStatistics_);
                    longitudeSampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 130: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (altitudeSampleStatistics_ != null) {
                    subBuilder = altitudeSampleStatistics_.toBuilder();
                  }
                  altitudeSampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(altitudeSampleStatistics_);
                    altitudeSampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 138: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (speedSampleStatistics_ != null) {
                    subBuilder = speedSampleStatistics_.toBuilder();
                  }
                  speedSampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(speedSampleStatistics_);
                    speedSampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 146: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (accuracySampleStatistics_ != null) {
                    subBuilder = accuracySampleStatistics_.toBuilder();
                  }
                  accuracySampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(accuracySampleStatistics_);
                    accuracySampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 154: {
                  if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00040000;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              latitudeSamples_ = java.util.Collections.unmodifiableList(latitudeSamples_);
            }
            if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              longitudeSamples_ = java.util.Collections.unmodifiableList(longitudeSamples_);
            }
            if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              altitudeSamples_ = java.util.Collections.unmodifiableList(altitudeSamples_);
            }
            if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              speedSamples_ = java.util.Collections.unmodifiableList(speedSamples_);
            }
            if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              accuracySamples_ = java.util.Collections.unmodifiableList(accuracySamples_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 19:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder.class);
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider}
         */
        public enum LocationProvider
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>NONE = 0;</code>
           */
          NONE(0),
          /**
           * <code>USER = 1;</code>
           */
          USER(1),
          /**
           * <code>GPS = 2;</code>
           */
          GPS(2),
          /**
           * <code>NETWORK = 3;</code>
           */
          NETWORK(3),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>NONE = 0;</code>
           */
          public static final int NONE_VALUE = 0;
          /**
           * <code>USER = 1;</code>
           */
          public static final int USER_VALUE = 1;
          /**
           * <code>GPS = 2;</code>
           */
          public static final int GPS_VALUE = 2;
          /**
           * <code>NETWORK = 3;</code>
           */
          public static final int NETWORK_VALUE = 3;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static LocationProvider valueOf(int value) {
            return forNumber(value);
          }

          public static LocationProvider forNumber(int value) {
            switch (value) {
              case 0: return NONE;
              case 1: return USER;
              case 2: return GPS;
              case 3: return NETWORK;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<LocationProvider>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              LocationProvider> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<LocationProvider>() {
                  public LocationProvider findValueByNumber(int number) {
                    return LocationProvider.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDescriptor().getEnumTypes().get(0);
          }

          private static final LocationProvider[] VALUES = values();

          public static LocationProvider valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private LocationProvider(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider)
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER = 2;
        private double meanSampleRateHz_;
        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        public double getMeanSampleRateHz() {
          return meanSampleRateHz_;
        }

        public static final int SAMPLE_TS_US_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Double> sampleTsUs_;
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public java.util.List<java.lang.Double>
            getSampleTsUsList() {
          return sampleTsUs_;
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public int getSampleTsUsCount() {
          return sampleTsUs_.size();
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public double getSampleTsUs(int index) {
          return sampleTsUs_.get(index);
        }
        private int sampleTsUsMemoizedSerializedSize = -1;

        public static final int LATITUDE_SAMPLES_FIELD_NUMBER = 4;
        private java.util.List<java.lang.Double> latitudeSamples_;
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>repeated double latitude_samples = 4;</code>
         */
        public java.util.List<java.lang.Double>
            getLatitudeSamplesList() {
          return latitudeSamples_;
        }
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>repeated double latitude_samples = 4;</code>
         */
        public int getLatitudeSamplesCount() {
          return latitudeSamples_.size();
        }
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>repeated double latitude_samples = 4;</code>
         */
        public double getLatitudeSamples(int index) {
          return latitudeSamples_.get(index);
        }
        private int latitudeSamplesMemoizedSerializedSize = -1;

        public static final int LONGITUDE_SAMPLES_FIELD_NUMBER = 5;
        private java.util.List<java.lang.Double> longitudeSamples_;
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>repeated double longitude_samples = 5;</code>
         */
        public java.util.List<java.lang.Double>
            getLongitudeSamplesList() {
          return longitudeSamples_;
        }
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>repeated double longitude_samples = 5;</code>
         */
        public int getLongitudeSamplesCount() {
          return longitudeSamples_.size();
        }
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>repeated double longitude_samples = 5;</code>
         */
        public double getLongitudeSamples(int index) {
          return longitudeSamples_.get(index);
        }
        private int longitudeSamplesMemoizedSerializedSize = -1;

        public static final int ALTITUDE_SAMPLES_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Double> altitudeSamples_;
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>repeated double altitude_samples = 6;</code>
         */
        public java.util.List<java.lang.Double>
            getAltitudeSamplesList() {
          return altitudeSamples_;
        }
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>repeated double altitude_samples = 6;</code>
         */
        public int getAltitudeSamplesCount() {
          return altitudeSamples_.size();
        }
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>repeated double altitude_samples = 6;</code>
         */
        public double getAltitudeSamples(int index) {
          return altitudeSamples_.get(index);
        }
        private int altitudeSamplesMemoizedSerializedSize = -1;

        public static final int SPEED_SAMPLES_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Double> speedSamples_;
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>repeated double speed_samples = 7;</code>
         */
        public java.util.List<java.lang.Double>
            getSpeedSamplesList() {
          return speedSamples_;
        }
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>repeated double speed_samples = 7;</code>
         */
        public int getSpeedSamplesCount() {
          return speedSamples_.size();
        }
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>repeated double speed_samples = 7;</code>
         */
        public double getSpeedSamples(int index) {
          return speedSamples_.get(index);
        }
        private int speedSamplesMemoizedSerializedSize = -1;

        public static final int ACCURACY_SAMPLES_FIELD_NUMBER = 8;
        private java.util.List<java.lang.Double> accuracySamples_;
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>repeated double accuracy_samples = 8;</code>
         */
        public java.util.List<java.lang.Double>
            getAccuracySamplesList() {
          return accuracySamples_;
        }
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>repeated double accuracy_samples = 8;</code>
         */
        public int getAccuracySamplesCount() {
          return accuracySamples_.size();
        }
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>repeated double accuracy_samples = 8;</code>
         */
        public double getAccuracySamples(int index) {
          return accuracySamples_.get(index);
        }
        private int accuracySamplesMemoizedSerializedSize = -1;

        public static final int LOCATION_PERMISSIONS_GRANTED_FIELD_NUMBER = 9;
        private boolean locationPermissionsGranted_;
        /**
         * <pre>
         * Have location permissions been granted by the user?
         * </pre>
         *
         * <code>bool location_permissions_granted = 9;</code>
         */
        public boolean getLocationPermissionsGranted() {
          return locationPermissionsGranted_;
        }

        public static final int LOCATION_SERVICES_REQUESTED_FIELD_NUMBER = 10;
        private boolean locationServicesRequested_;
        /**
         * <pre>
         * Has location services been requested by the user?
         * </pre>
         *
         * <code>bool location_services_requested = 10;</code>
         */
        public boolean getLocationServicesRequested() {
          return locationServicesRequested_;
        }

        public static final int LOCATION_SERVICES_ENABLED_FIELD_NUMBER = 11;
        private boolean locationServicesEnabled_;
        /**
         * <pre>
         * Are location services enabled and working?
         * </pre>
         *
         * <code>bool location_services_enabled = 11;</code>
         */
        public boolean getLocationServicesEnabled() {
          return locationServicesEnabled_;
        }

        public static final int LOCATION_PROVIDER_FIELD_NUMBER = 12;
        private int locationProvider_;
        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
         */
        public int getLocationProviderValue() {
          return locationProvider_;
        }
        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider getLocationProvider() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.valueOf(locationProvider_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.UNRECOGNIZED : result;
        }

        public static final int SAMPLE_RATE_STATISTICS_FIELD_NUMBER = 13;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_;
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
         */
        public boolean hasSampleRateStatistics() {
          return sampleRateStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
          return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
          return getSampleRateStatistics();
        }

        public static final int LATITUDE_SAMPLE_STATISTICS_FIELD_NUMBER = 14;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics latitudeSampleStatistics_;
        /**
         * <pre>
         * Statistics for latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
         */
        public boolean hasLatitudeSampleStatistics() {
          return latitudeSampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getLatitudeSampleStatistics() {
          return latitudeSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : latitudeSampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getLatitudeSampleStatisticsOrBuilder() {
          return getLatitudeSampleStatistics();
        }

        public static final int LONGITUDE_SAMPLE_STATISTICS_FIELD_NUMBER = 15;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics longitudeSampleStatistics_;
        /**
         * <pre>
         * Statistics for longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
         */
        public boolean hasLongitudeSampleStatistics() {
          return longitudeSampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getLongitudeSampleStatistics() {
          return longitudeSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : longitudeSampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getLongitudeSampleStatisticsOrBuilder() {
          return getLongitudeSampleStatistics();
        }

        public static final int ALTITUDE_SAMPLE_STATISTICS_FIELD_NUMBER = 16;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics altitudeSampleStatistics_;
        /**
         * <pre>
         * Statistics for altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
         */
        public boolean hasAltitudeSampleStatistics() {
          return altitudeSampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAltitudeSampleStatistics() {
          return altitudeSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : altitudeSampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAltitudeSampleStatisticsOrBuilder() {
          return getAltitudeSampleStatistics();
        }

        public static final int SPEED_SAMPLE_STATISTICS_FIELD_NUMBER = 17;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics speedSampleStatistics_;
        /**
         * <pre>
         * Statistics for speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
         */
        public boolean hasSpeedSampleStatistics() {
          return speedSampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSpeedSampleStatistics() {
          return speedSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : speedSampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSpeedSampleStatisticsOrBuilder() {
          return getSpeedSampleStatistics();
        }

        public static final int ACCURACY_SAMPLE_STATISTICS_FIELD_NUMBER = 18;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics accuracySampleStatistics_;
        /**
         * <pre>
         * Statistics for accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
         */
        public boolean hasAccuracySampleStatistics() {
          return accuracySampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAccuracySampleStatistics() {
          return accuracySampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : accuracySampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAccuracySampleStatisticsOrBuilder() {
          return getAccuracySampleStatistics();
        }

        public static final int METADATA_FIELD_NUMBER = 19;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 19;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            output.writeDouble(2, meanSampleRateHz_);
          }
          if (getSampleTsUsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(sampleTsUsMemoizedSerializedSize);
          }
          for (int i = 0; i < sampleTsUs_.size(); i++) {
            output.writeDoubleNoTag(sampleTsUs_.get(i));
          }
          if (getLatitudeSamplesList().size() > 0) {
            output.writeUInt32NoTag(34);
            output.writeUInt32NoTag(latitudeSamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < latitudeSamples_.size(); i++) {
            output.writeDoubleNoTag(latitudeSamples_.get(i));
          }
          if (getLongitudeSamplesList().size() > 0) {
            output.writeUInt32NoTag(42);
            output.writeUInt32NoTag(longitudeSamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < longitudeSamples_.size(); i++) {
            output.writeDoubleNoTag(longitudeSamples_.get(i));
          }
          if (getAltitudeSamplesList().size() > 0) {
            output.writeUInt32NoTag(50);
            output.writeUInt32NoTag(altitudeSamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < altitudeSamples_.size(); i++) {
            output.writeDoubleNoTag(altitudeSamples_.get(i));
          }
          if (getSpeedSamplesList().size() > 0) {
            output.writeUInt32NoTag(58);
            output.writeUInt32NoTag(speedSamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < speedSamples_.size(); i++) {
            output.writeDoubleNoTag(speedSamples_.get(i));
          }
          if (getAccuracySamplesList().size() > 0) {
            output.writeUInt32NoTag(66);
            output.writeUInt32NoTag(accuracySamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < accuracySamples_.size(); i++) {
            output.writeDoubleNoTag(accuracySamples_.get(i));
          }
          if (locationPermissionsGranted_ != false) {
            output.writeBool(9, locationPermissionsGranted_);
          }
          if (locationServicesRequested_ != false) {
            output.writeBool(10, locationServicesRequested_);
          }
          if (locationServicesEnabled_ != false) {
            output.writeBool(11, locationServicesEnabled_);
          }
          if (locationProvider_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.NONE.getNumber()) {
            output.writeEnum(12, locationProvider_);
          }
          if (sampleRateStatistics_ != null) {
            output.writeMessage(13, getSampleRateStatistics());
          }
          if (latitudeSampleStatistics_ != null) {
            output.writeMessage(14, getLatitudeSampleStatistics());
          }
          if (longitudeSampleStatistics_ != null) {
            output.writeMessage(15, getLongitudeSampleStatistics());
          }
          if (altitudeSampleStatistics_ != null) {
            output.writeMessage(16, getAltitudeSampleStatistics());
          }
          if (speedSampleStatistics_ != null) {
            output.writeMessage(17, getSpeedSampleStatistics());
          }
          if (accuracySampleStatistics_ != null) {
            output.writeMessage(18, getAccuracySampleStatistics());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              19);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, meanSampleRateHz_);
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSampleTsUsList().size();
            size += dataSize;
            if (!getSampleTsUsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            sampleTsUsMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getLatitudeSamplesList().size();
            size += dataSize;
            if (!getLatitudeSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            latitudeSamplesMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getLongitudeSamplesList().size();
            size += dataSize;
            if (!getLongitudeSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            longitudeSamplesMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getAltitudeSamplesList().size();
            size += dataSize;
            if (!getAltitudeSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            altitudeSamplesMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSpeedSamplesList().size();
            size += dataSize;
            if (!getSpeedSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            speedSamplesMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getAccuracySamplesList().size();
            size += dataSize;
            if (!getAccuracySamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            accuracySamplesMemoizedSerializedSize = dataSize;
          }
          if (locationPermissionsGranted_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, locationPermissionsGranted_);
          }
          if (locationServicesRequested_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(10, locationServicesRequested_);
          }
          if (locationServicesEnabled_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(11, locationServicesEnabled_);
          }
          if (locationProvider_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.NONE.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(12, locationProvider_);
          }
          if (sampleRateStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(13, getSampleRateStatistics());
          }
          if (latitudeSampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(14, getLatitudeSampleStatistics());
          }
          if (longitudeSampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(15, getLongitudeSampleStatistics());
          }
          if (altitudeSampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(16, getAltitudeSampleStatistics());
          }
          if (speedSampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(17, getSpeedSampleStatistics());
          }
          if (accuracySampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(18, getAccuracySampleStatistics());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(19, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getMeanSampleRateHz()));
          result = result && getSampleTsUsList()
              .equals(other.getSampleTsUsList());
          result = result && getLatitudeSamplesList()
              .equals(other.getLatitudeSamplesList());
          result = result && getLongitudeSamplesList()
              .equals(other.getLongitudeSamplesList());
          result = result && getAltitudeSamplesList()
              .equals(other.getAltitudeSamplesList());
          result = result && getSpeedSamplesList()
              .equals(other.getSpeedSamplesList());
          result = result && getAccuracySamplesList()
              .equals(other.getAccuracySamplesList());
          result = result && (getLocationPermissionsGranted()
              == other.getLocationPermissionsGranted());
          result = result && (getLocationServicesRequested()
              == other.getLocationServicesRequested());
          result = result && (getLocationServicesEnabled()
              == other.getLocationServicesEnabled());
          result = result && locationProvider_ == other.locationProvider_;
          result = result && (hasSampleRateStatistics() == other.hasSampleRateStatistics());
          if (hasSampleRateStatistics()) {
            result = result && getSampleRateStatistics()
                .equals(other.getSampleRateStatistics());
          }
          result = result && (hasLatitudeSampleStatistics() == other.hasLatitudeSampleStatistics());
          if (hasLatitudeSampleStatistics()) {
            result = result && getLatitudeSampleStatistics()
                .equals(other.getLatitudeSampleStatistics());
          }
          result = result && (hasLongitudeSampleStatistics() == other.hasLongitudeSampleStatistics());
          if (hasLongitudeSampleStatistics()) {
            result = result && getLongitudeSampleStatistics()
                .equals(other.getLongitudeSampleStatistics());
          }
          result = result && (hasAltitudeSampleStatistics() == other.hasAltitudeSampleStatistics());
          if (hasAltitudeSampleStatistics()) {
            result = result && getAltitudeSampleStatistics()
                .equals(other.getAltitudeSampleStatistics());
          }
          result = result && (hasSpeedSampleStatistics() == other.hasSpeedSampleStatistics());
          if (hasSpeedSampleStatistics()) {
            result = result && getSpeedSampleStatistics()
                .equals(other.getSpeedSampleStatistics());
          }
          result = result && (hasAccuracySampleStatistics() == other.hasAccuracySampleStatistics());
          if (hasAccuracySampleStatistics()) {
            result = result && getAccuracySampleStatistics()
                .equals(other.getAccuracySampleStatistics());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz()));
          if (getSampleTsUsCount() > 0) {
            hash = (37 * hash) + SAMPLE_TS_US_FIELD_NUMBER;
            hash = (53 * hash) + getSampleTsUsList().hashCode();
          }
          if (getLatitudeSamplesCount() > 0) {
            hash = (37 * hash) + LATITUDE_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getLatitudeSamplesList().hashCode();
          }
          if (getLongitudeSamplesCount() > 0) {
            hash = (37 * hash) + LONGITUDE_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getLongitudeSamplesList().hashCode();
          }
          if (getAltitudeSamplesCount() > 0) {
            hash = (37 * hash) + ALTITUDE_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getAltitudeSamplesList().hashCode();
          }
          if (getSpeedSamplesCount() > 0) {
            hash = (37 * hash) + SPEED_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSpeedSamplesList().hashCode();
          }
          if (getAccuracySamplesCount() > 0) {
            hash = (37 * hash) + ACCURACY_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getAccuracySamplesList().hashCode();
          }
          hash = (37 * hash) + LOCATION_PERMISSIONS_GRANTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLocationPermissionsGranted());
          hash = (37 * hash) + LOCATION_SERVICES_REQUESTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLocationServicesRequested());
          hash = (37 * hash) + LOCATION_SERVICES_ENABLED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLocationServicesEnabled());
          hash = (37 * hash) + LOCATION_PROVIDER_FIELD_NUMBER;
          hash = (53 * hash) + locationProvider_;
          if (hasSampleRateStatistics()) {
            hash = (37 * hash) + SAMPLE_RATE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleRateStatistics().hashCode();
          }
          if (hasLatitudeSampleStatistics()) {
            hash = (37 * hash) + LATITUDE_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getLatitudeSampleStatistics().hashCode();
          }
          if (hasLongitudeSampleStatistics()) {
            hash = (37 * hash) + LONGITUDE_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getLongitudeSampleStatistics().hashCode();
          }
          if (hasAltitudeSampleStatistics()) {
            hash = (37 * hash) + ALTITUDE_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getAltitudeSampleStatistics().hashCode();
          }
          if (hasSpeedSampleStatistics()) {
            hash = (37 * hash) + SPEED_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSpeedSampleStatistics().hashCode();
          }
          if (hasAccuracySampleStatistics()) {
            hash = (37 * hash) + ACCURACY_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getAccuracySampleStatistics().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 19:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 19:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            meanSampleRateHz_ = 0D;

            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            latitudeSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            longitudeSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            altitudeSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            speedSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            accuracySamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
            locationPermissionsGranted_ = false;

            locationServicesRequested_ = false;

            locationServicesEnabled_ = false;

            locationProvider_ = 0;

            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }
            if (latitudeSampleStatisticsBuilder_ == null) {
              latitudeSampleStatistics_ = null;
            } else {
              latitudeSampleStatistics_ = null;
              latitudeSampleStatisticsBuilder_ = null;
            }
            if (longitudeSampleStatisticsBuilder_ == null) {
              longitudeSampleStatistics_ = null;
            } else {
              longitudeSampleStatistics_ = null;
              longitudeSampleStatisticsBuilder_ = null;
            }
            if (altitudeSampleStatisticsBuilder_ == null) {
              altitudeSampleStatistics_ = null;
            } else {
              altitudeSampleStatistics_ = null;
              altitudeSampleStatisticsBuilder_ = null;
            }
            if (speedSampleStatisticsBuilder_ == null) {
              speedSampleStatistics_ = null;
            } else {
              speedSampleStatistics_ = null;
              speedSampleStatisticsBuilder_ = null;
            }
            if (accuracySampleStatisticsBuilder_ == null) {
              accuracySampleStatistics_ = null;
            } else {
              accuracySampleStatistics_ = null;
              accuracySampleStatisticsBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.meanSampleRateHz_ = meanSampleRateHz_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.sampleTsUs_ = sampleTsUs_;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              latitudeSamples_ = java.util.Collections.unmodifiableList(latitudeSamples_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.latitudeSamples_ = latitudeSamples_;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              longitudeSamples_ = java.util.Collections.unmodifiableList(longitudeSamples_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.longitudeSamples_ = longitudeSamples_;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              altitudeSamples_ = java.util.Collections.unmodifiableList(altitudeSamples_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.altitudeSamples_ = altitudeSamples_;
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              speedSamples_ = java.util.Collections.unmodifiableList(speedSamples_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.speedSamples_ = speedSamples_;
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              accuracySamples_ = java.util.Collections.unmodifiableList(accuracySamples_);
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.accuracySamples_ = accuracySamples_;
            result.locationPermissionsGranted_ = locationPermissionsGranted_;
            result.locationServicesRequested_ = locationServicesRequested_;
            result.locationServicesEnabled_ = locationServicesEnabled_;
            result.locationProvider_ = locationProvider_;
            if (sampleRateStatisticsBuilder_ == null) {
              result.sampleRateStatistics_ = sampleRateStatistics_;
            } else {
              result.sampleRateStatistics_ = sampleRateStatisticsBuilder_.build();
            }
            if (latitudeSampleStatisticsBuilder_ == null) {
              result.latitudeSampleStatistics_ = latitudeSampleStatistics_;
            } else {
              result.latitudeSampleStatistics_ = latitudeSampleStatisticsBuilder_.build();
            }
            if (longitudeSampleStatisticsBuilder_ == null) {
              result.longitudeSampleStatistics_ = longitudeSampleStatistics_;
            } else {
              result.longitudeSampleStatistics_ = longitudeSampleStatisticsBuilder_.build();
            }
            if (altitudeSampleStatisticsBuilder_ == null) {
              result.altitudeSampleStatistics_ = altitudeSampleStatistics_;
            } else {
              result.altitudeSampleStatistics_ = altitudeSampleStatisticsBuilder_.build();
            }
            if (speedSampleStatisticsBuilder_ == null) {
              result.speedSampleStatistics_ = speedSampleStatistics_;
            } else {
              result.speedSampleStatistics_ = speedSampleStatisticsBuilder_.build();
            }
            if (accuracySampleStatisticsBuilder_ == null) {
              result.accuracySampleStatistics_ = accuracySampleStatistics_;
            } else {
              result.accuracySampleStatistics_ = accuracySampleStatisticsBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getMeanSampleRateHz() != 0D) {
              setMeanSampleRateHz(other.getMeanSampleRateHz());
            }
            if (!other.sampleTsUs_.isEmpty()) {
              if (sampleTsUs_.isEmpty()) {
                sampleTsUs_ = other.sampleTsUs_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSampleTsUsIsMutable();
                sampleTsUs_.addAll(other.sampleTsUs_);
              }
              onChanged();
            }
            if (!other.latitudeSamples_.isEmpty()) {
              if (latitudeSamples_.isEmpty()) {
                latitudeSamples_ = other.latitudeSamples_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureLatitudeSamplesIsMutable();
                latitudeSamples_.addAll(other.latitudeSamples_);
              }
              onChanged();
            }
            if (!other.longitudeSamples_.isEmpty()) {
              if (longitudeSamples_.isEmpty()) {
                longitudeSamples_ = other.longitudeSamples_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureLongitudeSamplesIsMutable();
                longitudeSamples_.addAll(other.longitudeSamples_);
              }
              onChanged();
            }
            if (!other.altitudeSamples_.isEmpty()) {
              if (altitudeSamples_.isEmpty()) {
                altitudeSamples_ = other.altitudeSamples_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureAltitudeSamplesIsMutable();
                altitudeSamples_.addAll(other.altitudeSamples_);
              }
              onChanged();
            }
            if (!other.speedSamples_.isEmpty()) {
              if (speedSamples_.isEmpty()) {
                speedSamples_ = other.speedSamples_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureSpeedSamplesIsMutable();
                speedSamples_.addAll(other.speedSamples_);
              }
              onChanged();
            }
            if (!other.accuracySamples_.isEmpty()) {
              if (accuracySamples_.isEmpty()) {
                accuracySamples_ = other.accuracySamples_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureAccuracySamplesIsMutable();
                accuracySamples_.addAll(other.accuracySamples_);
              }
              onChanged();
            }
            if (other.getLocationPermissionsGranted() != false) {
              setLocationPermissionsGranted(other.getLocationPermissionsGranted());
            }
            if (other.getLocationServicesRequested() != false) {
              setLocationServicesRequested(other.getLocationServicesRequested());
            }
            if (other.getLocationServicesEnabled() != false) {
              setLocationServicesEnabled(other.getLocationServicesEnabled());
            }
            if (other.locationProvider_ != 0) {
              setLocationProviderValue(other.getLocationProviderValue());
            }
            if (other.hasSampleRateStatistics()) {
              mergeSampleRateStatistics(other.getSampleRateStatistics());
            }
            if (other.hasLatitudeSampleStatistics()) {
              mergeLatitudeSampleStatistics(other.getLatitudeSampleStatistics());
            }
            if (other.hasLongitudeSampleStatistics()) {
              mergeLongitudeSampleStatistics(other.getLongitudeSampleStatistics());
            }
            if (other.hasAltitudeSampleStatistics()) {
              mergeAltitudeSampleStatistics(other.getAltitudeSampleStatistics());
            }
            if (other.hasSpeedSampleStatistics()) {
              mergeSpeedSampleStatistics(other.getSpeedSampleStatistics());
            }
            if (other.hasAccuracySampleStatistics()) {
              mergeAccuracySampleStatistics(other.getAccuracySampleStatistics());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double meanSampleRateHz_ ;
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public double getMeanSampleRateHz() {
            return meanSampleRateHz_;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder setMeanSampleRateHz(double value) {
            
            meanSampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder clearMeanSampleRateHz() {
            
            meanSampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> sampleTsUs_ = java.util.Collections.emptyList();
          private void ensureSampleTsUsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = new java.util.ArrayList<java.lang.Double>(sampleTsUs_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public java.util.List<java.lang.Double>
              getSampleTsUsList() {
            return java.util.Collections.unmodifiableList(sampleTsUs_);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public int getSampleTsUsCount() {
            return sampleTsUs_.size();
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public double getSampleTsUs(int index) {
            return sampleTsUs_.get(index);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder setSampleTsUs(
              int index, double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addSampleTsUs(double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addAllSampleTsUs(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSampleTsUsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sampleTsUs_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder clearSampleTsUs() {
            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> latitudeSamples_ = java.util.Collections.emptyList();
          private void ensureLatitudeSamplesIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              latitudeSamples_ = new java.util.ArrayList<java.lang.Double>(latitudeSamples_);
              bitField0_ |= 0x00000008;
             }
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public java.util.List<java.lang.Double>
              getLatitudeSamplesList() {
            return java.util.Collections.unmodifiableList(latitudeSamples_);
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public int getLatitudeSamplesCount() {
            return latitudeSamples_.size();
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public double getLatitudeSamples(int index) {
            return latitudeSamples_.get(index);
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public Builder setLatitudeSamples(
              int index, double value) {
            ensureLatitudeSamplesIsMutable();
            latitudeSamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public Builder addLatitudeSamples(double value) {
            ensureLatitudeSamplesIsMutable();
            latitudeSamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public Builder addAllLatitudeSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureLatitudeSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, latitudeSamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>repeated double latitude_samples = 4;</code>
           */
          public Builder clearLatitudeSamples() {
            latitudeSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> longitudeSamples_ = java.util.Collections.emptyList();
          private void ensureLongitudeSamplesIsMutable() {
            if (!((bitField0_ & 0x00000010) == 0x00000010)) {
              longitudeSamples_ = new java.util.ArrayList<java.lang.Double>(longitudeSamples_);
              bitField0_ |= 0x00000010;
             }
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public java.util.List<java.lang.Double>
              getLongitudeSamplesList() {
            return java.util.Collections.unmodifiableList(longitudeSamples_);
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public int getLongitudeSamplesCount() {
            return longitudeSamples_.size();
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public double getLongitudeSamples(int index) {
            return longitudeSamples_.get(index);
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public Builder setLongitudeSamples(
              int index, double value) {
            ensureLongitudeSamplesIsMutable();
            longitudeSamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public Builder addLongitudeSamples(double value) {
            ensureLongitudeSamplesIsMutable();
            longitudeSamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public Builder addAllLongitudeSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureLongitudeSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, longitudeSamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>repeated double longitude_samples = 5;</code>
           */
          public Builder clearLongitudeSamples() {
            longitudeSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> altitudeSamples_ = java.util.Collections.emptyList();
          private void ensureAltitudeSamplesIsMutable() {
            if (!((bitField0_ & 0x00000020) == 0x00000020)) {
              altitudeSamples_ = new java.util.ArrayList<java.lang.Double>(altitudeSamples_);
              bitField0_ |= 0x00000020;
             }
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public java.util.List<java.lang.Double>
              getAltitudeSamplesList() {
            return java.util.Collections.unmodifiableList(altitudeSamples_);
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public int getAltitudeSamplesCount() {
            return altitudeSamples_.size();
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public double getAltitudeSamples(int index) {
            return altitudeSamples_.get(index);
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public Builder setAltitudeSamples(
              int index, double value) {
            ensureAltitudeSamplesIsMutable();
            altitudeSamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public Builder addAltitudeSamples(double value) {
            ensureAltitudeSamplesIsMutable();
            altitudeSamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public Builder addAllAltitudeSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureAltitudeSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, altitudeSamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>repeated double altitude_samples = 6;</code>
           */
          public Builder clearAltitudeSamples() {
            altitudeSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> speedSamples_ = java.util.Collections.emptyList();
          private void ensureSpeedSamplesIsMutable() {
            if (!((bitField0_ & 0x00000040) == 0x00000040)) {
              speedSamples_ = new java.util.ArrayList<java.lang.Double>(speedSamples_);
              bitField0_ |= 0x00000040;
             }
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public java.util.List<java.lang.Double>
              getSpeedSamplesList() {
            return java.util.Collections.unmodifiableList(speedSamples_);
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public int getSpeedSamplesCount() {
            return speedSamples_.size();
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public double getSpeedSamples(int index) {
            return speedSamples_.get(index);
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public Builder setSpeedSamples(
              int index, double value) {
            ensureSpeedSamplesIsMutable();
            speedSamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public Builder addSpeedSamples(double value) {
            ensureSpeedSamplesIsMutable();
            speedSamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public Builder addAllSpeedSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSpeedSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, speedSamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>repeated double speed_samples = 7;</code>
           */
          public Builder clearSpeedSamples() {
            speedSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> accuracySamples_ = java.util.Collections.emptyList();
          private void ensureAccuracySamplesIsMutable() {
            if (!((bitField0_ & 0x00000080) == 0x00000080)) {
              accuracySamples_ = new java.util.ArrayList<java.lang.Double>(accuracySamples_);
              bitField0_ |= 0x00000080;
             }
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public java.util.List<java.lang.Double>
              getAccuracySamplesList() {
            return java.util.Collections.unmodifiableList(accuracySamples_);
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public int getAccuracySamplesCount() {
            return accuracySamples_.size();
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public double getAccuracySamples(int index) {
            return accuracySamples_.get(index);
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public Builder setAccuracySamples(
              int index, double value) {
            ensureAccuracySamplesIsMutable();
            accuracySamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public Builder addAccuracySamples(double value) {
            ensureAccuracySamplesIsMutable();
            accuracySamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public Builder addAllAccuracySamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureAccuracySamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, accuracySamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>repeated double accuracy_samples = 8;</code>
           */
          public Builder clearAccuracySamples() {
            accuracySamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
            return this;
          }

          private boolean locationPermissionsGranted_ ;
          /**
           * <pre>
           * Have location permissions been granted by the user?
           * </pre>
           *
           * <code>bool location_permissions_granted = 9;</code>
           */
          public boolean getLocationPermissionsGranted() {
            return locationPermissionsGranted_;
          }
          /**
           * <pre>
           * Have location permissions been granted by the user?
           * </pre>
           *
           * <code>bool location_permissions_granted = 9;</code>
           */
          public Builder setLocationPermissionsGranted(boolean value) {
            
            locationPermissionsGranted_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Have location permissions been granted by the user?
           * </pre>
           *
           * <code>bool location_permissions_granted = 9;</code>
           */
          public Builder clearLocationPermissionsGranted() {
            
            locationPermissionsGranted_ = false;
            onChanged();
            return this;
          }

          private boolean locationServicesRequested_ ;
          /**
           * <pre>
           * Has location services been requested by the user?
           * </pre>
           *
           * <code>bool location_services_requested = 10;</code>
           */
          public boolean getLocationServicesRequested() {
            return locationServicesRequested_;
          }
          /**
           * <pre>
           * Has location services been requested by the user?
           * </pre>
           *
           * <code>bool location_services_requested = 10;</code>
           */
          public Builder setLocationServicesRequested(boolean value) {
            
            locationServicesRequested_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Has location services been requested by the user?
           * </pre>
           *
           * <code>bool location_services_requested = 10;</code>
           */
          public Builder clearLocationServicesRequested() {
            
            locationServicesRequested_ = false;
            onChanged();
            return this;
          }

          private boolean locationServicesEnabled_ ;
          /**
           * <pre>
           * Are location services enabled and working?
           * </pre>
           *
           * <code>bool location_services_enabled = 11;</code>
           */
          public boolean getLocationServicesEnabled() {
            return locationServicesEnabled_;
          }
          /**
           * <pre>
           * Are location services enabled and working?
           * </pre>
           *
           * <code>bool location_services_enabled = 11;</code>
           */
          public Builder setLocationServicesEnabled(boolean value) {
            
            locationServicesEnabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Are location services enabled and working?
           * </pre>
           *
           * <code>bool location_services_enabled = 11;</code>
           */
          public Builder clearLocationServicesEnabled() {
            
            locationServicesEnabled_ = false;
            onChanged();
            return this;
          }

          private int locationProvider_ = 0;
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
           */
          public int getLocationProviderValue() {
            return locationProvider_;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
           */
          public Builder setLocationProviderValue(int value) {
            locationProvider_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider getLocationProvider() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.valueOf(locationProvider_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
           */
          public Builder setLocationProvider(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            locationProvider_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 12;</code>
           */
          public Builder clearLocationProvider() {
            
            locationProvider_ = 0;
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleRateStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public boolean hasSampleRateStatistics() {
            return sampleRateStatisticsBuilder_ != null || sampleRateStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            } else {
              return sampleRateStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public Builder setSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleRateStatistics_ = value;
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public Builder setSampleRateStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public Builder mergeSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (sampleRateStatistics_ != null) {
                sampleRateStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleRateStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleRateStatistics_ = value;
              }
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public Builder clearSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
              onChanged();
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleRateStatisticsBuilder() {
            
            onChanged();
            return getSampleRateStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
            if (sampleRateStatisticsBuilder_ != null) {
              return sampleRateStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleRateStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 13;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleRateStatisticsFieldBuilder() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleRateStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleRateStatistics_ = null;
            }
            return sampleRateStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics latitudeSampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> latitudeSampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public boolean hasLatitudeSampleStatistics() {
            return latitudeSampleStatisticsBuilder_ != null || latitudeSampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getLatitudeSampleStatistics() {
            if (latitudeSampleStatisticsBuilder_ == null) {
              return latitudeSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : latitudeSampleStatistics_;
            } else {
              return latitudeSampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public Builder setLatitudeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (latitudeSampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              latitudeSampleStatistics_ = value;
              onChanged();
            } else {
              latitudeSampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public Builder setLatitudeSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (latitudeSampleStatisticsBuilder_ == null) {
              latitudeSampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              latitudeSampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public Builder mergeLatitudeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (latitudeSampleStatisticsBuilder_ == null) {
              if (latitudeSampleStatistics_ != null) {
                latitudeSampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(latitudeSampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                latitudeSampleStatistics_ = value;
              }
              onChanged();
            } else {
              latitudeSampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public Builder clearLatitudeSampleStatistics() {
            if (latitudeSampleStatisticsBuilder_ == null) {
              latitudeSampleStatistics_ = null;
              onChanged();
            } else {
              latitudeSampleStatistics_ = null;
              latitudeSampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getLatitudeSampleStatisticsBuilder() {
            
            onChanged();
            return getLatitudeSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getLatitudeSampleStatisticsOrBuilder() {
            if (latitudeSampleStatisticsBuilder_ != null) {
              return latitudeSampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return latitudeSampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : latitudeSampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics latitude_sample_statistics = 14;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getLatitudeSampleStatisticsFieldBuilder() {
            if (latitudeSampleStatisticsBuilder_ == null) {
              latitudeSampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getLatitudeSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              latitudeSampleStatistics_ = null;
            }
            return latitudeSampleStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics longitudeSampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> longitudeSampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public boolean hasLongitudeSampleStatistics() {
            return longitudeSampleStatisticsBuilder_ != null || longitudeSampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getLongitudeSampleStatistics() {
            if (longitudeSampleStatisticsBuilder_ == null) {
              return longitudeSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : longitudeSampleStatistics_;
            } else {
              return longitudeSampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public Builder setLongitudeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (longitudeSampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              longitudeSampleStatistics_ = value;
              onChanged();
            } else {
              longitudeSampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public Builder setLongitudeSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (longitudeSampleStatisticsBuilder_ == null) {
              longitudeSampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              longitudeSampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public Builder mergeLongitudeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (longitudeSampleStatisticsBuilder_ == null) {
              if (longitudeSampleStatistics_ != null) {
                longitudeSampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(longitudeSampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                longitudeSampleStatistics_ = value;
              }
              onChanged();
            } else {
              longitudeSampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public Builder clearLongitudeSampleStatistics() {
            if (longitudeSampleStatisticsBuilder_ == null) {
              longitudeSampleStatistics_ = null;
              onChanged();
            } else {
              longitudeSampleStatistics_ = null;
              longitudeSampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getLongitudeSampleStatisticsBuilder() {
            
            onChanged();
            return getLongitudeSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getLongitudeSampleStatisticsOrBuilder() {
            if (longitudeSampleStatisticsBuilder_ != null) {
              return longitudeSampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return longitudeSampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : longitudeSampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics longitude_sample_statistics = 15;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getLongitudeSampleStatisticsFieldBuilder() {
            if (longitudeSampleStatisticsBuilder_ == null) {
              longitudeSampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getLongitudeSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              longitudeSampleStatistics_ = null;
            }
            return longitudeSampleStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics altitudeSampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> altitudeSampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public boolean hasAltitudeSampleStatistics() {
            return altitudeSampleStatisticsBuilder_ != null || altitudeSampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAltitudeSampleStatistics() {
            if (altitudeSampleStatisticsBuilder_ == null) {
              return altitudeSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : altitudeSampleStatistics_;
            } else {
              return altitudeSampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public Builder setAltitudeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (altitudeSampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              altitudeSampleStatistics_ = value;
              onChanged();
            } else {
              altitudeSampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public Builder setAltitudeSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (altitudeSampleStatisticsBuilder_ == null) {
              altitudeSampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              altitudeSampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public Builder mergeAltitudeSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (altitudeSampleStatisticsBuilder_ == null) {
              if (altitudeSampleStatistics_ != null) {
                altitudeSampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(altitudeSampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                altitudeSampleStatistics_ = value;
              }
              onChanged();
            } else {
              altitudeSampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public Builder clearAltitudeSampleStatistics() {
            if (altitudeSampleStatisticsBuilder_ == null) {
              altitudeSampleStatistics_ = null;
              onChanged();
            } else {
              altitudeSampleStatistics_ = null;
              altitudeSampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getAltitudeSampleStatisticsBuilder() {
            
            onChanged();
            return getAltitudeSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAltitudeSampleStatisticsOrBuilder() {
            if (altitudeSampleStatisticsBuilder_ != null) {
              return altitudeSampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return altitudeSampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : altitudeSampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics altitude_sample_statistics = 16;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getAltitudeSampleStatisticsFieldBuilder() {
            if (altitudeSampleStatisticsBuilder_ == null) {
              altitudeSampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getAltitudeSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              altitudeSampleStatistics_ = null;
            }
            return altitudeSampleStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics speedSampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> speedSampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public boolean hasSpeedSampleStatistics() {
            return speedSampleStatisticsBuilder_ != null || speedSampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSpeedSampleStatistics() {
            if (speedSampleStatisticsBuilder_ == null) {
              return speedSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : speedSampleStatistics_;
            } else {
              return speedSampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public Builder setSpeedSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (speedSampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              speedSampleStatistics_ = value;
              onChanged();
            } else {
              speedSampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public Builder setSpeedSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (speedSampleStatisticsBuilder_ == null) {
              speedSampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              speedSampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public Builder mergeSpeedSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (speedSampleStatisticsBuilder_ == null) {
              if (speedSampleStatistics_ != null) {
                speedSampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(speedSampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                speedSampleStatistics_ = value;
              }
              onChanged();
            } else {
              speedSampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public Builder clearSpeedSampleStatistics() {
            if (speedSampleStatisticsBuilder_ == null) {
              speedSampleStatistics_ = null;
              onChanged();
            } else {
              speedSampleStatistics_ = null;
              speedSampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSpeedSampleStatisticsBuilder() {
            
            onChanged();
            return getSpeedSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSpeedSampleStatisticsOrBuilder() {
            if (speedSampleStatisticsBuilder_ != null) {
              return speedSampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return speedSampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : speedSampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics speed_sample_statistics = 17;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSpeedSampleStatisticsFieldBuilder() {
            if (speedSampleStatisticsBuilder_ == null) {
              speedSampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSpeedSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              speedSampleStatistics_ = null;
            }
            return speedSampleStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics accuracySampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> accuracySampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public boolean hasAccuracySampleStatistics() {
            return accuracySampleStatisticsBuilder_ != null || accuracySampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getAccuracySampleStatistics() {
            if (accuracySampleStatisticsBuilder_ == null) {
              return accuracySampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : accuracySampleStatistics_;
            } else {
              return accuracySampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public Builder setAccuracySampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (accuracySampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              accuracySampleStatistics_ = value;
              onChanged();
            } else {
              accuracySampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public Builder setAccuracySampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (accuracySampleStatisticsBuilder_ == null) {
              accuracySampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              accuracySampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public Builder mergeAccuracySampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (accuracySampleStatisticsBuilder_ == null) {
              if (accuracySampleStatistics_ != null) {
                accuracySampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(accuracySampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                accuracySampleStatistics_ = value;
              }
              onChanged();
            } else {
              accuracySampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public Builder clearAccuracySampleStatistics() {
            if (accuracySampleStatisticsBuilder_ == null) {
              accuracySampleStatistics_ = null;
              onChanged();
            } else {
              accuracySampleStatistics_ = null;
              accuracySampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getAccuracySampleStatisticsBuilder() {
            
            onChanged();
            return getAccuracySampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getAccuracySampleStatisticsOrBuilder() {
            if (accuracySampleStatisticsBuilder_ != null) {
              return accuracySampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return accuracySampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : accuracySampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics accuracy_sample_statistics = 18;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getAccuracySampleStatisticsFieldBuilder() {
            if (accuracySampleStatisticsBuilder_ == null) {
              accuracySampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getAccuracySampleStatistics(),
                      getParentForChildren(),
                      isClean());
              accuracySampleStatistics_ = null;
            }
            return accuracySampleStatisticsBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 19;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<LocationChannel>
            PARSER = new com.google.protobuf.AbstractParser<LocationChannel>() {
          @java.lang.Override
          public LocationChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new LocationChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<LocationChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<LocationChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface XyzChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        double getMeanSampleRateHz();

        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        java.util.List<java.lang.Double> getSampleTsUsList();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        int getSampleTsUsCount();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        double getSampleTsUs(int index);

        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>repeated double x_samples = 4;</code>
         */
        java.util.List<java.lang.Double> getXSamplesList();
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>repeated double x_samples = 4;</code>
         */
        int getXSamplesCount();
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>repeated double x_samples = 4;</code>
         */
        double getXSamples(int index);

        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>repeated double y_samples = 5;</code>
         */
        java.util.List<java.lang.Double> getYSamplesList();
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>repeated double y_samples = 5;</code>
         */
        int getYSamplesCount();
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>repeated double y_samples = 5;</code>
         */
        double getYSamples(int index);

        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>repeated double z_samples = 6;</code>
         */
        java.util.List<java.lang.Double> getZSamplesList();
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>repeated double z_samples = 6;</code>
         */
        int getZSamplesCount();
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>repeated double z_samples = 6;</code>
         */
        double getZSamples(int index);

        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
         */
        boolean hasSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
         */
        boolean hasXSampleStatistics();
        /**
         * <pre>
         * Statistics for X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getXSampleStatistics();
        /**
         * <pre>
         * Statistics for X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getXSampleStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
         */
        boolean hasYSampleStatistics();
        /**
         * <pre>
         * Statistics for Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getYSampleStatistics();
        /**
         * <pre>
         * Statistics for Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getYSampleStatisticsOrBuilder();

        /**
         * <pre>
         * Statistics for Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
         */
        boolean hasZSampleStatistics();
        /**
         * <pre>
         * Statistics for Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getZSampleStatistics();
        /**
         * <pre>
         * Statistics for Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getZSampleStatisticsOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel}
       */
      public  static final class XyzChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
          XyzChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use XyzChannel.newBuilder() to construct.
        private XyzChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private XyzChannel() {
          sensorDescription_ = "";
          meanSampleRateHz_ = 0D;
          sampleTsUs_ = java.util.Collections.emptyList();
          xSamples_ = java.util.Collections.emptyList();
          ySamples_ = java.util.Collections.emptyList();
          zSamples_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private XyzChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  meanSampleRateHz_ = input.readDouble();
                  break;
                }
                case 25: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  sampleTsUs_.add(input.readDouble());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    sampleTsUs_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 33: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    xSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  xSamples_.add(input.readDouble());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                    xSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    xSamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 41: {
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    ySamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  ySamples_.add(input.readDouble());
                  break;
                }
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                    ySamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    ySamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 49: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    zSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  zSamples_.add(input.readDouble());
                  break;
                }
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                    zSamples_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    zSamples_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 58: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleRateStatistics_ != null) {
                    subBuilder = sampleRateStatistics_.toBuilder();
                  }
                  sampleRateStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleRateStatistics_);
                    sampleRateStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (xSampleStatistics_ != null) {
                    subBuilder = xSampleStatistics_.toBuilder();
                  }
                  xSampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(xSampleStatistics_);
                    xSampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 74: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (ySampleStatistics_ != null) {
                    subBuilder = ySampleStatistics_.toBuilder();
                  }
                  ySampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(ySampleStatistics_);
                    ySampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (zSampleStatistics_ != null) {
                    subBuilder = zSampleStatistics_.toBuilder();
                  }
                  zSampleStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(zSampleStatistics_);
                    zSampleStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000400;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              xSamples_ = java.util.Collections.unmodifiableList(xSamples_);
            }
            if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              ySamples_ = java.util.Collections.unmodifiableList(ySamples_);
            }
            if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              zSamples_ = java.util.Collections.unmodifiableList(zSamples_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 11:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER = 2;
        private double meanSampleRateHz_;
        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        public double getMeanSampleRateHz() {
          return meanSampleRateHz_;
        }

        public static final int SAMPLE_TS_US_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Double> sampleTsUs_;
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public java.util.List<java.lang.Double>
            getSampleTsUsList() {
          return sampleTsUs_;
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public int getSampleTsUsCount() {
          return sampleTsUs_.size();
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public double getSampleTsUs(int index) {
          return sampleTsUs_.get(index);
        }
        private int sampleTsUsMemoizedSerializedSize = -1;

        public static final int X_SAMPLES_FIELD_NUMBER = 4;
        private java.util.List<java.lang.Double> xSamples_;
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>repeated double x_samples = 4;</code>
         */
        public java.util.List<java.lang.Double>
            getXSamplesList() {
          return xSamples_;
        }
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>repeated double x_samples = 4;</code>
         */
        public int getXSamplesCount() {
          return xSamples_.size();
        }
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>repeated double x_samples = 4;</code>
         */
        public double getXSamples(int index) {
          return xSamples_.get(index);
        }
        private int xSamplesMemoizedSerializedSize = -1;

        public static final int Y_SAMPLES_FIELD_NUMBER = 5;
        private java.util.List<java.lang.Double> ySamples_;
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>repeated double y_samples = 5;</code>
         */
        public java.util.List<java.lang.Double>
            getYSamplesList() {
          return ySamples_;
        }
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>repeated double y_samples = 5;</code>
         */
        public int getYSamplesCount() {
          return ySamples_.size();
        }
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>repeated double y_samples = 5;</code>
         */
        public double getYSamples(int index) {
          return ySamples_.get(index);
        }
        private int ySamplesMemoizedSerializedSize = -1;

        public static final int Z_SAMPLES_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Double> zSamples_;
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>repeated double z_samples = 6;</code>
         */
        public java.util.List<java.lang.Double>
            getZSamplesList() {
          return zSamples_;
        }
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>repeated double z_samples = 6;</code>
         */
        public int getZSamplesCount() {
          return zSamples_.size();
        }
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>repeated double z_samples = 6;</code>
         */
        public double getZSamples(int index) {
          return zSamples_.get(index);
        }
        private int zSamplesMemoizedSerializedSize = -1;

        public static final int SAMPLE_RATE_STATISTICS_FIELD_NUMBER = 7;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_;
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
         */
        public boolean hasSampleRateStatistics() {
          return sampleRateStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
          return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
          return getSampleRateStatistics();
        }

        public static final int X_SAMPLE_STATISTICS_FIELD_NUMBER = 8;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics xSampleStatistics_;
        /**
         * <pre>
         * Statistics for X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
         */
        public boolean hasXSampleStatistics() {
          return xSampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getXSampleStatistics() {
          return xSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : xSampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getXSampleStatisticsOrBuilder() {
          return getXSampleStatistics();
        }

        public static final int Y_SAMPLE_STATISTICS_FIELD_NUMBER = 9;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics ySampleStatistics_;
        /**
         * <pre>
         * Statistics for Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
         */
        public boolean hasYSampleStatistics() {
          return ySampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getYSampleStatistics() {
          return ySampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : ySampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getYSampleStatisticsOrBuilder() {
          return getYSampleStatistics();
        }

        public static final int Z_SAMPLE_STATISTICS_FIELD_NUMBER = 10;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics zSampleStatistics_;
        /**
         * <pre>
         * Statistics for Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
         */
        public boolean hasZSampleStatistics() {
          return zSampleStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getZSampleStatistics() {
          return zSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : zSampleStatistics_;
        }
        /**
         * <pre>
         * Statistics for Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getZSampleStatisticsOrBuilder() {
          return getZSampleStatistics();
        }

        public static final int METADATA_FIELD_NUMBER = 11;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            output.writeDouble(2, meanSampleRateHz_);
          }
          if (getSampleTsUsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(sampleTsUsMemoizedSerializedSize);
          }
          for (int i = 0; i < sampleTsUs_.size(); i++) {
            output.writeDoubleNoTag(sampleTsUs_.get(i));
          }
          if (getXSamplesList().size() > 0) {
            output.writeUInt32NoTag(34);
            output.writeUInt32NoTag(xSamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < xSamples_.size(); i++) {
            output.writeDoubleNoTag(xSamples_.get(i));
          }
          if (getYSamplesList().size() > 0) {
            output.writeUInt32NoTag(42);
            output.writeUInt32NoTag(ySamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < ySamples_.size(); i++) {
            output.writeDoubleNoTag(ySamples_.get(i));
          }
          if (getZSamplesList().size() > 0) {
            output.writeUInt32NoTag(50);
            output.writeUInt32NoTag(zSamplesMemoizedSerializedSize);
          }
          for (int i = 0; i < zSamples_.size(); i++) {
            output.writeDoubleNoTag(zSamples_.get(i));
          }
          if (sampleRateStatistics_ != null) {
            output.writeMessage(7, getSampleRateStatistics());
          }
          if (xSampleStatistics_ != null) {
            output.writeMessage(8, getXSampleStatistics());
          }
          if (ySampleStatistics_ != null) {
            output.writeMessage(9, getYSampleStatistics());
          }
          if (zSampleStatistics_ != null) {
            output.writeMessage(10, getZSampleStatistics());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              11);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, meanSampleRateHz_);
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSampleTsUsList().size();
            size += dataSize;
            if (!getSampleTsUsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            sampleTsUsMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getXSamplesList().size();
            size += dataSize;
            if (!getXSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            xSamplesMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getYSamplesList().size();
            size += dataSize;
            if (!getYSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            ySamplesMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 8 * getZSamplesList().size();
            size += dataSize;
            if (!getZSamplesList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            zSamplesMemoizedSerializedSize = dataSize;
          }
          if (sampleRateStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getSampleRateStatistics());
          }
          if (xSampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getXSampleStatistics());
          }
          if (ySampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getYSampleStatistics());
          }
          if (zSampleStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getZSampleStatistics());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(11, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getMeanSampleRateHz()));
          result = result && getSampleTsUsList()
              .equals(other.getSampleTsUsList());
          result = result && getXSamplesList()
              .equals(other.getXSamplesList());
          result = result && getYSamplesList()
              .equals(other.getYSamplesList());
          result = result && getZSamplesList()
              .equals(other.getZSamplesList());
          result = result && (hasSampleRateStatistics() == other.hasSampleRateStatistics());
          if (hasSampleRateStatistics()) {
            result = result && getSampleRateStatistics()
                .equals(other.getSampleRateStatistics());
          }
          result = result && (hasXSampleStatistics() == other.hasXSampleStatistics());
          if (hasXSampleStatistics()) {
            result = result && getXSampleStatistics()
                .equals(other.getXSampleStatistics());
          }
          result = result && (hasYSampleStatistics() == other.hasYSampleStatistics());
          if (hasYSampleStatistics()) {
            result = result && getYSampleStatistics()
                .equals(other.getYSampleStatistics());
          }
          result = result && (hasZSampleStatistics() == other.hasZSampleStatistics());
          if (hasZSampleStatistics()) {
            result = result && getZSampleStatistics()
                .equals(other.getZSampleStatistics());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz()));
          if (getSampleTsUsCount() > 0) {
            hash = (37 * hash) + SAMPLE_TS_US_FIELD_NUMBER;
            hash = (53 * hash) + getSampleTsUsList().hashCode();
          }
          if (getXSamplesCount() > 0) {
            hash = (37 * hash) + X_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getXSamplesList().hashCode();
          }
          if (getYSamplesCount() > 0) {
            hash = (37 * hash) + Y_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getYSamplesList().hashCode();
          }
          if (getZSamplesCount() > 0) {
            hash = (37 * hash) + Z_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getZSamplesList().hashCode();
          }
          if (hasSampleRateStatistics()) {
            hash = (37 * hash) + SAMPLE_RATE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleRateStatistics().hashCode();
          }
          if (hasXSampleStatistics()) {
            hash = (37 * hash) + X_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getXSampleStatistics().hashCode();
          }
          if (hasYSampleStatistics()) {
            hash = (37 * hash) + Y_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getYSampleStatistics().hashCode();
          }
          if (hasZSampleStatistics()) {
            hash = (37 * hash) + Z_SAMPLE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getZSampleStatistics().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 11:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 11:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            meanSampleRateHz_ = 0D;

            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            xSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            ySamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            zSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }
            if (xSampleStatisticsBuilder_ == null) {
              xSampleStatistics_ = null;
            } else {
              xSampleStatistics_ = null;
              xSampleStatisticsBuilder_ = null;
            }
            if (ySampleStatisticsBuilder_ == null) {
              ySampleStatistics_ = null;
            } else {
              ySampleStatistics_ = null;
              ySampleStatisticsBuilder_ = null;
            }
            if (zSampleStatisticsBuilder_ == null) {
              zSampleStatistics_ = null;
            } else {
              zSampleStatistics_ = null;
              zSampleStatisticsBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.meanSampleRateHz_ = meanSampleRateHz_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.sampleTsUs_ = sampleTsUs_;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              xSamples_ = java.util.Collections.unmodifiableList(xSamples_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.xSamples_ = xSamples_;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              ySamples_ = java.util.Collections.unmodifiableList(ySamples_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.ySamples_ = ySamples_;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              zSamples_ = java.util.Collections.unmodifiableList(zSamples_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.zSamples_ = zSamples_;
            if (sampleRateStatisticsBuilder_ == null) {
              result.sampleRateStatistics_ = sampleRateStatistics_;
            } else {
              result.sampleRateStatistics_ = sampleRateStatisticsBuilder_.build();
            }
            if (xSampleStatisticsBuilder_ == null) {
              result.xSampleStatistics_ = xSampleStatistics_;
            } else {
              result.xSampleStatistics_ = xSampleStatisticsBuilder_.build();
            }
            if (ySampleStatisticsBuilder_ == null) {
              result.ySampleStatistics_ = ySampleStatistics_;
            } else {
              result.ySampleStatistics_ = ySampleStatisticsBuilder_.build();
            }
            if (zSampleStatisticsBuilder_ == null) {
              result.zSampleStatistics_ = zSampleStatistics_;
            } else {
              result.zSampleStatistics_ = zSampleStatisticsBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getMeanSampleRateHz() != 0D) {
              setMeanSampleRateHz(other.getMeanSampleRateHz());
            }
            if (!other.sampleTsUs_.isEmpty()) {
              if (sampleTsUs_.isEmpty()) {
                sampleTsUs_ = other.sampleTsUs_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSampleTsUsIsMutable();
                sampleTsUs_.addAll(other.sampleTsUs_);
              }
              onChanged();
            }
            if (!other.xSamples_.isEmpty()) {
              if (xSamples_.isEmpty()) {
                xSamples_ = other.xSamples_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureXSamplesIsMutable();
                xSamples_.addAll(other.xSamples_);
              }
              onChanged();
            }
            if (!other.ySamples_.isEmpty()) {
              if (ySamples_.isEmpty()) {
                ySamples_ = other.ySamples_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureYSamplesIsMutable();
                ySamples_.addAll(other.ySamples_);
              }
              onChanged();
            }
            if (!other.zSamples_.isEmpty()) {
              if (zSamples_.isEmpty()) {
                zSamples_ = other.zSamples_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureZSamplesIsMutable();
                zSamples_.addAll(other.zSamples_);
              }
              onChanged();
            }
            if (other.hasSampleRateStatistics()) {
              mergeSampleRateStatistics(other.getSampleRateStatistics());
            }
            if (other.hasXSampleStatistics()) {
              mergeXSampleStatistics(other.getXSampleStatistics());
            }
            if (other.hasYSampleStatistics()) {
              mergeYSampleStatistics(other.getYSampleStatistics());
            }
            if (other.hasZSampleStatistics()) {
              mergeZSampleStatistics(other.getZSampleStatistics());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double meanSampleRateHz_ ;
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public double getMeanSampleRateHz() {
            return meanSampleRateHz_;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder setMeanSampleRateHz(double value) {
            
            meanSampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder clearMeanSampleRateHz() {
            
            meanSampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> sampleTsUs_ = java.util.Collections.emptyList();
          private void ensureSampleTsUsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = new java.util.ArrayList<java.lang.Double>(sampleTsUs_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public java.util.List<java.lang.Double>
              getSampleTsUsList() {
            return java.util.Collections.unmodifiableList(sampleTsUs_);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public int getSampleTsUsCount() {
            return sampleTsUs_.size();
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public double getSampleTsUs(int index) {
            return sampleTsUs_.get(index);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder setSampleTsUs(
              int index, double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addSampleTsUs(double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addAllSampleTsUs(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSampleTsUsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sampleTsUs_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder clearSampleTsUs() {
            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> xSamples_ = java.util.Collections.emptyList();
          private void ensureXSamplesIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              xSamples_ = new java.util.ArrayList<java.lang.Double>(xSamples_);
              bitField0_ |= 0x00000008;
             }
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public java.util.List<java.lang.Double>
              getXSamplesList() {
            return java.util.Collections.unmodifiableList(xSamples_);
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public int getXSamplesCount() {
            return xSamples_.size();
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public double getXSamples(int index) {
            return xSamples_.get(index);
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public Builder setXSamples(
              int index, double value) {
            ensureXSamplesIsMutable();
            xSamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public Builder addXSamples(double value) {
            ensureXSamplesIsMutable();
            xSamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public Builder addAllXSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureXSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, xSamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>repeated double x_samples = 4;</code>
           */
          public Builder clearXSamples() {
            xSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> ySamples_ = java.util.Collections.emptyList();
          private void ensureYSamplesIsMutable() {
            if (!((bitField0_ & 0x00000010) == 0x00000010)) {
              ySamples_ = new java.util.ArrayList<java.lang.Double>(ySamples_);
              bitField0_ |= 0x00000010;
             }
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public java.util.List<java.lang.Double>
              getYSamplesList() {
            return java.util.Collections.unmodifiableList(ySamples_);
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public int getYSamplesCount() {
            return ySamples_.size();
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public double getYSamples(int index) {
            return ySamples_.get(index);
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public Builder setYSamples(
              int index, double value) {
            ensureYSamplesIsMutable();
            ySamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public Builder addYSamples(double value) {
            ensureYSamplesIsMutable();
            ySamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public Builder addAllYSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureYSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, ySamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>repeated double y_samples = 5;</code>
           */
          public Builder clearYSamples() {
            ySamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> zSamples_ = java.util.Collections.emptyList();
          private void ensureZSamplesIsMutable() {
            if (!((bitField0_ & 0x00000020) == 0x00000020)) {
              zSamples_ = new java.util.ArrayList<java.lang.Double>(zSamples_);
              bitField0_ |= 0x00000020;
             }
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public java.util.List<java.lang.Double>
              getZSamplesList() {
            return java.util.Collections.unmodifiableList(zSamples_);
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public int getZSamplesCount() {
            return zSamples_.size();
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public double getZSamples(int index) {
            return zSamples_.get(index);
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public Builder setZSamples(
              int index, double value) {
            ensureZSamplesIsMutable();
            zSamples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public Builder addZSamples(double value) {
            ensureZSamplesIsMutable();
            zSamples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public Builder addAllZSamples(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureZSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, zSamples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>repeated double z_samples = 6;</code>
           */
          public Builder clearZSamples() {
            zSamples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleRateStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public boolean hasSampleRateStatistics() {
            return sampleRateStatisticsBuilder_ != null || sampleRateStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            } else {
              return sampleRateStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public Builder setSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleRateStatistics_ = value;
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public Builder setSampleRateStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public Builder mergeSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (sampleRateStatistics_ != null) {
                sampleRateStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleRateStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleRateStatistics_ = value;
              }
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public Builder clearSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
              onChanged();
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleRateStatisticsBuilder() {
            
            onChanged();
            return getSampleRateStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
            if (sampleRateStatisticsBuilder_ != null) {
              return sampleRateStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleRateStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleRateStatisticsFieldBuilder() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleRateStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleRateStatistics_ = null;
            }
            return sampleRateStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics xSampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> xSampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public boolean hasXSampleStatistics() {
            return xSampleStatisticsBuilder_ != null || xSampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getXSampleStatistics() {
            if (xSampleStatisticsBuilder_ == null) {
              return xSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : xSampleStatistics_;
            } else {
              return xSampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public Builder setXSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (xSampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              xSampleStatistics_ = value;
              onChanged();
            } else {
              xSampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public Builder setXSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (xSampleStatisticsBuilder_ == null) {
              xSampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              xSampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public Builder mergeXSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (xSampleStatisticsBuilder_ == null) {
              if (xSampleStatistics_ != null) {
                xSampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(xSampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                xSampleStatistics_ = value;
              }
              onChanged();
            } else {
              xSampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public Builder clearXSampleStatistics() {
            if (xSampleStatisticsBuilder_ == null) {
              xSampleStatistics_ = null;
              onChanged();
            } else {
              xSampleStatistics_ = null;
              xSampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getXSampleStatisticsBuilder() {
            
            onChanged();
            return getXSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getXSampleStatisticsOrBuilder() {
            if (xSampleStatisticsBuilder_ != null) {
              return xSampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return xSampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : xSampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics x_sample_statistics = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getXSampleStatisticsFieldBuilder() {
            if (xSampleStatisticsBuilder_ == null) {
              xSampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getXSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              xSampleStatistics_ = null;
            }
            return xSampleStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics ySampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> ySampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public boolean hasYSampleStatistics() {
            return ySampleStatisticsBuilder_ != null || ySampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getYSampleStatistics() {
            if (ySampleStatisticsBuilder_ == null) {
              return ySampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : ySampleStatistics_;
            } else {
              return ySampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public Builder setYSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (ySampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ySampleStatistics_ = value;
              onChanged();
            } else {
              ySampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public Builder setYSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (ySampleStatisticsBuilder_ == null) {
              ySampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              ySampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public Builder mergeYSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (ySampleStatisticsBuilder_ == null) {
              if (ySampleStatistics_ != null) {
                ySampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(ySampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                ySampleStatistics_ = value;
              }
              onChanged();
            } else {
              ySampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public Builder clearYSampleStatistics() {
            if (ySampleStatisticsBuilder_ == null) {
              ySampleStatistics_ = null;
              onChanged();
            } else {
              ySampleStatistics_ = null;
              ySampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getYSampleStatisticsBuilder() {
            
            onChanged();
            return getYSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getYSampleStatisticsOrBuilder() {
            if (ySampleStatisticsBuilder_ != null) {
              return ySampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return ySampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : ySampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics y_sample_statistics = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getYSampleStatisticsFieldBuilder() {
            if (ySampleStatisticsBuilder_ == null) {
              ySampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getYSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              ySampleStatistics_ = null;
            }
            return ySampleStatisticsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics zSampleStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> zSampleStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public boolean hasZSampleStatistics() {
            return zSampleStatisticsBuilder_ != null || zSampleStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getZSampleStatistics() {
            if (zSampleStatisticsBuilder_ == null) {
              return zSampleStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : zSampleStatistics_;
            } else {
              return zSampleStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public Builder setZSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (zSampleStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              zSampleStatistics_ = value;
              onChanged();
            } else {
              zSampleStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public Builder setZSampleStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (zSampleStatisticsBuilder_ == null) {
              zSampleStatistics_ = builderForValue.build();
              onChanged();
            } else {
              zSampleStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public Builder mergeZSampleStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (zSampleStatisticsBuilder_ == null) {
              if (zSampleStatistics_ != null) {
                zSampleStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(zSampleStatistics_).mergeFrom(value).buildPartial();
              } else {
                zSampleStatistics_ = value;
              }
              onChanged();
            } else {
              zSampleStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public Builder clearZSampleStatistics() {
            if (zSampleStatisticsBuilder_ == null) {
              zSampleStatistics_ = null;
              onChanged();
            } else {
              zSampleStatistics_ = null;
              zSampleStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getZSampleStatisticsBuilder() {
            
            onChanged();
            return getZSampleStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getZSampleStatisticsOrBuilder() {
            if (zSampleStatisticsBuilder_ != null) {
              return zSampleStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return zSampleStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : zSampleStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics z_sample_statistics = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getZSampleStatisticsFieldBuilder() {
            if (zSampleStatisticsBuilder_ == null) {
              zSampleStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getZSampleStatistics(),
                      getParentForChildren(),
                      isClean());
              zSampleStatistics_ = null;
            }
            return zSampleStatisticsBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<XyzChannel>
            PARSER = new com.google.protobuf.AbstractParser<XyzChannel>() {
          @java.lang.Override
          public XyzChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new XyzChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<XyzChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<XyzChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ImageChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        double getMeanSampleRateHz();

        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        java.util.List<java.lang.Double> getSampleTsUsList();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        int getSampleTsUsCount();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        double getSampleTsUs(int index);

        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getSamplesList();
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        int getSamplesCount();
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        com.google.protobuf.ByteString getSamples(int index);

        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        boolean hasSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel}
       */
      public  static final class ImageChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
          ImageChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ImageChannel.newBuilder() to construct.
        private ImageChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ImageChannel() {
          sensorDescription_ = "";
          meanSampleRateHz_ = 0D;
          sampleTsUs_ = java.util.Collections.emptyList();
          samples_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ImageChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  meanSampleRateHz_ = input.readDouble();
                  break;
                }
                case 25: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  sampleTsUs_.add(input.readDouble());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    sampleTsUs_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    samples_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  samples_.add(input.readBytes());
                  break;
                }
                case 42: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleRateStatistics_ != null) {
                    subBuilder = sampleRateStatistics_.toBuilder();
                  }
                  sampleRateStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleRateStatistics_);
                    sampleRateStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000020;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 6:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER = 2;
        private double meanSampleRateHz_;
        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        public double getMeanSampleRateHz() {
          return meanSampleRateHz_;
        }

        public static final int SAMPLE_TS_US_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Double> sampleTsUs_;
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public java.util.List<java.lang.Double>
            getSampleTsUsList() {
          return sampleTsUs_;
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public int getSampleTsUsCount() {
          return sampleTsUs_.size();
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public double getSampleTsUs(int index) {
          return sampleTsUs_.get(index);
        }
        private int sampleTsUsMemoizedSerializedSize = -1;

        public static final int SAMPLES_FIELD_NUMBER = 4;
        private java.util.List<com.google.protobuf.ByteString> samples_;
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
            getSamplesList() {
          return samples_;
        }
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        public int getSamplesCount() {
          return samples_.size();
        }
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        public com.google.protobuf.ByteString getSamples(int index) {
          return samples_.get(index);
        }

        public static final int SAMPLE_RATE_STATISTICS_FIELD_NUMBER = 5;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_;
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public boolean hasSampleRateStatistics() {
          return sampleRateStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
          return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
          return getSampleRateStatistics();
        }

        public static final int METADATA_FIELD_NUMBER = 6;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            output.writeDouble(2, meanSampleRateHz_);
          }
          if (getSampleTsUsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(sampleTsUsMemoizedSerializedSize);
          }
          for (int i = 0; i < sampleTsUs_.size(); i++) {
            output.writeDoubleNoTag(sampleTsUs_.get(i));
          }
          for (int i = 0; i < samples_.size(); i++) {
            output.writeBytes(4, samples_.get(i));
          }
          if (sampleRateStatistics_ != null) {
            output.writeMessage(5, getSampleRateStatistics());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              6);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, meanSampleRateHz_);
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSampleTsUsList().size();
            size += dataSize;
            if (!getSampleTsUsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            sampleTsUsMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            for (int i = 0; i < samples_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(samples_.get(i));
            }
            size += dataSize;
            size += 1 * getSamplesList().size();
          }
          if (sampleRateStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getSampleRateStatistics());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getMeanSampleRateHz()));
          result = result && getSampleTsUsList()
              .equals(other.getSampleTsUsList());
          result = result && getSamplesList()
              .equals(other.getSamplesList());
          result = result && (hasSampleRateStatistics() == other.hasSampleRateStatistics());
          if (hasSampleRateStatistics()) {
            result = result && getSampleRateStatistics()
                .equals(other.getSampleRateStatistics());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz()));
          if (getSampleTsUsCount() > 0) {
            hash = (37 * hash) + SAMPLE_TS_US_FIELD_NUMBER;
            hash = (53 * hash) + getSampleTsUsList().hashCode();
          }
          if (getSamplesCount() > 0) {
            hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSamplesList().hashCode();
          }
          if (hasSampleRateStatistics()) {
            hash = (37 * hash) + SAMPLE_RATE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleRateStatistics().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 6:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 6:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            meanSampleRateHz_ = 0D;

            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.meanSampleRateHz_ = meanSampleRateHz_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.sampleTsUs_ = sampleTsUs_;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.samples_ = samples_;
            if (sampleRateStatisticsBuilder_ == null) {
              result.sampleRateStatistics_ = sampleRateStatistics_;
            } else {
              result.sampleRateStatistics_ = sampleRateStatisticsBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getMeanSampleRateHz() != 0D) {
              setMeanSampleRateHz(other.getMeanSampleRateHz());
            }
            if (!other.sampleTsUs_.isEmpty()) {
              if (sampleTsUs_.isEmpty()) {
                sampleTsUs_ = other.sampleTsUs_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSampleTsUsIsMutable();
                sampleTsUs_.addAll(other.sampleTsUs_);
              }
              onChanged();
            }
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
            if (other.hasSampleRateStatistics()) {
              mergeSampleRateStatistics(other.getSampleRateStatistics());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double meanSampleRateHz_ ;
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public double getMeanSampleRateHz() {
            return meanSampleRateHz_;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder setMeanSampleRateHz(double value) {
            
            meanSampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder clearMeanSampleRateHz() {
            
            meanSampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> sampleTsUs_ = java.util.Collections.emptyList();
          private void ensureSampleTsUsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = new java.util.ArrayList<java.lang.Double>(sampleTsUs_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public java.util.List<java.lang.Double>
              getSampleTsUsList() {
            return java.util.Collections.unmodifiableList(sampleTsUs_);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public int getSampleTsUsCount() {
            return sampleTsUs_.size();
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public double getSampleTsUs(int index) {
            return sampleTsUs_.get(index);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder setSampleTsUs(
              int index, double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addSampleTsUs(double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addAllSampleTsUs(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSampleTsUsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sampleTsUs_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder clearSampleTsUs() {
            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private java.util.List<com.google.protobuf.ByteString> samples_ = java.util.Collections.emptyList();
          private void ensureSamplesIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = new java.util.ArrayList<com.google.protobuf.ByteString>(samples_);
              bitField0_ |= 0x00000008;
             }
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public java.util.List<com.google.protobuf.ByteString>
              getSamplesList() {
            return java.util.Collections.unmodifiableList(samples_);
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public int getSamplesCount() {
            return samples_.size();
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public com.google.protobuf.ByteString getSamples(int index) {
            return samples_.get(index);
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder setSamples(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder addSamples(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder addAllSamples(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder clearSamples() {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleRateStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public boolean hasSampleRateStatistics() {
            return sampleRateStatisticsBuilder_ != null || sampleRateStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            } else {
              return sampleRateStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder setSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleRateStatistics_ = value;
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder setSampleRateStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder mergeSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (sampleRateStatistics_ != null) {
                sampleRateStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleRateStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleRateStatistics_ = value;
              }
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder clearSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
              onChanged();
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleRateStatisticsBuilder() {
            
            onChanged();
            return getSampleRateStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
            if (sampleRateStatisticsBuilder_ != null) {
              return sampleRateStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleRateStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleRateStatisticsFieldBuilder() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleRateStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleRateStatistics_ = null;
            }
            return sampleRateStatisticsBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ImageChannel>
            PARSER = new com.google.protobuf.AbstractParser<ImageChannel>() {
          @java.lang.Override
          public ImageChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ImageChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ImageChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ImageChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int MICROPHONE_CHANNEL_FIELD_NUMBER = 1;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphoneChannel_;
      /**
       * <pre>
       * The microphone channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
       */
      public boolean hasMicrophoneChannel() {
        return microphoneChannel_ != null;
      }
      /**
       * <pre>
       * The microphone channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel getMicrophoneChannel() {
        return microphoneChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.getDefaultInstance() : microphoneChannel_;
      }
      /**
       * <pre>
       * The microphone channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder getMicrophoneChannelOrBuilder() {
        return getMicrophoneChannel();
      }

      public static final int BAROMETER_CHANNEL_FIELD_NUMBER = 2;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel barometerChannel_;
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      public boolean hasBarometerChannel() {
        return barometerChannel_ != null;
      }
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getBarometerChannel() {
        return barometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : barometerChannel_;
      }
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getBarometerChannelOrBuilder() {
        return getBarometerChannel();
      }

      public static final int LOCATION_CHANNEL_FIELD_NUMBER = 3;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel locationChannel_;
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      public boolean hasLocationChannel() {
        return locationChannel_ != null;
      }
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getLocationChannel() {
        return locationChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance() : locationChannel_;
      }
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder getLocationChannelOrBuilder() {
        return getLocationChannel();
      }

      public static final int ACCELEROMETER_CHANNEL_FIELD_NUMBER = 4;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometerChannel_;
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      public boolean hasAccelerometerChannel() {
        return accelerometerChannel_ != null;
      }
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getAccelerometerChannel() {
        return accelerometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : accelerometerChannel_;
      }
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getAccelerometerChannelOrBuilder() {
        return getAccelerometerChannel();
      }

      public static final int GYROSCOPE_CHANNEL_FIELD_NUMBER = 5;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscopeChannel_;
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      public boolean hasGyroscopeChannel() {
        return gyroscopeChannel_ != null;
      }
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getGyroscopeChannel() {
        return gyroscopeChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : gyroscopeChannel_;
      }
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getGyroscopeChannelOrBuilder() {
        return getGyroscopeChannel();
      }

      public static final int MAGNETOMETER_CHANNEL_FIELD_NUMBER = 6;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometerChannel_;
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      public boolean hasMagnetometerChannel() {
        return magnetometerChannel_ != null;
      }
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getMagnetometerChannel() {
        return magnetometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : magnetometerChannel_;
      }
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getMagnetometerChannelOrBuilder() {
        return getMagnetometerChannel();
      }

      public static final int LIGHT_CHANNEL_FIELD_NUMBER = 7;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel lightChannel_;
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      public boolean hasLightChannel() {
        return lightChannel_ != null;
      }
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getLightChannel() {
        return lightChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : lightChannel_;
      }
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getLightChannelOrBuilder() {
        return getLightChannel();
      }

      public static final int INFRARED_CHANNEL_FIELD_NUMBER = 8;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel infraredChannel_;
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      public boolean hasInfraredChannel() {
        return infraredChannel_ != null;
      }
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getInfraredChannel() {
        return infraredChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : infraredChannel_;
      }
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getInfraredChannelOrBuilder() {
        return getInfraredChannel();
      }

      public static final int IMAGE_CHANNEL_FIELD_NUMBER = 9;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel imageChannel_;
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      public boolean hasImageChannel() {
        return imageChannel_ != null;
      }
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getImageChannel() {
        return imageChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance() : imageChannel_;
      }
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder getImageChannelOrBuilder() {
        return getImageChannel();
      }

      public static final int METADATA_FIELD_NUMBER = 10;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (microphoneChannel_ != null) {
          output.writeMessage(1, getMicrophoneChannel());
        }
        if (barometerChannel_ != null) {
          output.writeMessage(2, getBarometerChannel());
        }
        if (locationChannel_ != null) {
          output.writeMessage(3, getLocationChannel());
        }
        if (accelerometerChannel_ != null) {
          output.writeMessage(4, getAccelerometerChannel());
        }
        if (gyroscopeChannel_ != null) {
          output.writeMessage(5, getGyroscopeChannel());
        }
        if (magnetometerChannel_ != null) {
          output.writeMessage(6, getMagnetometerChannel());
        }
        if (lightChannel_ != null) {
          output.writeMessage(7, getLightChannel());
        }
        if (infraredChannel_ != null) {
          output.writeMessage(8, getInfraredChannel());
        }
        if (imageChannel_ != null) {
          output.writeMessage(9, getImageChannel());
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            10);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (microphoneChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getMicrophoneChannel());
        }
        if (barometerChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getBarometerChannel());
        }
        if (locationChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLocationChannel());
        }
        if (accelerometerChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getAccelerometerChannel());
        }
        if (gyroscopeChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getGyroscopeChannel());
        }
        if (magnetometerChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getMagnetometerChannel());
        }
        if (lightChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getLightChannel());
        }
        if (infraredChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, getInfraredChannel());
        }
        if (imageChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, getImageChannel());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels) obj;

        boolean result = true;
        result = result && (hasMicrophoneChannel() == other.hasMicrophoneChannel());
        if (hasMicrophoneChannel()) {
          result = result && getMicrophoneChannel()
              .equals(other.getMicrophoneChannel());
        }
        result = result && (hasBarometerChannel() == other.hasBarometerChannel());
        if (hasBarometerChannel()) {
          result = result && getBarometerChannel()
              .equals(other.getBarometerChannel());
        }
        result = result && (hasLocationChannel() == other.hasLocationChannel());
        if (hasLocationChannel()) {
          result = result && getLocationChannel()
              .equals(other.getLocationChannel());
        }
        result = result && (hasAccelerometerChannel() == other.hasAccelerometerChannel());
        if (hasAccelerometerChannel()) {
          result = result && getAccelerometerChannel()
              .equals(other.getAccelerometerChannel());
        }
        result = result && (hasGyroscopeChannel() == other.hasGyroscopeChannel());
        if (hasGyroscopeChannel()) {
          result = result && getGyroscopeChannel()
              .equals(other.getGyroscopeChannel());
        }
        result = result && (hasMagnetometerChannel() == other.hasMagnetometerChannel());
        if (hasMagnetometerChannel()) {
          result = result && getMagnetometerChannel()
              .equals(other.getMagnetometerChannel());
        }
        result = result && (hasLightChannel() == other.hasLightChannel());
        if (hasLightChannel()) {
          result = result && getLightChannel()
              .equals(other.getLightChannel());
        }
        result = result && (hasInfraredChannel() == other.hasInfraredChannel());
        if (hasInfraredChannel()) {
          result = result && getInfraredChannel()
              .equals(other.getInfraredChannel());
        }
        result = result && (hasImageChannel() == other.hasImageChannel());
        if (hasImageChannel()) {
          result = result && getImageChannel()
              .equals(other.getImageChannel());
        }
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMicrophoneChannel()) {
          hash = (37 * hash) + MICROPHONE_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getMicrophoneChannel().hashCode();
        }
        if (hasBarometerChannel()) {
          hash = (37 * hash) + BAROMETER_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getBarometerChannel().hashCode();
        }
        if (hasLocationChannel()) {
          hash = (37 * hash) + LOCATION_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getLocationChannel().hashCode();
        }
        if (hasAccelerometerChannel()) {
          hash = (37 * hash) + ACCELEROMETER_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getAccelerometerChannel().hashCode();
        }
        if (hasGyroscopeChannel()) {
          hash = (37 * hash) + GYROSCOPE_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getGyroscopeChannel().hashCode();
        }
        if (hasMagnetometerChannel()) {
          hash = (37 * hash) + MAGNETOMETER_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getMagnetometerChannel().hashCode();
        }
        if (hasLightChannel()) {
          hash = (37 * hash) + LIGHT_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getLightChannel().hashCode();
        }
        if (hasInfraredChannel()) {
          hash = (37 * hash) + INFRARED_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getInfraredChannel().hashCode();
        }
        if (hasImageChannel()) {
          hash = (37 * hash) + IMAGE_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getImageChannel().hashCode();
        }
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 10:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 10:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (microphoneChannelBuilder_ == null) {
            microphoneChannel_ = null;
          } else {
            microphoneChannel_ = null;
            microphoneChannelBuilder_ = null;
          }
          if (barometerChannelBuilder_ == null) {
            barometerChannel_ = null;
          } else {
            barometerChannel_ = null;
            barometerChannelBuilder_ = null;
          }
          if (locationChannelBuilder_ == null) {
            locationChannel_ = null;
          } else {
            locationChannel_ = null;
            locationChannelBuilder_ = null;
          }
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannel_ = null;
          } else {
            accelerometerChannel_ = null;
            accelerometerChannelBuilder_ = null;
          }
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannel_ = null;
          } else {
            gyroscopeChannel_ = null;
            gyroscopeChannelBuilder_ = null;
          }
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannel_ = null;
          } else {
            magnetometerChannel_ = null;
            magnetometerChannelBuilder_ = null;
          }
          if (lightChannelBuilder_ == null) {
            lightChannel_ = null;
          } else {
            lightChannel_ = null;
            lightChannelBuilder_ = null;
          }
          if (infraredChannelBuilder_ == null) {
            infraredChannel_ = null;
          } else {
            infraredChannel_ = null;
            infraredChannelBuilder_ = null;
          }
          if (imageChannelBuilder_ == null) {
            imageChannel_ = null;
          } else {
            imageChannel_ = null;
            imageChannelBuilder_ = null;
          }
          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (microphoneChannelBuilder_ == null) {
            result.microphoneChannel_ = microphoneChannel_;
          } else {
            result.microphoneChannel_ = microphoneChannelBuilder_.build();
          }
          if (barometerChannelBuilder_ == null) {
            result.barometerChannel_ = barometerChannel_;
          } else {
            result.barometerChannel_ = barometerChannelBuilder_.build();
          }
          if (locationChannelBuilder_ == null) {
            result.locationChannel_ = locationChannel_;
          } else {
            result.locationChannel_ = locationChannelBuilder_.build();
          }
          if (accelerometerChannelBuilder_ == null) {
            result.accelerometerChannel_ = accelerometerChannel_;
          } else {
            result.accelerometerChannel_ = accelerometerChannelBuilder_.build();
          }
          if (gyroscopeChannelBuilder_ == null) {
            result.gyroscopeChannel_ = gyroscopeChannel_;
          } else {
            result.gyroscopeChannel_ = gyroscopeChannelBuilder_.build();
          }
          if (magnetometerChannelBuilder_ == null) {
            result.magnetometerChannel_ = magnetometerChannel_;
          } else {
            result.magnetometerChannel_ = magnetometerChannelBuilder_.build();
          }
          if (lightChannelBuilder_ == null) {
            result.lightChannel_ = lightChannel_;
          } else {
            result.lightChannel_ = lightChannelBuilder_.build();
          }
          if (infraredChannelBuilder_ == null) {
            result.infraredChannel_ = infraredChannel_;
          } else {
            result.infraredChannel_ = infraredChannelBuilder_.build();
          }
          if (imageChannelBuilder_ == null) {
            result.imageChannel_ = imageChannel_;
          } else {
            result.imageChannel_ = imageChannelBuilder_.build();
          }
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance()) return this;
          if (other.hasMicrophoneChannel()) {
            mergeMicrophoneChannel(other.getMicrophoneChannel());
          }
          if (other.hasBarometerChannel()) {
            mergeBarometerChannel(other.getBarometerChannel());
          }
          if (other.hasLocationChannel()) {
            mergeLocationChannel(other.getLocationChannel());
          }
          if (other.hasAccelerometerChannel()) {
            mergeAccelerometerChannel(other.getAccelerometerChannel());
          }
          if (other.hasGyroscopeChannel()) {
            mergeGyroscopeChannel(other.getGyroscopeChannel());
          }
          if (other.hasMagnetometerChannel()) {
            mergeMagnetometerChannel(other.getMagnetometerChannel());
          }
          if (other.hasLightChannel()) {
            mergeLightChannel(other.getLightChannel());
          }
          if (other.hasInfraredChannel()) {
            mergeInfraredChannel(other.getInfraredChannel());
          }
          if (other.hasImageChannel()) {
            mergeImageChannel(other.getImageChannel());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphoneChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder> microphoneChannelBuilder_;
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public boolean hasMicrophoneChannel() {
          return microphoneChannelBuilder_ != null || microphoneChannel_ != null;
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel getMicrophoneChannel() {
          if (microphoneChannelBuilder_ == null) {
            return microphoneChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.getDefaultInstance() : microphoneChannel_;
          } else {
            return microphoneChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public Builder setMicrophoneChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel value) {
          if (microphoneChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            microphoneChannel_ = value;
            onChanged();
          } else {
            microphoneChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public Builder setMicrophoneChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder builderForValue) {
          if (microphoneChannelBuilder_ == null) {
            microphoneChannel_ = builderForValue.build();
            onChanged();
          } else {
            microphoneChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public Builder mergeMicrophoneChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel value) {
          if (microphoneChannelBuilder_ == null) {
            if (microphoneChannel_ != null) {
              microphoneChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.newBuilder(microphoneChannel_).mergeFrom(value).buildPartial();
            } else {
              microphoneChannel_ = value;
            }
            onChanged();
          } else {
            microphoneChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public Builder clearMicrophoneChannel() {
          if (microphoneChannelBuilder_ == null) {
            microphoneChannel_ = null;
            onChanged();
          } else {
            microphoneChannel_ = null;
            microphoneChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder getMicrophoneChannelBuilder() {
          
          onChanged();
          return getMicrophoneChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder getMicrophoneChannelOrBuilder() {
          if (microphoneChannelBuilder_ != null) {
            return microphoneChannelBuilder_.getMessageOrBuilder();
          } else {
            return microphoneChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.getDefaultInstance() : microphoneChannel_;
          }
        }
        /**
         * <pre>
         * The microphone channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel microphone_channel = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder> 
            getMicrophoneChannelFieldBuilder() {
          if (microphoneChannelBuilder_ == null) {
            microphoneChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.MicrophoneChannelOrBuilder>(
                    getMicrophoneChannel(),
                    getParentForChildren(),
                    isClean());
            microphoneChannel_ = null;
          }
          return microphoneChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel barometerChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> barometerChannelBuilder_;
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public boolean hasBarometerChannel() {
          return barometerChannelBuilder_ != null || barometerChannel_ != null;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getBarometerChannel() {
          if (barometerChannelBuilder_ == null) {
            return barometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : barometerChannel_;
          } else {
            return barometerChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder setBarometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (barometerChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            barometerChannel_ = value;
            onChanged();
          } else {
            barometerChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder setBarometerChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder builderForValue) {
          if (barometerChannelBuilder_ == null) {
            barometerChannel_ = builderForValue.build();
            onChanged();
          } else {
            barometerChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder mergeBarometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (barometerChannelBuilder_ == null) {
            if (barometerChannel_ != null) {
              barometerChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder(barometerChannel_).mergeFrom(value).buildPartial();
            } else {
              barometerChannel_ = value;
            }
            onChanged();
          } else {
            barometerChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder clearBarometerChannel() {
          if (barometerChannelBuilder_ == null) {
            barometerChannel_ = null;
            onChanged();
          } else {
            barometerChannel_ = null;
            barometerChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder getBarometerChannelBuilder() {
          
          onChanged();
          return getBarometerChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getBarometerChannelOrBuilder() {
          if (barometerChannelBuilder_ != null) {
            return barometerChannelBuilder_.getMessageOrBuilder();
          } else {
            return barometerChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : barometerChannel_;
          }
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> 
            getBarometerChannelFieldBuilder() {
          if (barometerChannelBuilder_ == null) {
            barometerChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder>(
                    getBarometerChannel(),
                    getParentForChildren(),
                    isClean());
            barometerChannel_ = null;
          }
          return barometerChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel locationChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder> locationChannelBuilder_;
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public boolean hasLocationChannel() {
          return locationChannelBuilder_ != null || locationChannel_ != null;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getLocationChannel() {
          if (locationChannelBuilder_ == null) {
            return locationChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance() : locationChannel_;
          } else {
            return locationChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder setLocationChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel value) {
          if (locationChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            locationChannel_ = value;
            onChanged();
          } else {
            locationChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder setLocationChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder builderForValue) {
          if (locationChannelBuilder_ == null) {
            locationChannel_ = builderForValue.build();
            onChanged();
          } else {
            locationChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder mergeLocationChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel value) {
          if (locationChannelBuilder_ == null) {
            if (locationChannel_ != null) {
              locationChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.newBuilder(locationChannel_).mergeFrom(value).buildPartial();
            } else {
              locationChannel_ = value;
            }
            onChanged();
          } else {
            locationChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder clearLocationChannel() {
          if (locationChannelBuilder_ == null) {
            locationChannel_ = null;
            onChanged();
          } else {
            locationChannel_ = null;
            locationChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder getLocationChannelBuilder() {
          
          onChanged();
          return getLocationChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder getLocationChannelOrBuilder() {
          if (locationChannelBuilder_ != null) {
            return locationChannelBuilder_.getMessageOrBuilder();
          } else {
            return locationChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance() : locationChannel_;
          }
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder> 
            getLocationChannelFieldBuilder() {
          if (locationChannelBuilder_ == null) {
            locationChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder>(
                    getLocationChannel(),
                    getParentForChildren(),
                    isClean());
            locationChannel_ = null;
          }
          return locationChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometerChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> accelerometerChannelBuilder_;
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public boolean hasAccelerometerChannel() {
          return accelerometerChannelBuilder_ != null || accelerometerChannel_ != null;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getAccelerometerChannel() {
          if (accelerometerChannelBuilder_ == null) {
            return accelerometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : accelerometerChannel_;
          } else {
            return accelerometerChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder setAccelerometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (accelerometerChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            accelerometerChannel_ = value;
            onChanged();
          } else {
            accelerometerChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder setAccelerometerChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder builderForValue) {
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannel_ = builderForValue.build();
            onChanged();
          } else {
            accelerometerChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder mergeAccelerometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (accelerometerChannelBuilder_ == null) {
            if (accelerometerChannel_ != null) {
              accelerometerChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder(accelerometerChannel_).mergeFrom(value).buildPartial();
            } else {
              accelerometerChannel_ = value;
            }
            onChanged();
          } else {
            accelerometerChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder clearAccelerometerChannel() {
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannel_ = null;
            onChanged();
          } else {
            accelerometerChannel_ = null;
            accelerometerChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder getAccelerometerChannelBuilder() {
          
          onChanged();
          return getAccelerometerChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getAccelerometerChannelOrBuilder() {
          if (accelerometerChannelBuilder_ != null) {
            return accelerometerChannelBuilder_.getMessageOrBuilder();
          } else {
            return accelerometerChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : accelerometerChannel_;
          }
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> 
            getAccelerometerChannelFieldBuilder() {
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder>(
                    getAccelerometerChannel(),
                    getParentForChildren(),
                    isClean());
            accelerometerChannel_ = null;
          }
          return accelerometerChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscopeChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> gyroscopeChannelBuilder_;
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public boolean hasGyroscopeChannel() {
          return gyroscopeChannelBuilder_ != null || gyroscopeChannel_ != null;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getGyroscopeChannel() {
          if (gyroscopeChannelBuilder_ == null) {
            return gyroscopeChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : gyroscopeChannel_;
          } else {
            return gyroscopeChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder setGyroscopeChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (gyroscopeChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            gyroscopeChannel_ = value;
            onChanged();
          } else {
            gyroscopeChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder setGyroscopeChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder builderForValue) {
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannel_ = builderForValue.build();
            onChanged();
          } else {
            gyroscopeChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder mergeGyroscopeChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (gyroscopeChannelBuilder_ == null) {
            if (gyroscopeChannel_ != null) {
              gyroscopeChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder(gyroscopeChannel_).mergeFrom(value).buildPartial();
            } else {
              gyroscopeChannel_ = value;
            }
            onChanged();
          } else {
            gyroscopeChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder clearGyroscopeChannel() {
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannel_ = null;
            onChanged();
          } else {
            gyroscopeChannel_ = null;
            gyroscopeChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder getGyroscopeChannelBuilder() {
          
          onChanged();
          return getGyroscopeChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getGyroscopeChannelOrBuilder() {
          if (gyroscopeChannelBuilder_ != null) {
            return gyroscopeChannelBuilder_.getMessageOrBuilder();
          } else {
            return gyroscopeChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : gyroscopeChannel_;
          }
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> 
            getGyroscopeChannelFieldBuilder() {
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder>(
                    getGyroscopeChannel(),
                    getParentForChildren(),
                    isClean());
            gyroscopeChannel_ = null;
          }
          return gyroscopeChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometerChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> magnetometerChannelBuilder_;
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public boolean hasMagnetometerChannel() {
          return magnetometerChannelBuilder_ != null || magnetometerChannel_ != null;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getMagnetometerChannel() {
          if (magnetometerChannelBuilder_ == null) {
            return magnetometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : magnetometerChannel_;
          } else {
            return magnetometerChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder setMagnetometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (magnetometerChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            magnetometerChannel_ = value;
            onChanged();
          } else {
            magnetometerChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder setMagnetometerChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder builderForValue) {
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannel_ = builderForValue.build();
            onChanged();
          } else {
            magnetometerChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder mergeMagnetometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (magnetometerChannelBuilder_ == null) {
            if (magnetometerChannel_ != null) {
              magnetometerChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder(magnetometerChannel_).mergeFrom(value).buildPartial();
            } else {
              magnetometerChannel_ = value;
            }
            onChanged();
          } else {
            magnetometerChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder clearMagnetometerChannel() {
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannel_ = null;
            onChanged();
          } else {
            magnetometerChannel_ = null;
            magnetometerChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder getMagnetometerChannelBuilder() {
          
          onChanged();
          return getMagnetometerChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getMagnetometerChannelOrBuilder() {
          if (magnetometerChannelBuilder_ != null) {
            return magnetometerChannelBuilder_.getMessageOrBuilder();
          } else {
            return magnetometerChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : magnetometerChannel_;
          }
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> 
            getMagnetometerChannelFieldBuilder() {
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder>(
                    getMagnetometerChannel(),
                    getParentForChildren(),
                    isClean());
            magnetometerChannel_ = null;
          }
          return magnetometerChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel lightChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> lightChannelBuilder_;
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public boolean hasLightChannel() {
          return lightChannelBuilder_ != null || lightChannel_ != null;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getLightChannel() {
          if (lightChannelBuilder_ == null) {
            return lightChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : lightChannel_;
          } else {
            return lightChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder setLightChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (lightChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lightChannel_ = value;
            onChanged();
          } else {
            lightChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder setLightChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder builderForValue) {
          if (lightChannelBuilder_ == null) {
            lightChannel_ = builderForValue.build();
            onChanged();
          } else {
            lightChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder mergeLightChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (lightChannelBuilder_ == null) {
            if (lightChannel_ != null) {
              lightChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder(lightChannel_).mergeFrom(value).buildPartial();
            } else {
              lightChannel_ = value;
            }
            onChanged();
          } else {
            lightChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder clearLightChannel() {
          if (lightChannelBuilder_ == null) {
            lightChannel_ = null;
            onChanged();
          } else {
            lightChannel_ = null;
            lightChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder getLightChannelBuilder() {
          
          onChanged();
          return getLightChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getLightChannelOrBuilder() {
          if (lightChannelBuilder_ != null) {
            return lightChannelBuilder_.getMessageOrBuilder();
          } else {
            return lightChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : lightChannel_;
          }
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> 
            getLightChannelFieldBuilder() {
          if (lightChannelBuilder_ == null) {
            lightChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder>(
                    getLightChannel(),
                    getParentForChildren(),
                    isClean());
            lightChannel_ = null;
          }
          return lightChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel infraredChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> infraredChannelBuilder_;
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public boolean hasInfraredChannel() {
          return infraredChannelBuilder_ != null || infraredChannel_ != null;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getInfraredChannel() {
          if (infraredChannelBuilder_ == null) {
            return infraredChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : infraredChannel_;
          } else {
            return infraredChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder setInfraredChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (infraredChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            infraredChannel_ = value;
            onChanged();
          } else {
            infraredChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder setInfraredChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder builderForValue) {
          if (infraredChannelBuilder_ == null) {
            infraredChannel_ = builderForValue.build();
            onChanged();
          } else {
            infraredChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder mergeInfraredChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (infraredChannelBuilder_ == null) {
            if (infraredChannel_ != null) {
              infraredChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder(infraredChannel_).mergeFrom(value).buildPartial();
            } else {
              infraredChannel_ = value;
            }
            onChanged();
          } else {
            infraredChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder clearInfraredChannel() {
          if (infraredChannelBuilder_ == null) {
            infraredChannel_ = null;
            onChanged();
          } else {
            infraredChannel_ = null;
            infraredChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder getInfraredChannelBuilder() {
          
          onChanged();
          return getInfraredChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getInfraredChannelOrBuilder() {
          if (infraredChannelBuilder_ != null) {
            return infraredChannelBuilder_.getMessageOrBuilder();
          } else {
            return infraredChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : infraredChannel_;
          }
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> 
            getInfraredChannelFieldBuilder() {
          if (infraredChannelBuilder_ == null) {
            infraredChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder>(
                    getInfraredChannel(),
                    getParentForChildren(),
                    isClean());
            infraredChannel_ = null;
          }
          return infraredChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel imageChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder> imageChannelBuilder_;
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public boolean hasImageChannel() {
          return imageChannelBuilder_ != null || imageChannel_ != null;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getImageChannel() {
          if (imageChannelBuilder_ == null) {
            return imageChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance() : imageChannel_;
          } else {
            return imageChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder setImageChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel value) {
          if (imageChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            imageChannel_ = value;
            onChanged();
          } else {
            imageChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder setImageChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder builderForValue) {
          if (imageChannelBuilder_ == null) {
            imageChannel_ = builderForValue.build();
            onChanged();
          } else {
            imageChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder mergeImageChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel value) {
          if (imageChannelBuilder_ == null) {
            if (imageChannel_ != null) {
              imageChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.newBuilder(imageChannel_).mergeFrom(value).buildPartial();
            } else {
              imageChannel_ = value;
            }
            onChanged();
          } else {
            imageChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder clearImageChannel() {
          if (imageChannelBuilder_ == null) {
            imageChannel_ = null;
            onChanged();
          } else {
            imageChannel_ = null;
            imageChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder getImageChannelBuilder() {
          
          onChanged();
          return getImageChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder getImageChannelOrBuilder() {
          if (imageChannelBuilder_ != null) {
            return imageChannelBuilder_.getMessageOrBuilder();
          } else {
            return imageChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance() : imageChannel_;
          }
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder> 
            getImageChannelFieldBuilder() {
          if (imageChannelBuilder_ == null) {
            imageChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder>(
                    getImageChannel(),
                    getParentForChildren(),
                    isClean());
            imageChannel_ = null;
          }
          return imageChannelBuilder_;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SensorChannels>
          PARSER = new com.google.protobuf.AbstractParser<SensorChannels>() {
        @java.lang.Override
        public SensorChannels parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorChannels(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SensorChannels> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SensorChannels> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SummaryStatisticsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The total count of values included in the statistics
       * </pre>
       *
       * <code>double count = 1;</code>
       */
      double getCount();

      /**
       * <pre>
       * The mean of the values
       * </pre>
       *
       * <code>double mean = 2;</code>
       */
      double getMean();

      /**
       * <pre>
       * The median of the values
       * </pre>
       *
       * <code>double median = 3;</code>
       */
      double getMedian();

      /**
       * <pre>
       * The mode of the values
       * </pre>
       *
       * <code>double mode = 4;</code>
       */
      double getMode();

      /**
       * <pre>
       * The variance of the values
       * </pre>
       *
       * <code>double variance = 5;</code>
       */
      double getVariance();

      /**
       * <pre>
       * The minimum value
       * </pre>
       *
       * <code>double min = 6;</code>
       */
      double getMin();

      /**
       * <pre>
       * The maximum value
       * </pre>
       *
       * <code>double max = 7;</code>
       */
      double getMax();

      /**
       * <pre>
       * The range of the values
       * </pre>
       *
       * <code>double range = 8;</code>
       */
      double getRange();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SummaryStatistics}
     */
    public  static final class SummaryStatistics extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
        SummaryStatisticsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SummaryStatistics.newBuilder() to construct.
      private SummaryStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SummaryStatistics() {
        count_ = 0D;
        mean_ = 0D;
        median_ = 0D;
        mode_ = 0D;
        variance_ = 0D;
        min_ = 0D;
        max_ = 0D;
        range_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SummaryStatistics(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {

                count_ = input.readDouble();
                break;
              }
              case 17: {

                mean_ = input.readDouble();
                break;
              }
              case 25: {

                median_ = input.readDouble();
                break;
              }
              case 33: {

                mode_ = input.readDouble();
                break;
              }
              case 41: {

                variance_ = input.readDouble();
                break;
              }
              case 49: {

                min_ = input.readDouble();
                break;
              }
              case 57: {

                max_ = input.readDouble();
                break;
              }
              case 65: {

                range_ = input.readDouble();
                break;
              }
              case 74: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000100;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder.class);
      }

      private int bitField0_;
      public static final int COUNT_FIELD_NUMBER = 1;
      private double count_;
      /**
       * <pre>
       * The total count of values included in the statistics
       * </pre>
       *
       * <code>double count = 1;</code>
       */
      public double getCount() {
        return count_;
      }

      public static final int MEAN_FIELD_NUMBER = 2;
      private double mean_;
      /**
       * <pre>
       * The mean of the values
       * </pre>
       *
       * <code>double mean = 2;</code>
       */
      public double getMean() {
        return mean_;
      }

      public static final int MEDIAN_FIELD_NUMBER = 3;
      private double median_;
      /**
       * <pre>
       * The median of the values
       * </pre>
       *
       * <code>double median = 3;</code>
       */
      public double getMedian() {
        return median_;
      }

      public static final int MODE_FIELD_NUMBER = 4;
      private double mode_;
      /**
       * <pre>
       * The mode of the values
       * </pre>
       *
       * <code>double mode = 4;</code>
       */
      public double getMode() {
        return mode_;
      }

      public static final int VARIANCE_FIELD_NUMBER = 5;
      private double variance_;
      /**
       * <pre>
       * The variance of the values
       * </pre>
       *
       * <code>double variance = 5;</code>
       */
      public double getVariance() {
        return variance_;
      }

      public static final int MIN_FIELD_NUMBER = 6;
      private double min_;
      /**
       * <pre>
       * The minimum value
       * </pre>
       *
       * <code>double min = 6;</code>
       */
      public double getMin() {
        return min_;
      }

      public static final int MAX_FIELD_NUMBER = 7;
      private double max_;
      /**
       * <pre>
       * The maximum value
       * </pre>
       *
       * <code>double max = 7;</code>
       */
      public double getMax() {
        return max_;
      }

      public static final int RANGE_FIELD_NUMBER = 8;
      private double range_;
      /**
       * <pre>
       * The range of the values
       * </pre>
       *
       * <code>double range = 8;</code>
       */
      public double getRange() {
        return range_;
      }

      public static final int METADATA_FIELD_NUMBER = 9;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (count_ != 0D) {
          output.writeDouble(1, count_);
        }
        if (mean_ != 0D) {
          output.writeDouble(2, mean_);
        }
        if (median_ != 0D) {
          output.writeDouble(3, median_);
        }
        if (mode_ != 0D) {
          output.writeDouble(4, mode_);
        }
        if (variance_ != 0D) {
          output.writeDouble(5, variance_);
        }
        if (min_ != 0D) {
          output.writeDouble(6, min_);
        }
        if (max_ != 0D) {
          output.writeDouble(7, max_);
        }
        if (range_ != 0D) {
          output.writeDouble(8, range_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            9);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (count_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, count_);
        }
        if (mean_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, mean_);
        }
        if (median_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, median_);
        }
        if (mode_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, mode_);
        }
        if (variance_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, variance_);
        }
        if (min_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, min_);
        }
        if (max_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, max_);
        }
        if (range_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, range_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics) obj;

        boolean result = true;
        result = result && (
            java.lang.Double.doubleToLongBits(getCount())
            == java.lang.Double.doubleToLongBits(
                other.getCount()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMean())
            == java.lang.Double.doubleToLongBits(
                other.getMean()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMedian())
            == java.lang.Double.doubleToLongBits(
                other.getMedian()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMode())
            == java.lang.Double.doubleToLongBits(
                other.getMode()));
        result = result && (
            java.lang.Double.doubleToLongBits(getVariance())
            == java.lang.Double.doubleToLongBits(
                other.getVariance()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMin())
            == java.lang.Double.doubleToLongBits(
                other.getMin()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMax())
            == java.lang.Double.doubleToLongBits(
                other.getMax()));
        result = result && (
            java.lang.Double.doubleToLongBits(getRange())
            == java.lang.Double.doubleToLongBits(
                other.getRange()));
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCount()));
        hash = (37 * hash) + MEAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMean()));
        hash = (37 * hash) + MEDIAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMedian()));
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMode()));
        hash = (37 * hash) + VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVariance()));
        hash = (37 * hash) + MIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMin()));
        hash = (37 * hash) + MAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMax()));
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRange()));
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SummaryStatistics}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 9:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 9:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          count_ = 0D;

          mean_ = 0D;

          median_ = 0D;

          mode_ = 0D;

          variance_ = 0D;

          min_ = 0D;

          max_ = 0D;

          range_ = 0D;

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.count_ = count_;
          result.mean_ = mean_;
          result.median_ = median_;
          result.mode_ = mode_;
          result.variance_ = variance_;
          result.min_ = min_;
          result.max_ = max_;
          result.range_ = range_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance()) return this;
          if (other.getCount() != 0D) {
            setCount(other.getCount());
          }
          if (other.getMean() != 0D) {
            setMean(other.getMean());
          }
          if (other.getMedian() != 0D) {
            setMedian(other.getMedian());
          }
          if (other.getMode() != 0D) {
            setMode(other.getMode());
          }
          if (other.getVariance() != 0D) {
            setVariance(other.getVariance());
          }
          if (other.getMin() != 0D) {
            setMin(other.getMin());
          }
          if (other.getMax() != 0D) {
            setMax(other.getMax());
          }
          if (other.getRange() != 0D) {
            setRange(other.getRange());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double count_ ;
        /**
         * <pre>
         * The total count of values included in the statistics
         * </pre>
         *
         * <code>double count = 1;</code>
         */
        public double getCount() {
          return count_;
        }
        /**
         * <pre>
         * The total count of values included in the statistics
         * </pre>
         *
         * <code>double count = 1;</code>
         */
        public Builder setCount(double value) {
          
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The total count of values included in the statistics
         * </pre>
         *
         * <code>double count = 1;</code>
         */
        public Builder clearCount() {
          
          count_ = 0D;
          onChanged();
          return this;
        }

        private double mean_ ;
        /**
         * <pre>
         * The mean of the values
         * </pre>
         *
         * <code>double mean = 2;</code>
         */
        public double getMean() {
          return mean_;
        }
        /**
         * <pre>
         * The mean of the values
         * </pre>
         *
         * <code>double mean = 2;</code>
         */
        public Builder setMean(double value) {
          
          mean_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The mean of the values
         * </pre>
         *
         * <code>double mean = 2;</code>
         */
        public Builder clearMean() {
          
          mean_ = 0D;
          onChanged();
          return this;
        }

        private double median_ ;
        /**
         * <pre>
         * The median of the values
         * </pre>
         *
         * <code>double median = 3;</code>
         */
        public double getMedian() {
          return median_;
        }
        /**
         * <pre>
         * The median of the values
         * </pre>
         *
         * <code>double median = 3;</code>
         */
        public Builder setMedian(double value) {
          
          median_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The median of the values
         * </pre>
         *
         * <code>double median = 3;</code>
         */
        public Builder clearMedian() {
          
          median_ = 0D;
          onChanged();
          return this;
        }

        private double mode_ ;
        /**
         * <pre>
         * The mode of the values
         * </pre>
         *
         * <code>double mode = 4;</code>
         */
        public double getMode() {
          return mode_;
        }
        /**
         * <pre>
         * The mode of the values
         * </pre>
         *
         * <code>double mode = 4;</code>
         */
        public Builder setMode(double value) {
          
          mode_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The mode of the values
         * </pre>
         *
         * <code>double mode = 4;</code>
         */
        public Builder clearMode() {
          
          mode_ = 0D;
          onChanged();
          return this;
        }

        private double variance_ ;
        /**
         * <pre>
         * The variance of the values
         * </pre>
         *
         * <code>double variance = 5;</code>
         */
        public double getVariance() {
          return variance_;
        }
        /**
         * <pre>
         * The variance of the values
         * </pre>
         *
         * <code>double variance = 5;</code>
         */
        public Builder setVariance(double value) {
          
          variance_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The variance of the values
         * </pre>
         *
         * <code>double variance = 5;</code>
         */
        public Builder clearVariance() {
          
          variance_ = 0D;
          onChanged();
          return this;
        }

        private double min_ ;
        /**
         * <pre>
         * The minimum value
         * </pre>
         *
         * <code>double min = 6;</code>
         */
        public double getMin() {
          return min_;
        }
        /**
         * <pre>
         * The minimum value
         * </pre>
         *
         * <code>double min = 6;</code>
         */
        public Builder setMin(double value) {
          
          min_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The minimum value
         * </pre>
         *
         * <code>double min = 6;</code>
         */
        public Builder clearMin() {
          
          min_ = 0D;
          onChanged();
          return this;
        }

        private double max_ ;
        /**
         * <pre>
         * The maximum value
         * </pre>
         *
         * <code>double max = 7;</code>
         */
        public double getMax() {
          return max_;
        }
        /**
         * <pre>
         * The maximum value
         * </pre>
         *
         * <code>double max = 7;</code>
         */
        public Builder setMax(double value) {
          
          max_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The maximum value
         * </pre>
         *
         * <code>double max = 7;</code>
         */
        public Builder clearMax() {
          
          max_ = 0D;
          onChanged();
          return this;
        }

        private double range_ ;
        /**
         * <pre>
         * The range of the values
         * </pre>
         *
         * <code>double range = 8;</code>
         */
        public double getRange() {
          return range_;
        }
        /**
         * <pre>
         * The range of the values
         * </pre>
         *
         * <code>double range = 8;</code>
         */
        public Builder setRange(double value) {
          
          range_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The range of the values
         * </pre>
         *
         * <code>double range = 8;</code>
         */
        public Builder clearRange() {
          
          range_ = 0D;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SummaryStatistics>
          PARSER = new com.google.protobuf.AbstractParser<SummaryStatistics>() {
        @java.lang.Override
        public SummaryStatistics parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SummaryStatistics(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SummaryStatistics> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SummaryStatistics> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int API_FIELD_NUMBER = 1;
    private double api_;
    /**
     * <pre>
     * Top level packet fields
     * </pre>
     *
     * <code>double api = 1;</code>
     */
    public double getApi() {
      return api_;
    }

    public static final int USER_INFORMATION_FIELD_NUMBER = 2;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation userInformation_;
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    public boolean hasUserInformation() {
      return userInformation_ != null;
    }
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getUserInformation() {
      return userInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance() : userInformation_;
    }
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder getUserInformationOrBuilder() {
      return getUserInformation();
    }

    public static final int DEVICE_INFORMATION_FIELD_NUMBER = 3;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation deviceInformation_;
    /**
     * <pre>
     * Device information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
     */
    public boolean hasDeviceInformation() {
      return deviceInformation_ != null;
    }
    /**
     * <pre>
     * Device information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation getDeviceInformation() {
      return deviceInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDefaultInstance() : deviceInformation_;
    }
    /**
     * <pre>
     * Device information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder getDeviceInformationOrBuilder() {
      return getDeviceInformation();
    }

    public static final int PACKET_INFORMATION_FIELD_NUMBER = 4;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation packetInformation_;
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    public boolean hasPacketInformation() {
      return packetInformation_ != null;
    }
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getPacketInformation() {
      return packetInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance() : packetInformation_;
    }
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder getPacketInformationOrBuilder() {
      return getPacketInformation();
    }

    public static final int TIMING_INFORMATION_FIELD_NUMBER = 5;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation timingInformation_;
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    public boolean hasTimingInformation() {
      return timingInformation_ != null;
    }
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getTimingInformation() {
      return timingInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance() : timingInformation_;
    }
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder getTimingInformationOrBuilder() {
      return getTimingInformation();
    }

    public static final int SENSOR_CHANNELS_FIELD_NUMBER = 6;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels sensorChannels_;
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
     */
    public boolean hasSensorChannels() {
      return sensorChannels_ != null;
    }
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getSensorChannels() {
      return sensorChannels_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance() : sensorChannels_;
    }
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder getSensorChannelsOrBuilder() {
      return getSensorChannels();
    }

    public static final int METADATA_FIELD_NUMBER = 7;
    private static final class MetadataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metadata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMetadata() {
      if (metadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      return metadata_;
    }

    public int getMetadataCount() {
      return internalGetMetadata().getMap().size();
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */

    public boolean containsMetadata(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
      return internalGetMetadata().getMap();
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */

    public java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 7;</code>
     */

    public java.lang.String getMetadataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (api_ != 0D) {
        output.writeDouble(1, api_);
      }
      if (userInformation_ != null) {
        output.writeMessage(2, getUserInformation());
      }
      if (deviceInformation_ != null) {
        output.writeMessage(3, getDeviceInformation());
      }
      if (packetInformation_ != null) {
        output.writeMessage(4, getPacketInformation());
      }
      if (timingInformation_ != null) {
        output.writeMessage(5, getTimingInformation());
      }
      if (sensorChannels_ != null) {
        output.writeMessage(6, getSensorChannels());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetadata(),
          MetadataDefaultEntryHolder.defaultEntry,
          7);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (api_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, api_);
      }
      if (userInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserInformation());
      }
      if (deviceInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDeviceInformation());
      }
      if (packetInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPacketInformation());
      }
      if (timingInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTimingInformation());
      }
      if (sensorChannels_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSensorChannels());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMetadata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, metadata__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getApi())
          == java.lang.Double.doubleToLongBits(
              other.getApi()));
      result = result && (hasUserInformation() == other.hasUserInformation());
      if (hasUserInformation()) {
        result = result && getUserInformation()
            .equals(other.getUserInformation());
      }
      result = result && (hasDeviceInformation() == other.hasDeviceInformation());
      if (hasDeviceInformation()) {
        result = result && getDeviceInformation()
            .equals(other.getDeviceInformation());
      }
      result = result && (hasPacketInformation() == other.hasPacketInformation());
      if (hasPacketInformation()) {
        result = result && getPacketInformation()
            .equals(other.getPacketInformation());
      }
      result = result && (hasTimingInformation() == other.hasTimingInformation());
      if (hasTimingInformation()) {
        result = result && getTimingInformation()
            .equals(other.getTimingInformation());
      }
      result = result && (hasSensorChannels() == other.hasSensorChannels());
      if (hasSensorChannels()) {
        result = result && getSensorChannels()
            .equals(other.getSensorChannels());
      }
      result = result && internalGetMetadata().equals(
          other.internalGetMetadata());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + API_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getApi()));
      if (hasUserInformation()) {
        hash = (37 * hash) + USER_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getUserInformation().hashCode();
      }
      if (hasDeviceInformation()) {
        hash = (37 * hash) + DEVICE_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceInformation().hashCode();
      }
      if (hasPacketInformation()) {
        hash = (37 * hash) + PACKET_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getPacketInformation().hashCode();
      }
      if (hasTimingInformation()) {
        hash = (37 * hash) + TIMING_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getTimingInformation().hashCode();
      }
      if (hasSensorChannels()) {
        hash = (37 * hash) + SENSOR_CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getSensorChannels().hashCode();
      }
      if (!internalGetMetadata().getMap().isEmpty()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetadata().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000)
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        api_ = 0D;

        if (userInformationBuilder_ == null) {
          userInformation_ = null;
        } else {
          userInformation_ = null;
          userInformationBuilder_ = null;
        }
        if (deviceInformationBuilder_ == null) {
          deviceInformation_ = null;
        } else {
          deviceInformation_ = null;
          deviceInformationBuilder_ = null;
        }
        if (packetInformationBuilder_ == null) {
          packetInformation_ = null;
        } else {
          packetInformation_ = null;
          packetInformationBuilder_ = null;
        }
        if (timingInformationBuilder_ == null) {
          timingInformation_ = null;
        } else {
          timingInformation_ = null;
          timingInformationBuilder_ = null;
        }
        if (sensorChannelsBuilder_ == null) {
          sensorChannels_ = null;
        } else {
          sensorChannels_ = null;
          sensorChannelsBuilder_ = null;
        }
        internalGetMutableMetadata().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 build() {
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.api_ = api_;
        if (userInformationBuilder_ == null) {
          result.userInformation_ = userInformation_;
        } else {
          result.userInformation_ = userInformationBuilder_.build();
        }
        if (deviceInformationBuilder_ == null) {
          result.deviceInformation_ = deviceInformation_;
        } else {
          result.deviceInformation_ = deviceInformationBuilder_.build();
        }
        if (packetInformationBuilder_ == null) {
          result.packetInformation_ = packetInformation_;
        } else {
          result.packetInformation_ = packetInformationBuilder_.build();
        }
        if (timingInformationBuilder_ == null) {
          result.timingInformation_ = timingInformation_;
        } else {
          result.timingInformation_ = timingInformationBuilder_.build();
        }
        if (sensorChannelsBuilder_ == null) {
          result.sensorChannels_ = sensorChannels_;
        } else {
          result.sensorChannels_ = sensorChannelsBuilder_.build();
        }
        result.metadata_ = internalGetMetadata();
        result.metadata_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.getDefaultInstance()) return this;
        if (other.getApi() != 0D) {
          setApi(other.getApi());
        }
        if (other.hasUserInformation()) {
          mergeUserInformation(other.getUserInformation());
        }
        if (other.hasDeviceInformation()) {
          mergeDeviceInformation(other.getDeviceInformation());
        }
        if (other.hasPacketInformation()) {
          mergePacketInformation(other.getPacketInformation());
        }
        if (other.hasTimingInformation()) {
          mergeTimingInformation(other.getTimingInformation());
        }
        if (other.hasSensorChannels()) {
          mergeSensorChannels(other.getSensorChannels());
        }
        internalGetMutableMetadata().mergeFrom(
            other.internalGetMetadata());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double api_ ;
      /**
       * <pre>
       * Top level packet fields
       * </pre>
       *
       * <code>double api = 1;</code>
       */
      public double getApi() {
        return api_;
      }
      /**
       * <pre>
       * Top level packet fields
       * </pre>
       *
       * <code>double api = 1;</code>
       */
      public Builder setApi(double value) {
        
        api_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Top level packet fields
       * </pre>
       *
       * <code>double api = 1;</code>
       */
      public Builder clearApi() {
        
        api_ = 0D;
        onChanged();
        return this;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation userInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder> userInformationBuilder_;
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public boolean hasUserInformation() {
        return userInformationBuilder_ != null || userInformation_ != null;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getUserInformation() {
        if (userInformationBuilder_ == null) {
          return userInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance() : userInformation_;
        } else {
          return userInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder setUserInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation value) {
        if (userInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userInformation_ = value;
          onChanged();
        } else {
          userInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder setUserInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder builderForValue) {
        if (userInformationBuilder_ == null) {
          userInformation_ = builderForValue.build();
          onChanged();
        } else {
          userInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder mergeUserInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation value) {
        if (userInformationBuilder_ == null) {
          if (userInformation_ != null) {
            userInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.newBuilder(userInformation_).mergeFrom(value).buildPartial();
          } else {
            userInformation_ = value;
          }
          onChanged();
        } else {
          userInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder clearUserInformation() {
        if (userInformationBuilder_ == null) {
          userInformation_ = null;
          onChanged();
        } else {
          userInformation_ = null;
          userInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder getUserInformationBuilder() {
        
        onChanged();
        return getUserInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder getUserInformationOrBuilder() {
        if (userInformationBuilder_ != null) {
          return userInformationBuilder_.getMessageOrBuilder();
        } else {
          return userInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance() : userInformation_;
        }
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder> 
          getUserInformationFieldBuilder() {
        if (userInformationBuilder_ == null) {
          userInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder>(
                  getUserInformation(),
                  getParentForChildren(),
                  isClean());
          userInformation_ = null;
        }
        return userInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation deviceInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder> deviceInformationBuilder_;
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public boolean hasDeviceInformation() {
        return deviceInformationBuilder_ != null || deviceInformation_ != null;
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation getDeviceInformation() {
        if (deviceInformationBuilder_ == null) {
          return deviceInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDefaultInstance() : deviceInformation_;
        } else {
          return deviceInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public Builder setDeviceInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation value) {
        if (deviceInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceInformation_ = value;
          onChanged();
        } else {
          deviceInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public Builder setDeviceInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder builderForValue) {
        if (deviceInformationBuilder_ == null) {
          deviceInformation_ = builderForValue.build();
          onChanged();
        } else {
          deviceInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public Builder mergeDeviceInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation value) {
        if (deviceInformationBuilder_ == null) {
          if (deviceInformation_ != null) {
            deviceInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.newBuilder(deviceInformation_).mergeFrom(value).buildPartial();
          } else {
            deviceInformation_ = value;
          }
          onChanged();
        } else {
          deviceInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public Builder clearDeviceInformation() {
        if (deviceInformationBuilder_ == null) {
          deviceInformation_ = null;
          onChanged();
        } else {
          deviceInformation_ = null;
          deviceInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder getDeviceInformationBuilder() {
        
        onChanged();
        return getDeviceInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder getDeviceInformationOrBuilder() {
        if (deviceInformationBuilder_ != null) {
          return deviceInformationBuilder_.getMessageOrBuilder();
        } else {
          return deviceInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.getDefaultInstance() : deviceInformation_;
        }
      }
      /**
       * <pre>
       * Device information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.DeviceInformation device_information = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder> 
          getDeviceInformationFieldBuilder() {
        if (deviceInformationBuilder_ == null) {
          deviceInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.DeviceInformationOrBuilder>(
                  getDeviceInformation(),
                  getParentForChildren(),
                  isClean());
          deviceInformation_ = null;
        }
        return deviceInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation packetInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder> packetInformationBuilder_;
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public boolean hasPacketInformation() {
        return packetInformationBuilder_ != null || packetInformation_ != null;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getPacketInformation() {
        if (packetInformationBuilder_ == null) {
          return packetInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance() : packetInformation_;
        } else {
          return packetInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder setPacketInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation value) {
        if (packetInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packetInformation_ = value;
          onChanged();
        } else {
          packetInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder setPacketInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder builderForValue) {
        if (packetInformationBuilder_ == null) {
          packetInformation_ = builderForValue.build();
          onChanged();
        } else {
          packetInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder mergePacketInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation value) {
        if (packetInformationBuilder_ == null) {
          if (packetInformation_ != null) {
            packetInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.newBuilder(packetInformation_).mergeFrom(value).buildPartial();
          } else {
            packetInformation_ = value;
          }
          onChanged();
        } else {
          packetInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder clearPacketInformation() {
        if (packetInformationBuilder_ == null) {
          packetInformation_ = null;
          onChanged();
        } else {
          packetInformation_ = null;
          packetInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder getPacketInformationBuilder() {
        
        onChanged();
        return getPacketInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder getPacketInformationOrBuilder() {
        if (packetInformationBuilder_ != null) {
          return packetInformationBuilder_.getMessageOrBuilder();
        } else {
          return packetInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance() : packetInformation_;
        }
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder> 
          getPacketInformationFieldBuilder() {
        if (packetInformationBuilder_ == null) {
          packetInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder>(
                  getPacketInformation(),
                  getParentForChildren(),
                  isClean());
          packetInformation_ = null;
        }
        return packetInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation timingInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder> timingInformationBuilder_;
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public boolean hasTimingInformation() {
        return timingInformationBuilder_ != null || timingInformation_ != null;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getTimingInformation() {
        if (timingInformationBuilder_ == null) {
          return timingInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance() : timingInformation_;
        } else {
          return timingInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder setTimingInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation value) {
        if (timingInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timingInformation_ = value;
          onChanged();
        } else {
          timingInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder setTimingInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder builderForValue) {
        if (timingInformationBuilder_ == null) {
          timingInformation_ = builderForValue.build();
          onChanged();
        } else {
          timingInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder mergeTimingInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation value) {
        if (timingInformationBuilder_ == null) {
          if (timingInformation_ != null) {
            timingInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.newBuilder(timingInformation_).mergeFrom(value).buildPartial();
          } else {
            timingInformation_ = value;
          }
          onChanged();
        } else {
          timingInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder clearTimingInformation() {
        if (timingInformationBuilder_ == null) {
          timingInformation_ = null;
          onChanged();
        } else {
          timingInformation_ = null;
          timingInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder getTimingInformationBuilder() {
        
        onChanged();
        return getTimingInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder getTimingInformationOrBuilder() {
        if (timingInformationBuilder_ != null) {
          return timingInformationBuilder_.getMessageOrBuilder();
        } else {
          return timingInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance() : timingInformation_;
        }
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder> 
          getTimingInformationFieldBuilder() {
        if (timingInformationBuilder_ == null) {
          timingInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder>(
                  getTimingInformation(),
                  getParentForChildren(),
                  isClean());
          timingInformation_ = null;
        }
        return timingInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels sensorChannels_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder> sensorChannelsBuilder_;
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public boolean hasSensorChannels() {
        return sensorChannelsBuilder_ != null || sensorChannels_ != null;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getSensorChannels() {
        if (sensorChannelsBuilder_ == null) {
          return sensorChannels_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance() : sensorChannels_;
        } else {
          return sensorChannelsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public Builder setSensorChannels(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels value) {
        if (sensorChannelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensorChannels_ = value;
          onChanged();
        } else {
          sensorChannelsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public Builder setSensorChannels(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder builderForValue) {
        if (sensorChannelsBuilder_ == null) {
          sensorChannels_ = builderForValue.build();
          onChanged();
        } else {
          sensorChannelsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public Builder mergeSensorChannels(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels value) {
        if (sensorChannelsBuilder_ == null) {
          if (sensorChannels_ != null) {
            sensorChannels_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.newBuilder(sensorChannels_).mergeFrom(value).buildPartial();
          } else {
            sensorChannels_ = value;
          }
          onChanged();
        } else {
          sensorChannelsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public Builder clearSensorChannels() {
        if (sensorChannelsBuilder_ == null) {
          sensorChannels_ = null;
          onChanged();
        } else {
          sensorChannels_ = null;
          sensorChannelsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder getSensorChannelsBuilder() {
        
        onChanged();
        return getSensorChannelsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder getSensorChannelsOrBuilder() {
        if (sensorChannelsBuilder_ != null) {
          return sensorChannelsBuilder_.getMessageOrBuilder();
        } else {
          return sensorChannels_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance() : sensorChannels_;
        }
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder> 
          getSensorChannelsFieldBuilder() {
        if (sensorChannelsBuilder_ == null) {
          sensorChannelsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder>(
                  getSensorChannels(),
                  getParentForChildren(),
                  isClean());
          sensorChannels_ = null;
        }
        return sensorChannelsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMetadata() {
        onChanged();;
        if (metadata_ == null) {
          metadata_ = com.google.protobuf.MapField.newMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        if (!metadata_.isMutable()) {
          metadata_ = metadata_.copy();
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetadata() {
        internalGetMutableMetadata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */

      public Builder removeMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetadata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMetadata() {
        return internalGetMutableMetadata().getMutableMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */
      public Builder putMetadata(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetadata().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 7;</code>
       */

      public Builder putAllMetadata(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMetadata().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedvoxPacket1000>
        PARSER = new com.google.protobuf.AbstractParser<RedvoxPacket1000>() {
      @java.lang.Override
      public RedvoxPacket1000 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RedvoxPacket1000(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedvoxPacket1000> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedvoxPacket1000> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcquisitionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.AcquisitionRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The compressed packet to send.
     * </pre>
     *
     * <code>bytes compressed_redvox_packet_1000 = 1;</code>
     */
    com.google.protobuf.ByteString getCompressedRedvoxPacket1000();

    /**
     * <pre>
     * A checksum of the bytes in field 1.
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    long getChecksum();
  }
  /**
   * <pre>
   * Message for sending RedVox data to a redvox.io data acquisition service.
   * </pre>
   *
   * Protobuf type {@code redvox_api1000.AcquisitionRequest}
   */
  public  static final class AcquisitionRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.AcquisitionRequest)
      AcquisitionRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AcquisitionRequest.newBuilder() to construct.
    private AcquisitionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcquisitionRequest() {
      compressedRedvoxPacket1000_ = com.google.protobuf.ByteString.EMPTY;
      checksum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AcquisitionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              compressedRedvoxPacket1000_ = input.readBytes();
              break;
            }
            case 16: {

              checksum_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.Builder.class);
    }

    public static final int COMPRESSED_REDVOX_PACKET_1000_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString compressedRedvoxPacket1000_;
    /**
     * <pre>
     * The compressed packet to send.
     * </pre>
     *
     * <code>bytes compressed_redvox_packet_1000 = 1;</code>
     */
    public com.google.protobuf.ByteString getCompressedRedvoxPacket1000() {
      return compressedRedvoxPacket1000_;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 2;
    private long checksum_;
    /**
     * <pre>
     * A checksum of the bytes in field 1.
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    public long getChecksum() {
      return checksum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!compressedRedvoxPacket1000_.isEmpty()) {
        output.writeBytes(1, compressedRedvoxPacket1000_);
      }
      if (checksum_ != 0L) {
        output.writeInt64(2, checksum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!compressedRedvoxPacket1000_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, compressedRedvoxPacket1000_);
      }
      if (checksum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, checksum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest other = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest) obj;

      boolean result = true;
      result = result && getCompressedRedvoxPacket1000()
          .equals(other.getCompressedRedvoxPacket1000());
      result = result && (getChecksum()
          == other.getChecksum());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMPRESSED_REDVOX_PACKET_1000_FIELD_NUMBER;
      hash = (53 * hash) + getCompressedRedvoxPacket1000().hashCode();
      hash = (37 * hash) + CHECKSUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChecksum());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message for sending RedVox data to a redvox.io data acquisition service.
     * </pre>
     *
     * Protobuf type {@code redvox_api1000.AcquisitionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.AcquisitionRequest)
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        compressedRedvoxPacket1000_ = com.google.protobuf.ByteString.EMPTY;

        checksum_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest build() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest result = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest(this);
        result.compressedRedvoxPacket1000_ = compressedRedvoxPacket1000_;
        result.checksum_ = checksum_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.getDefaultInstance()) return this;
        if (other.getCompressedRedvoxPacket1000() != com.google.protobuf.ByteString.EMPTY) {
          setCompressedRedvoxPacket1000(other.getCompressedRedvoxPacket1000());
        }
        if (other.getChecksum() != 0L) {
          setChecksum(other.getChecksum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString compressedRedvoxPacket1000_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The compressed packet to send.
       * </pre>
       *
       * <code>bytes compressed_redvox_packet_1000 = 1;</code>
       */
      public com.google.protobuf.ByteString getCompressedRedvoxPacket1000() {
        return compressedRedvoxPacket1000_;
      }
      /**
       * <pre>
       * The compressed packet to send.
       * </pre>
       *
       * <code>bytes compressed_redvox_packet_1000 = 1;</code>
       */
      public Builder setCompressedRedvoxPacket1000(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        compressedRedvoxPacket1000_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compressed packet to send.
       * </pre>
       *
       * <code>bytes compressed_redvox_packet_1000 = 1;</code>
       */
      public Builder clearCompressedRedvoxPacket1000() {
        
        compressedRedvoxPacket1000_ = getDefaultInstance().getCompressedRedvoxPacket1000();
        onChanged();
        return this;
      }

      private long checksum_ ;
      /**
       * <pre>
       * A checksum of the bytes in field 1.
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public long getChecksum() {
        return checksum_;
      }
      /**
       * <pre>
       * A checksum of the bytes in field 1.
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder setChecksum(long value) {
        
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A checksum of the bytes in field 1.
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder clearChecksum() {
        
        checksum_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.AcquisitionRequest)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.AcquisitionRequest)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcquisitionRequest>
        PARSER = new com.google.protobuf.AbstractParser<AcquisitionRequest>() {
      @java.lang.Override
      public AcquisitionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AcquisitionRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcquisitionRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AcquisitionRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcquisitionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.AcquisitionResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    int getResponseTypeValue();
    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType getResponseType();

    /**
     * <pre>
     * Checksum computed by server
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    long getChecksum();

    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    java.lang.String getDetails();
    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    com.google.protobuf.ByteString
        getDetailsBytes();

    /**
     * <pre>
     * If set, client to should attempt to resend the file
     * </pre>
     *
     * <code>bool resend = 4;</code>
     */
    boolean getResend();
  }
  /**
   * <pre>
   * Response from data acquisition services.
   * </pre>
   *
   * Protobuf type {@code redvox_api1000.AcquisitionResponse}
   */
  public  static final class AcquisitionResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.AcquisitionResponse)
      AcquisitionResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AcquisitionResponse.newBuilder() to construct.
    private AcquisitionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcquisitionResponse() {
      responseType_ = 0;
      checksum_ = 0L;
      details_ = "";
      resend_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AcquisitionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              responseType_ = rawValue;
              break;
            }
            case 16: {

              checksum_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              details_ = s;
              break;
            }
            case 32: {

              resend_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.Builder.class);
    }

    /**
     * <pre>
     * Server response types
     * </pre>
     *
     * Protobuf enum {@code redvox_api1000.AcquisitionResponse.ResponseType}
     */
    public enum ResponseType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * No issues with packet
       * </pre>
       *
       * <code>OK = 0;</code>
       */
      OK(0),
      /**
       * <pre>
       * An authentication error has occurred
       * </pre>
       *
       * <code>AUTH_ERROR = 1;</code>
       */
      AUTH_ERROR(1),
      /**
       * <pre>
       * An error with the data decoding or data quality
       * </pre>
       *
       * <code>DATA_ERROR = 2;</code>
       */
      DATA_ERROR(2),
      /**
       * <pre>
       * Any other errors
       * </pre>
       *
       * <code>OTHER_ERROR = 3;</code>
       */
      OTHER_ERROR(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * No issues with packet
       * </pre>
       *
       * <code>OK = 0;</code>
       */
      public static final int OK_VALUE = 0;
      /**
       * <pre>
       * An authentication error has occurred
       * </pre>
       *
       * <code>AUTH_ERROR = 1;</code>
       */
      public static final int AUTH_ERROR_VALUE = 1;
      /**
       * <pre>
       * An error with the data decoding or data quality
       * </pre>
       *
       * <code>DATA_ERROR = 2;</code>
       */
      public static final int DATA_ERROR_VALUE = 2;
      /**
       * <pre>
       * Any other errors
       * </pre>
       *
       * <code>OTHER_ERROR = 3;</code>
       */
      public static final int OTHER_ERROR_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseType valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseType forNumber(int value) {
        switch (value) {
          case 0: return OK;
          case 1: return AUTH_ERROR;
          case 2: return DATA_ERROR;
          case 3: return OTHER_ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseType>() {
              public ResponseType findValueByNumber(int number) {
                return ResponseType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ResponseType[] VALUES = values();

      public static ResponseType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:redvox_api1000.AcquisitionResponse.ResponseType)
    }

    public static final int RESPONSE_TYPE_FIELD_NUMBER = 1;
    private int responseType_;
    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    public int getResponseTypeValue() {
      return responseType_;
    }
    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType getResponseType() {
      @SuppressWarnings("deprecation")
      io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType result = io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.valueOf(responseType_);
      return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.UNRECOGNIZED : result;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 2;
    private long checksum_;
    /**
     * <pre>
     * Checksum computed by server
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    public long getChecksum() {
      return checksum_;
    }

    public static final int DETAILS_FIELD_NUMBER = 3;
    private volatile java.lang.Object details_;
    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    public java.lang.String getDetails() {
      java.lang.Object ref = details_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        details_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDetailsBytes() {
      java.lang.Object ref = details_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        details_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESEND_FIELD_NUMBER = 4;
    private boolean resend_;
    /**
     * <pre>
     * If set, client to should attempt to resend the file
     * </pre>
     *
     * <code>bool resend = 4;</code>
     */
    public boolean getResend() {
      return resend_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseType_ != io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.OK.getNumber()) {
        output.writeEnum(1, responseType_);
      }
      if (checksum_ != 0L) {
        output.writeInt64(2, checksum_);
      }
      if (!getDetailsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, details_);
      }
      if (resend_ != false) {
        output.writeBool(4, resend_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responseType_ != io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, responseType_);
      }
      if (checksum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, checksum_);
      }
      if (!getDetailsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, details_);
      }
      if (resend_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, resend_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse other = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse) obj;

      boolean result = true;
      result = result && responseType_ == other.responseType_;
      result = result && (getChecksum()
          == other.getChecksum());
      result = result && getDetails()
          .equals(other.getDetails());
      result = result && (getResend()
          == other.getResend());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESPONSE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + responseType_;
      hash = (37 * hash) + CHECKSUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChecksum());
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getDetails().hashCode();
      hash = (37 * hash) + RESEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResend());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response from data acquisition services.
     * </pre>
     *
     * Protobuf type {@code redvox_api1000.AcquisitionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.AcquisitionResponse)
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        responseType_ = 0;

        checksum_ = 0L;

        details_ = "";

        resend_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse build() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse result = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse(this);
        result.responseType_ = responseType_;
        result.checksum_ = checksum_;
        result.details_ = details_;
        result.resend_ = resend_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.getDefaultInstance()) return this;
        if (other.responseType_ != 0) {
          setResponseTypeValue(other.getResponseTypeValue());
        }
        if (other.getChecksum() != 0L) {
          setChecksum(other.getChecksum());
        }
        if (!other.getDetails().isEmpty()) {
          details_ = other.details_;
          onChanged();
        }
        if (other.getResend() != false) {
          setResend(other.getResend());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int responseType_ = 0;
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public int getResponseTypeValue() {
        return responseType_;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public Builder setResponseTypeValue(int value) {
        responseType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType getResponseType() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType result = io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.valueOf(responseType_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public Builder setResponseType(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        responseType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public Builder clearResponseType() {
        
        responseType_ = 0;
        onChanged();
        return this;
      }

      private long checksum_ ;
      /**
       * <pre>
       * Checksum computed by server
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public long getChecksum() {
        return checksum_;
      }
      /**
       * <pre>
       * Checksum computed by server
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder setChecksum(long value) {
        
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Checksum computed by server
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder clearChecksum() {
        
        checksum_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object details_ = "";
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public java.lang.String getDetails() {
        java.lang.Object ref = details_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          details_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDetailsBytes() {
        java.lang.Object ref = details_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          details_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public Builder setDetails(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        details_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public Builder clearDetails() {
        
        details_ = getDefaultInstance().getDetails();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public Builder setDetailsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        details_ = value;
        onChanged();
        return this;
      }

      private boolean resend_ ;
      /**
       * <pre>
       * If set, client to should attempt to resend the file
       * </pre>
       *
       * <code>bool resend = 4;</code>
       */
      public boolean getResend() {
        return resend_;
      }
      /**
       * <pre>
       * If set, client to should attempt to resend the file
       * </pre>
       *
       * <code>bool resend = 4;</code>
       */
      public Builder setResend(boolean value) {
        
        resend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, client to should attempt to resend the file
       * </pre>
       *
       * <code>bool resend = 4;</code>
       */
      public Builder clearResend() {
        
        resend_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.AcquisitionResponse)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.AcquisitionResponse)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcquisitionResponse>
        PARSER = new com.google.protobuf.AbstractParser<AcquisitionResponse>() {
      @java.lang.Override
      public AcquisitionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AcquisitionResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcquisitionResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AcquisitionResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SynchRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.SynchRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 seq_id = 1;</code>
     */
    long getSeqId();

    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    int getSubSeqId();
  }
  /**
   * Protobuf type {@code redvox_api1000.SynchRequest}
   */
  public  static final class SynchRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.SynchRequest)
      SynchRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SynchRequest.newBuilder() to construct.
    private SynchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SynchRequest() {
      seqId_ = 0L;
      subSeqId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SynchRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seqId_ = input.readUInt64();
              break;
            }
            case 16: {

              subSeqId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.Builder.class);
    }

    public static final int SEQ_ID_FIELD_NUMBER = 1;
    private long seqId_;
    /**
     * <code>uint64 seq_id = 1;</code>
     */
    public long getSeqId() {
      return seqId_;
    }

    public static final int SUB_SEQ_ID_FIELD_NUMBER = 2;
    private int subSeqId_;
    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    public int getSubSeqId() {
      return subSeqId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seqId_ != 0L) {
        output.writeUInt64(1, seqId_);
      }
      if (subSeqId_ != 0) {
        output.writeUInt32(2, subSeqId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seqId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, seqId_);
      }
      if (subSeqId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subSeqId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest other = (io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest) obj;

      boolean result = true;
      result = result && (getSeqId()
          == other.getSeqId());
      result = result && (getSubSeqId()
          == other.getSubSeqId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeqId());
      hash = (37 * hash) + SUB_SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSubSeqId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code redvox_api1000.SynchRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.SynchRequest)
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqId_ = 0L;

        subSeqId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest build() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest result = new io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest(this);
        result.seqId_ = seqId_;
        result.subSeqId_ = subSeqId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.getDefaultInstance()) return this;
        if (other.getSeqId() != 0L) {
          setSeqId(other.getSeqId());
        }
        if (other.getSubSeqId() != 0) {
          setSubSeqId(other.getSubSeqId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long seqId_ ;
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public long getSeqId() {
        return seqId_;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder setSeqId(long value) {
        
        seqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder clearSeqId() {
        
        seqId_ = 0L;
        onChanged();
        return this;
      }

      private int subSeqId_ ;
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public int getSubSeqId() {
        return subSeqId_;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder setSubSeqId(int value) {
        
        subSeqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder clearSubSeqId() {
        
        subSeqId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.SynchRequest)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.SynchRequest)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SynchRequest>
        PARSER = new com.google.protobuf.AbstractParser<SynchRequest>() {
      @java.lang.Override
      public SynchRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SynchRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SynchRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SynchRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SynchResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.SynchResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 seq_id = 1;</code>
     */
    long getSeqId();

    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    int getSubSeqId();

    /**
     * <code>uint64 recv_ts_us = 3;</code>
     */
    long getRecvTsUs();

    /**
     * <code>uint64 send_ts_us = 4;</code>
     */
    long getSendTsUs();
  }
  /**
   * Protobuf type {@code redvox_api1000.SynchResponse}
   */
  public  static final class SynchResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.SynchResponse)
      SynchResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SynchResponse.newBuilder() to construct.
    private SynchResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SynchResponse() {
      seqId_ = 0L;
      subSeqId_ = 0;
      recvTsUs_ = 0L;
      sendTsUs_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SynchResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seqId_ = input.readUInt64();
              break;
            }
            case 16: {

              subSeqId_ = input.readUInt32();
              break;
            }
            case 24: {

              recvTsUs_ = input.readUInt64();
              break;
            }
            case 32: {

              sendTsUs_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.Builder.class);
    }

    public static final int SEQ_ID_FIELD_NUMBER = 1;
    private long seqId_;
    /**
     * <code>uint64 seq_id = 1;</code>
     */
    public long getSeqId() {
      return seqId_;
    }

    public static final int SUB_SEQ_ID_FIELD_NUMBER = 2;
    private int subSeqId_;
    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    public int getSubSeqId() {
      return subSeqId_;
    }

    public static final int RECV_TS_US_FIELD_NUMBER = 3;
    private long recvTsUs_;
    /**
     * <code>uint64 recv_ts_us = 3;</code>
     */
    public long getRecvTsUs() {
      return recvTsUs_;
    }

    public static final int SEND_TS_US_FIELD_NUMBER = 4;
    private long sendTsUs_;
    /**
     * <code>uint64 send_ts_us = 4;</code>
     */
    public long getSendTsUs() {
      return sendTsUs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seqId_ != 0L) {
        output.writeUInt64(1, seqId_);
      }
      if (subSeqId_ != 0) {
        output.writeUInt32(2, subSeqId_);
      }
      if (recvTsUs_ != 0L) {
        output.writeUInt64(3, recvTsUs_);
      }
      if (sendTsUs_ != 0L) {
        output.writeUInt64(4, sendTsUs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seqId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, seqId_);
      }
      if (subSeqId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subSeqId_);
      }
      if (recvTsUs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, recvTsUs_);
      }
      if (sendTsUs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, sendTsUs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse other = (io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse) obj;

      boolean result = true;
      result = result && (getSeqId()
          == other.getSeqId());
      result = result && (getSubSeqId()
          == other.getSubSeqId());
      result = result && (getRecvTsUs()
          == other.getRecvTsUs());
      result = result && (getSendTsUs()
          == other.getSendTsUs());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeqId());
      hash = (37 * hash) + SUB_SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSubSeqId();
      hash = (37 * hash) + RECV_TS_US_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecvTsUs());
      hash = (37 * hash) + SEND_TS_US_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSendTsUs());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code redvox_api1000.SynchResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.SynchResponse)
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqId_ = 0L;

        subSeqId_ = 0;

        recvTsUs_ = 0L;

        sendTsUs_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse build() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse result = new io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse(this);
        result.seqId_ = seqId_;
        result.subSeqId_ = subSeqId_;
        result.recvTsUs_ = recvTsUs_;
        result.sendTsUs_ = sendTsUs_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.getDefaultInstance()) return this;
        if (other.getSeqId() != 0L) {
          setSeqId(other.getSeqId());
        }
        if (other.getSubSeqId() != 0) {
          setSubSeqId(other.getSubSeqId());
        }
        if (other.getRecvTsUs() != 0L) {
          setRecvTsUs(other.getRecvTsUs());
        }
        if (other.getSendTsUs() != 0L) {
          setSendTsUs(other.getSendTsUs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long seqId_ ;
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public long getSeqId() {
        return seqId_;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder setSeqId(long value) {
        
        seqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder clearSeqId() {
        
        seqId_ = 0L;
        onChanged();
        return this;
      }

      private int subSeqId_ ;
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public int getSubSeqId() {
        return subSeqId_;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder setSubSeqId(int value) {
        
        subSeqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder clearSubSeqId() {
        
        subSeqId_ = 0;
        onChanged();
        return this;
      }

      private long recvTsUs_ ;
      /**
       * <code>uint64 recv_ts_us = 3;</code>
       */
      public long getRecvTsUs() {
        return recvTsUs_;
      }
      /**
       * <code>uint64 recv_ts_us = 3;</code>
       */
      public Builder setRecvTsUs(long value) {
        
        recvTsUs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 recv_ts_us = 3;</code>
       */
      public Builder clearRecvTsUs() {
        
        recvTsUs_ = 0L;
        onChanged();
        return this;
      }

      private long sendTsUs_ ;
      /**
       * <code>uint64 send_ts_us = 4;</code>
       */
      public long getSendTsUs() {
        return sendTsUs_;
      }
      /**
       * <code>uint64 send_ts_us = 4;</code>
       */
      public Builder setSendTsUs(long value) {
        
        sendTsUs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 send_ts_us = 4;</code>
       */
      public Builder clearSendTsUs() {
        
        sendTsUs_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.SynchResponse)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.SynchResponse)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SynchResponse>
        PARSER = new com.google.protobuf.AbstractParser<SynchResponse>() {
      @java.lang.Override
      public SynchResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SynchResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SynchResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SynchResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_AcquisitionRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_AcquisitionResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_SynchRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_SynchRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_SynchResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_SynchResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(src/redvox_api1000/redvox_api_1000.pro" +
      "to\022\016redvox_api1000\"\247@\n\020RedvoxPacket1000\022" +
      "\013\n\003api\030\001 \001(\001\022J\n\020user_information\030\002 \001(\01320" +
      ".redvox_api1000.RedvoxPacket1000.UserInf" +
      "ormation\022N\n\022device_information\030\003 \001(\01322.r" +
      "edvox_api1000.RedvoxPacket1000.DeviceInf" +
      "ormation\022N\n\022packet_information\030\004 \001(\01322.r" +
      "edvox_api1000.RedvoxPacket1000.PacketInf" +
      "ormation\022N\n\022timing_information\030\005 \001(\01322.r" +
      "edvox_api1000.RedvoxPacket1000.TimingInf" +
      "ormation\022H\n\017sensor_channels\030\006 \001(\0132/.redv" +
      "ox_api1000.RedvoxPacket1000.SensorChanne" +
      "ls\022@\n\010metadata\030\007 \003(\0132..redvox_api1000.Re" +
      "dvoxPacket1000.MetadataEntry\032/\n\rMetadata" +
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\324\001" +
      "\n\017UserInformation\022\022\n\nauth_email\030\001 \001(\t\022\022\n" +
      "\nauth_token\030\002 \001(\t\022\026\n\016firebase_token\030\003 \001(" +
      "\t\022P\n\010metadata\030\004 \003(\0132>.redvox_api1000.Red" +
      "voxPacket1000.UserInformation.MetadataEn" +
      "try\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
      "ue\030\002 \001(\t:\0028\001\032\335\022\n\021DeviceInformation\022\021\n\tde" +
      "vice_id\030\001 \001(\t\022\023\n\013device_uuid\030\002 \001(\t\022\023\n\013de" +
      "vice_make\030\003 \001(\t\022\024\n\014device_model\030\004 \001(\t\022L\n" +
      "\tdevice_os\030\005 \001(\01629.redvox_api1000.Redvox" +
      "Packet1000.DeviceInformation.OsType\022\031\n\021d" +
      "evice_os_version\030\006 \001(\t\022\032\n\022device_app_ver" +
      "sion\030\007 \001(\t\022T\n\014app_settings\030\010 \001(\0132>.redvo" +
      "x_api1000.RedvoxPacket1000.DeviceInforma" +
      "tion.AppSettings\022T\n\014network_type\030\t \001(\0162>" +
      ".redvox_api1000.RedvoxPacket1000.DeviceI" +
      "nformation.NetworkType\022O\n\023network_streng" +
      "th_db\030\n \001(\01322.redvox_api1000.RedvoxPacke" +
      "t1000.SummaryStatistics\022I\n\rdevice_temp_c" +
      "\030\013 \001(\01322.redvox_api1000.RedvoxPacket1000" +
      ".SummaryStatistics\022R\n\026device_battery_per" +
      "cent\030\014 \001(\01322.redvox_api1000.RedvoxPacket" +
      "1000.SummaryStatistics\022O\n\023available_ram_" +
      "bytes\030\r \001(\01322.redvox_api1000.RedvoxPacke" +
      "t1000.SummaryStatistics\022P\n\024available_dis" +
      "k_bytes\030\016 \001(\01322.redvox_api1000.RedvoxPac" +
      "ket1000.SummaryStatistics\022K\n\017cpu_utiliza" +
      "tion\030\017 \001(\01322.redvox_api1000.RedvoxPacket" +
      "1000.SummaryStatistics\022R\n\010metadata\030\020 \003(\013" +
      "2@.redvox_api1000.RedvoxPacket1000.Devic" +
      "eInformation.MetadataEntry\032/\n\rMetadataEn" +
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\365\t\n\013" +
      "AppSettings\022m\n\023audio_sampling_rate\030\001 \001(\016" +
      "2P.redvox_api1000.RedvoxPacket1000.Devic" +
      "eInformation.AppSettings.AudioSamplingRa" +
      "te\022m\n\023audio_source_tuning\030\002 \001(\0162P.redvox" +
      "_api1000.RedvoxPacket1000.DeviceInformat" +
      "ion.AppSettings.AudioSourceTuning\022l\n\030add" +
      "itional_input_sensors\030\003 \003(\0162J.redvox_api" +
      "1000.RedvoxPacket1000.DeviceInformation." +
      "AppSettings.InputSensor\022\034\n\024automatically" +
      "_record\030\004 \001(\010\022\032\n\022launch_at_power_up\030\005 \001(" +
      "\010\022\021\n\tredvox_id\030\006 \001(\t\022\026\n\016push_to_server\030\007" +
      " \001(\010\022\037\n\027publish_data_as_private\030\010 \001(\010\022\033\n" +
      "\023scramble_voice_data\030\t \001(\010\022\030\n\020provide_ba" +
      "ckfill\030\n \001(\010\022#\n\033use_custom_time_sync_ser" +
      "ver\030\013 \001(\010\022\035\n\025time_synch_server_url\030\014 \001(\t" +
      "\022\036\n\026use_custom_data_server\030\r \001(\010\022\027\n\017data" +
      "_server_url\030\016 \001(\t\022\036\n\026auto_delete_data_fi" +
      "les\030\017 \001(\010\022\037\n\027storage_space_allowance\030\020 \001" +
      "(\001\022$\n\034use_sd_card_for_data_storage\030\021 \001(\010" +
      "\022\035\n\025use_location_services\030\022 \001(\010\022\024\n\014use_l" +
      "atitude\030\023 \001(\001\022\025\n\ruse_longitude\030\024 \001(\001\022^\n\010" +
      "metadata\030\025 \003(\0132L.redvox_api1000.RedvoxPa" +
      "cket1000.DeviceInformation.AppSettings.M" +
      "etadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001" +
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"7\n\021AudioSamplingRa" +
      "te\022\t\n\005HZ_80\020\000\022\n\n\006HZ_800\020\001\022\013\n\007HZ_8000\020\002\"=" +
      "\n\021AudioSourceTuning\022\016\n\nINFRASOUND\020\000\022\r\n\tL" +
      "OW_AUDIO\020\001\022\t\n\005AUDIO\020\002\"\243\001\n\013InputSensor\022\r\n" +
      "\tBAROMETER\020\000\022\021\n\rACCELEROMETER\020\001\022\026\n\022ACCEL" +
      "EROMETER_FAST\020\002\022\020\n\014MAGNETOMETER\020\003\022\025\n\021MAG" +
      "NETOMETER_FAST\020\004\022\r\n\tGYROSCOPE\020\005\022\022\n\016GYROS" +
      "COPE_FAST\020\006\022\016\n\nLUMINOSITY\020\007\"/\n\013NetworkTy" +
      "pe\022\010\n\004WIFI\020\000\022\014\n\010CELLULAR\020\001\022\010\n\004NONE\020\002\"6\n\006" +
      "OsType\022\013\n\007ANDROID\020\000\022\007\n\003IOS\020\001\022\t\n\005LINUX\020\002\022" +
      "\013\n\007WINDOWS\020\003\032\303\001\n\021PacketInformation\022\025\n\ris" +
      "_backfilled\030\001 \001(\010\022\022\n\nis_private\030\002 \001(\010\022R\n" +
      "\010metadata\030\003 \003(\0132@.redvox_api1000.RedvoxP" +
      "acket1000.PacketInformation.MetadataEntr" +
      "y\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value" +
      "\030\002 \001(\t:\0028\001\032\331\005\n\021TimingInformation\022\037\n\027pack" +
      "et_start_ts_us_wall\030\001 \001(\001\022\037\n\027packet_star" +
      "t_ts_us_mach\030\002 \001(\001\022\035\n\025packet_end_ts_us_w" +
      "all\030\003 \001(\001\022\035\n\025packet_end_ts_us_mach\030\004 \001(\001" +
      "\022(\n server_acquisition_arrival_ts_us\030\005 \001" +
      "(\001\022\034\n\024app_start_ts_us_mach\030\006 \001(\001\022Y\n\017sync" +
      "h_exchanges\030\007 \003(\0132@.redvox_api1000.Redvo" +
      "xPacket1000.TimingInformation.SynchExcha" +
      "nge\022\027\n\017best_latency_us\030\010 \001(\001\022\026\n\016best_off" +
      "set_us\030\t \001(\001\022R\n\010metadata\030\n \003(\0132@.redvox_" +
      "api1000.RedvoxPacket1000.TimingInformati" +
      "on.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\352\001\n\rSynchExcha" +
      "nge\022\n\n\002a1\030\001 \001(\001\022\n\n\002a2\030\002 \001(\001\022\n\n\002a3\030\003 \001(\001\022" +
      "\n\n\002b1\030\004 \001(\001\022\n\n\002b2\030\005 \001(\001\022\n\n\002b3\030\006 \001(\001\022`\n\010m" +
      "etadata\030\007 \003(\0132N.redvox_api1000.RedvoxPac" +
      "ket1000.TimingInformation.SynchExchange." +
      "MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\242\036\n\016SensorChannel" +
      "s\022]\n\022microphone_channel\030\001 \001(\0132A.redvox_a" +
      "pi1000.RedvoxPacket1000.SensorChannels.M" +
      "icrophoneChannel\022X\n\021barometer_channel\030\002 " +
      "\001(\0132=.redvox_api1000.RedvoxPacket1000.Se" +
      "nsorChannels.SingleChannel\022Y\n\020location_c" +
      "hannel\030\003 \001(\0132?.redvox_api1000.RedvoxPack" +
      "et1000.SensorChannels.LocationChannel\022Y\n" +
      "\025accelerometer_channel\030\004 \001(\0132:.redvox_ap" +
      "i1000.RedvoxPacket1000.SensorChannels.Xy" +
      "zChannel\022U\n\021gyroscope_channel\030\005 \001(\0132:.re" +
      "dvox_api1000.RedvoxPacket1000.SensorChan" +
      "nels.XyzChannel\022X\n\024magnetometer_channel\030" +
      "\006 \001(\0132:.redvox_api1000.RedvoxPacket1000." +
      "SensorChannels.XyzChannel\022T\n\rlight_chann" +
      "el\030\007 \001(\0132=.redvox_api1000.RedvoxPacket10" +
      "00.SensorChannels.SingleChannel\022W\n\020infra" +
      "red_channel\030\010 \001(\0132=.redvox_api1000.Redvo" +
      "xPacket1000.SensorChannels.SingleChannel" +
      "\022S\n\rimage_channel\030\t \001(\0132<.redvox_api1000" +
      ".RedvoxPacket1000.SensorChannels.ImageCh" +
      "annel\022O\n\010metadata\030\n \003(\0132=.redvox_api1000" +
      ".RedvoxPacket1000.SensorChannels.Metadat" +
      "aEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005" +
      "value\030\002 \001(\t:\0028\001\032\355\002\n\021MicrophoneChannel\022\032\n" +
      "\022sensor_description\030\001 \001(\t\022\032\n\022first_sampl" +
      "e_ts_us\030\002 \001(\001\022\026\n\016sample_rate_hz\030\003 \001(\001\022\024\n" +
      "\014is_scrambled\030\004 \001(\010\022\017\n\007samples\030\005 \003(\001\022M\n\021" +
      "sample_statistics\030\006 \001(\01322.redvox_api1000" +
      ".RedvoxPacket1000.SummaryStatistics\022a\n\010m" +
      "etadata\030\007 \003(\0132O.redvox_api1000.RedvoxPac" +
      "ket1000.SensorChannels.MicrophoneChannel" +
      ".MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\242\003\n\rSingleChanne" +
      "l\022\032\n\022sensor_description\030\001 \001(\t\022\033\n\023mean_sa" +
      "mple_rate_hz\030\002 \001(\001\022\024\n\014sample_ts_us\030\003 \003(\001" +
      "\022\017\n\007samples\030\004 \003(\001\022R\n\026sample_rate_statist" +
      "ics\030\005 \001(\01322.redvox_api1000.RedvoxPacket1" +
      "000.SummaryStatistics\022M\n\021sample_statisti" +
      "cs\030\006 \001(\01322.redvox_api1000.RedvoxPacket10" +
      "00.SummaryStatistics\022]\n\010metadata\030\007 \003(\0132K" +
      ".redvox_api1000.RedvoxPacket1000.SensorC" +
      "hannels.SingleChannel.MetadataEntry\032/\n\rM" +
      "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t" +
      ":\0028\001\032\225\t\n\017LocationChannel\022\032\n\022sensor_descr" +
      "iption\030\001 \001(\t\022\033\n\023mean_sample_rate_hz\030\002 \001(" +
      "\001\022\024\n\014sample_ts_us\030\003 \003(\001\022\030\n\020latitude_samp" +
      "les\030\004 \003(\001\022\031\n\021longitude_samples\030\005 \003(\001\022\030\n\020" +
      "altitude_samples\030\006 \003(\001\022\025\n\rspeed_samples\030" +
      "\007 \003(\001\022\030\n\020accuracy_samples\030\010 \003(\001\022$\n\034locat" +
      "ion_permissions_granted\030\t \001(\010\022#\n\033locatio" +
      "n_services_requested\030\n \001(\010\022!\n\031location_s" +
      "ervices_enabled\030\013 \001(\010\022k\n\021location_provid" +
      "er\030\014 \001(\0162P.redvox_api1000.RedvoxPacket10" +
      "00.SensorChannels.LocationChannel.Locati" +
      "onProvider\022R\n\026sample_rate_statistics\030\r \001" +
      "(\01322.redvox_api1000.RedvoxPacket1000.Sum" +
      "maryStatistics\022V\n\032latitude_sample_statis" +
      "tics\030\016 \001(\01322.redvox_api1000.RedvoxPacket" +
      "1000.SummaryStatistics\022W\n\033longitude_samp" +
      "le_statistics\030\017 \001(\01322.redvox_api1000.Red" +
      "voxPacket1000.SummaryStatistics\022V\n\032altit" +
      "ude_sample_statistics\030\020 \001(\01322.redvox_api" +
      "1000.RedvoxPacket1000.SummaryStatistics\022" +
      "S\n\027speed_sample_statistics\030\021 \001(\01322.redvo" +
      "x_api1000.RedvoxPacket1000.SummaryStatis" +
      "tics\022V\n\032accuracy_sample_statistics\030\022 \001(\013" +
      "22.redvox_api1000.RedvoxPacket1000.Summa" +
      "ryStatistics\022_\n\010metadata\030\023 \003(\0132M.redvox_" +
      "api1000.RedvoxPacket1000.SensorChannels." +
      "LocationChannel.MetadataEntry\032/\n\rMetadat" +
      "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"<" +
      "\n\020LocationProvider\022\010\n\004NONE\020\000\022\010\n\004USER\020\001\022\007" +
      "\n\003GPS\020\002\022\013\n\007NETWORK\020\003\032\350\004\n\nXyzChannel\022\032\n\022s" +
      "ensor_description\030\001 \001(\t\022\033\n\023mean_sample_r" +
      "ate_hz\030\002 \001(\001\022\024\n\014sample_ts_us\030\003 \003(\001\022\021\n\tx_" +
      "samples\030\004 \003(\001\022\021\n\ty_samples\030\005 \003(\001\022\021\n\tz_sa" +
      "mples\030\006 \003(\001\022R\n\026sample_rate_statistics\030\007 " +
      "\001(\01322.redvox_api1000.RedvoxPacket1000.Su" +
      "mmaryStatistics\022O\n\023x_sample_statistics\030\010" +
      " \001(\01322.redvox_api1000.RedvoxPacket1000.S" +
      "ummaryStatistics\022O\n\023y_sample_statistics\030" +
      "\t \001(\01322.redvox_api1000.RedvoxPacket1000." +
      "SummaryStatistics\022O\n\023z_sample_statistics" +
      "\030\n \001(\01322.redvox_api1000.RedvoxPacket1000" +
      ".SummaryStatistics\022Z\n\010metadata\030\013 \003(\0132H.r" +
      "edvox_api1000.RedvoxPacket1000.SensorCha" +
      "nnels.XyzChannel.MetadataEntry\032/\n\rMetada" +
      "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032" +
      "\321\002\n\014ImageChannel\022\032\n\022sensor_description\030\001" +
      " \001(\t\022\033\n\023mean_sample_rate_hz\030\002 \001(\001\022\024\n\014sam" +
      "ple_ts_us\030\003 \003(\001\022\017\n\007samples\030\004 \003(\014\022R\n\026samp" +
      "le_rate_statistics\030\005 \001(\01322.redvox_api100" +
      "0.RedvoxPacket1000.SummaryStatistics\022\\\n\010" +
      "metadata\030\006 \003(\0132J.redvox_api1000.RedvoxPa" +
      "cket1000.SensorChannels.ImageChannel.Met" +
      "adataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\t:\0028\001\032\216\002\n\021SummaryStatistic" +
      "s\022\r\n\005count\030\001 \001(\001\022\014\n\004mean\030\002 \001(\001\022\016\n\006median" +
      "\030\003 \001(\001\022\014\n\004mode\030\004 \001(\001\022\020\n\010variance\030\005 \001(\001\022\013" +
      "\n\003min\030\006 \001(\001\022\013\n\003max\030\007 \001(\001\022\r\n\005range\030\010 \001(\001\022" +
      "R\n\010metadata\030\t \003(\0132@.redvox_api1000.Redvo" +
      "xPacket1000.SummaryStatistics.MetadataEn" +
      "try\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
      "ue\030\002 \001(\t:\0028\001\"M\n\022AcquisitionRequest\022%\n\035co" +
      "mpressed_redvox_packet_1000\030\001 \001(\014\022\020\n\010che" +
      "cksum\030\002 \001(\003\"\332\001\n\023AcquisitionResponse\022G\n\rr" +
      "esponse_type\030\001 \001(\01620.redvox_api1000.Acqu" +
      "isitionResponse.ResponseType\022\020\n\010checksum" +
      "\030\002 \001(\003\022\017\n\007details\030\003 \001(\t\022\016\n\006resend\030\004 \001(\010\"" +
      "G\n\014ResponseType\022\006\n\002OK\020\000\022\016\n\nAUTH_ERROR\020\001\022" +
      "\016\n\nDATA_ERROR\020\002\022\017\n\013OTHER_ERROR\020\003\"2\n\014Sync" +
      "hRequest\022\016\n\006seq_id\030\001 \001(\004\022\022\n\nsub_seq_id\030\002" +
      " \001(\r\"[\n\rSynchResponse\022\016\n\006seq_id\030\001 \001(\004\022\022\n" +
      "\nsub_seq_id\030\002 \001(\r\022\022\n\nrecv_ts_us\030\003 \001(\004\022\022\n" +
      "\nsend_ts_us\030\004 \001(\004B\032\n\030io.redvox.redvox_ap" +
      "i1000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_redvox_api1000_RedvoxPacket1000_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_descriptor,
        new java.lang.String[] { "Api", "UserInformation", "DeviceInformation", "PacketInformation", "TimingInformation", "SensorChannels", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor,
        new java.lang.String[] { "AuthEmail", "AuthToken", "FirebaseToken", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(2);
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor,
        new java.lang.String[] { "DeviceId", "DeviceUuid", "DeviceMake", "DeviceModel", "DeviceOs", "DeviceOsVersion", "DeviceAppVersion", "AppSettings", "NetworkType", "NetworkStrengthDb", "DeviceTempC", "DeviceBatteryPercent", "AvailableRamBytes", "AvailableDiskBytes", "CpuUtilization", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor,
        new java.lang.String[] { "AudioSamplingRate", "AudioSourceTuning", "AdditionalInputSensors", "AutomaticallyRecord", "LaunchAtPowerUp", "RedvoxId", "PushToServer", "PublishDataAsPrivate", "ScrambleVoiceData", "ProvideBackfill", "UseCustomTimeSyncServer", "TimeSynchServerUrl", "UseCustomDataServer", "DataServerUrl", "AutoDeleteDataFiles", "StorageSpaceAllowance", "UseSdCardForDataStorage", "UseLocationServices", "UseLatitude", "UseLongitude", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_DeviceInformation_AppSettings_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(3);
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor,
        new java.lang.String[] { "IsBackfilled", "IsPrivate", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(4);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor,
        new java.lang.String[] { "PacketStartTsUsWall", "PacketStartTsUsMach", "PacketEndTsUsWall", "PacketEndTsUsMach", "ServerAcquisitionArrivalTsUs", "AppStartTsUsMach", "SynchExchanges", "BestLatencyUs", "BestOffsetUs", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor,
        new java.lang.String[] { "A1", "A2", "A3", "B1", "B2", "B3", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(5);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor,
        new java.lang.String[] { "MicrophoneChannel", "BarometerChannel", "LocationChannel", "AccelerometerChannel", "GyroscopeChannel", "MagnetometerChannel", "LightChannel", "InfraredChannel", "ImageChannel", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "FirstSampleTsUs", "SampleRateHz", "IsScrambled", "Samples", "SampleStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MicrophoneChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(2);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "MeanSampleRateHz", "SampleTsUs", "Samples", "SampleRateStatistics", "SampleStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(3);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "MeanSampleRateHz", "SampleTsUs", "LatitudeSamples", "LongitudeSamples", "AltitudeSamples", "SpeedSamples", "AccuracySamples", "LocationPermissionsGranted", "LocationServicesRequested", "LocationServicesEnabled", "LocationProvider", "SampleRateStatistics", "LatitudeSampleStatistics", "LongitudeSampleStatistics", "AltitudeSampleStatistics", "SpeedSampleStatistics", "AccuracySampleStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(4);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "MeanSampleRateHz", "SampleTsUs", "XSamples", "YSamples", "ZSamples", "SampleRateStatistics", "XSampleStatistics", "YSampleStatistics", "ZSampleStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(5);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "MeanSampleRateHz", "SampleTsUs", "Samples", "SampleRateStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(6);
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor,
        new java.lang.String[] { "Count", "Mean", "Median", "Mode", "Variance", "Min", "Max", "Range", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_AcquisitionRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_AcquisitionRequest_descriptor,
        new java.lang.String[] { "CompressedRedvoxPacket1000", "Checksum", });
    internal_static_redvox_api1000_AcquisitionResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_AcquisitionResponse_descriptor,
        new java.lang.String[] { "ResponseType", "Checksum", "Details", "Resend", });
    internal_static_redvox_api1000_SynchRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_redvox_api1000_SynchRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_SynchRequest_descriptor,
        new java.lang.String[] { "SeqId", "SubSeqId", });
    internal_static_redvox_api1000_SynchResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_redvox_api1000_SynchResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_SynchResponse_descriptor,
        new java.lang.String[] { "SeqId", "SubSeqId", "RecvTsUs", "SendTsUs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
