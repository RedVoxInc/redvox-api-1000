// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/redvox_api1000/redvox_api_1000.proto

package io.redvox.redvox_api1000;

public final class RedvoxApi1000 {
  private RedvoxApi1000() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RedvoxPacket1000OrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Top level packet fields
     * </pre>
     *
     * <code>double api = 1;</code>
     */
    double getApi();

    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    boolean hasUserInformation();
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getUserInformation();
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder getUserInformationOrBuilder();

    /**
     * <pre>
     * Station information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
     */
    boolean hasStationInformation();
    /**
     * <pre>
     * Station information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation getStationInformation();
    /**
     * <pre>
     * Station information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder getStationInformationOrBuilder();

    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    boolean hasPacketInformation();
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getPacketInformation();
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder getPacketInformationOrBuilder();

    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    boolean hasTimingInformation();
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getTimingInformation();
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder getTimingInformationOrBuilder();

    /**
     * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
     */
    boolean hasServerInformation();
    /**
     * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation getServerInformation();
    /**
     * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder getServerInformationOrBuilder();

    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
     */
    boolean hasSensorChannels();
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getSensorChannels();
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder getSensorChannelsOrBuilder();

    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */
    int getMetadataCount();
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */
    boolean containsMetadata(
        java.lang.String key);
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMetadata();
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMetadataMap();
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */

    java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */

    java.lang.String getMetadataOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code redvox_api1000.RedvoxPacket1000}
   */
  public  static final class RedvoxPacket1000 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000)
      RedvoxPacket1000OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedvoxPacket1000.newBuilder() to construct.
    private RedvoxPacket1000(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedvoxPacket1000() {
      api_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedvoxPacket1000(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              api_ = input.readDouble();
              break;
            }
            case 18: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder subBuilder = null;
              if (userInformation_ != null) {
                subBuilder = userInformation_.toBuilder();
              }
              userInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userInformation_);
                userInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder subBuilder = null;
              if (stationInformation_ != null) {
                subBuilder = stationInformation_.toBuilder();
              }
              stationInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stationInformation_);
                stationInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder subBuilder = null;
              if (packetInformation_ != null) {
                subBuilder = packetInformation_.toBuilder();
              }
              packetInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(packetInformation_);
                packetInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder subBuilder = null;
              if (timingInformation_ != null) {
                subBuilder = timingInformation_.toBuilder();
              }
              timingInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timingInformation_);
                timingInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder subBuilder = null;
              if (serverInformation_ != null) {
                subBuilder = serverInformation_.toBuilder();
              }
              serverInformation_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverInformation_);
                serverInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder subBuilder = null;
              if (sensorChannels_ != null) {
                subBuilder = sensorChannels_.toBuilder();
              }
              sensorChannels_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensorChannels_);
                sensorChannels_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                metadata_ = com.google.protobuf.MapField.newMapField(
                    MetadataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metadata__ = input.readMessage(
                  MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metadata_.getMutableMap().put(
                  metadata__.getKey(), metadata__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 8:
          return internalGetMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Builder.class);
    }

    /**
     * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.Unit}
     */
    public enum Unit
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>METERS_PER_SECOND_SQUARED = 0;</code>
       */
      METERS_PER_SECOND_SQUARED(0),
      /**
       * <code>KILOPASCAL = 1;</code>
       */
      KILOPASCAL(1),
      /**
       * <code>RADIANS_PER_SECOND = 2;</code>
       */
      RADIANS_PER_SECOND(2),
      /**
       * <code>DECIMAL_DEGREES = 3;</code>
       */
      DECIMAL_DEGREES(3),
      /**
       * <code>METERS = 4;</code>
       */
      METERS(4),
      /**
       * <code>METERS_PER_SECOND = 5;</code>
       */
      METERS_PER_SECOND(5),
      /**
       * <code>MICROTESLA = 6;</code>
       */
      MICROTESLA(6),
      /**
       * <code>LSB_PLUS_MINUS_COUNTS = 7;</code>
       */
      LSB_PLUS_MINUS_COUNTS(7),
      /**
       * <code>MICROSECONDS_SINCE_UNIX_EPOCH = 8;</code>
       */
      MICROSECONDS_SINCE_UNIX_EPOCH(8),
      /**
       * <code>DECIBEL = 9;</code>
       */
      DECIBEL(9),
      /**
       * <code>DEGREES_CELSIUS = 10;</code>
       */
      DEGREES_CELSIUS(10),
      /**
       * <code>BYTE = 11;</code>
       */
      BYTE(11),
      /**
       * <code>PERCENTAGE = 12;</code>
       */
      PERCENTAGE(12),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>METERS_PER_SECOND_SQUARED = 0;</code>
       */
      public static final int METERS_PER_SECOND_SQUARED_VALUE = 0;
      /**
       * <code>KILOPASCAL = 1;</code>
       */
      public static final int KILOPASCAL_VALUE = 1;
      /**
       * <code>RADIANS_PER_SECOND = 2;</code>
       */
      public static final int RADIANS_PER_SECOND_VALUE = 2;
      /**
       * <code>DECIMAL_DEGREES = 3;</code>
       */
      public static final int DECIMAL_DEGREES_VALUE = 3;
      /**
       * <code>METERS = 4;</code>
       */
      public static final int METERS_VALUE = 4;
      /**
       * <code>METERS_PER_SECOND = 5;</code>
       */
      public static final int METERS_PER_SECOND_VALUE = 5;
      /**
       * <code>MICROTESLA = 6;</code>
       */
      public static final int MICROTESLA_VALUE = 6;
      /**
       * <code>LSB_PLUS_MINUS_COUNTS = 7;</code>
       */
      public static final int LSB_PLUS_MINUS_COUNTS_VALUE = 7;
      /**
       * <code>MICROSECONDS_SINCE_UNIX_EPOCH = 8;</code>
       */
      public static final int MICROSECONDS_SINCE_UNIX_EPOCH_VALUE = 8;
      /**
       * <code>DECIBEL = 9;</code>
       */
      public static final int DECIBEL_VALUE = 9;
      /**
       * <code>DEGREES_CELSIUS = 10;</code>
       */
      public static final int DEGREES_CELSIUS_VALUE = 10;
      /**
       * <code>BYTE = 11;</code>
       */
      public static final int BYTE_VALUE = 11;
      /**
       * <code>PERCENTAGE = 12;</code>
       */
      public static final int PERCENTAGE_VALUE = 12;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Unit valueOf(int value) {
        return forNumber(value);
      }

      public static Unit forNumber(int value) {
        switch (value) {
          case 0: return METERS_PER_SECOND_SQUARED;
          case 1: return KILOPASCAL;
          case 2: return RADIANS_PER_SECOND;
          case 3: return DECIMAL_DEGREES;
          case 4: return METERS;
          case 5: return METERS_PER_SECOND;
          case 6: return MICROTESLA;
          case 7: return LSB_PLUS_MINUS_COUNTS;
          case 8: return MICROSECONDS_SINCE_UNIX_EPOCH;
          case 9: return DECIBEL;
          case 10: return DEGREES_CELSIUS;
          case 11: return BYTE;
          case 12: return PERCENTAGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Unit>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Unit> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Unit>() {
              public Unit findValueByNumber(int number) {
                return Unit.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.getDescriptor().getEnumTypes().get(0);
      }

      private static final Unit[] VALUES = values();

      public static Unit valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Unit(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.Unit)
    }

    public interface UserInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.UserInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      java.lang.String getAuthEmail();
      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      com.google.protobuf.ByteString
          getAuthEmailBytes();

      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      java.lang.String getAuthToken();
      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      com.google.protobuf.ByteString
          getAuthTokenBytes();

      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      java.lang.String getFirebaseToken();
      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      com.google.protobuf.ByteString
          getFirebaseTokenBytes();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.UserInformation}
     */
    public  static final class UserInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.UserInformation)
        UserInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UserInformation.newBuilder() to construct.
      private UserInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UserInformation() {
        authEmail_ = "";
        authToken_ = "";
        firebaseToken_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UserInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                authEmail_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                authToken_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                firebaseToken_ = s;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000008;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder.class);
      }

      private int bitField0_;
      public static final int AUTH_EMAIL_FIELD_NUMBER = 1;
      private volatile java.lang.Object authEmail_;
      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      public java.lang.String getAuthEmail() {
        java.lang.Object ref = authEmail_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authEmail_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The e-mail the user used to authenticate with
       * </pre>
       *
       * <code>string auth_email = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAuthEmailBytes() {
        java.lang.Object ref = authEmail_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authEmail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTH_TOKEN_FIELD_NUMBER = 2;
      private volatile java.lang.Object authToken_;
      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      public java.lang.String getAuthToken() {
        java.lang.Object ref = authToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authToken_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The JWT token used for authentication
       * </pre>
       *
       * <code>string auth_token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAuthTokenBytes() {
        java.lang.Object ref = authToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FIREBASE_TOKEN_FIELD_NUMBER = 3;
      private volatile java.lang.Object firebaseToken_;
      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      public java.lang.String getFirebaseToken() {
        java.lang.Object ref = firebaseToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          firebaseToken_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The assigned firebase token
       * </pre>
       *
       * <code>string firebase_token = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFirebaseTokenBytes() {
        java.lang.Object ref = firebaseToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firebaseToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int METADATA_FIELD_NUMBER = 4;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getAuthEmailBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authEmail_);
        }
        if (!getAuthTokenBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, authToken_);
        }
        if (!getFirebaseTokenBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, firebaseToken_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            4);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getAuthEmailBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authEmail_);
        }
        if (!getAuthTokenBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, authToken_);
        }
        if (!getFirebaseTokenBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, firebaseToken_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation) obj;

        boolean result = true;
        result = result && getAuthEmail()
            .equals(other.getAuthEmail());
        result = result && getAuthToken()
            .equals(other.getAuthToken());
        result = result && getFirebaseToken()
            .equals(other.getFirebaseToken());
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + AUTH_EMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getAuthEmail().hashCode();
        hash = (37 * hash) + AUTH_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAuthToken().hashCode();
        hash = (37 * hash) + FIREBASE_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getFirebaseToken().hashCode();
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.UserInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.UserInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          authEmail_ = "";

          authToken_ = "";

          firebaseToken_ = "";

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.authEmail_ = authEmail_;
          result.authToken_ = authToken_;
          result.firebaseToken_ = firebaseToken_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance()) return this;
          if (!other.getAuthEmail().isEmpty()) {
            authEmail_ = other.authEmail_;
            onChanged();
          }
          if (!other.getAuthToken().isEmpty()) {
            authToken_ = other.authToken_;
            onChanged();
          }
          if (!other.getFirebaseToken().isEmpty()) {
            firebaseToken_ = other.firebaseToken_;
            onChanged();
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object authEmail_ = "";
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public java.lang.String getAuthEmail() {
          java.lang.Object ref = authEmail_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authEmail_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public com.google.protobuf.ByteString
            getAuthEmailBytes() {
          java.lang.Object ref = authEmail_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authEmail_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public Builder setAuthEmail(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authEmail_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public Builder clearAuthEmail() {
          
          authEmail_ = getDefaultInstance().getAuthEmail();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The e-mail the user used to authenticate with
         * </pre>
         *
         * <code>string auth_email = 1;</code>
         */
        public Builder setAuthEmailBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authEmail_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object authToken_ = "";
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public java.lang.String getAuthToken() {
          java.lang.Object ref = authToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authToken_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public com.google.protobuf.ByteString
            getAuthTokenBytes() {
          java.lang.Object ref = authToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public Builder setAuthToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public Builder clearAuthToken() {
          
          authToken_ = getDefaultInstance().getAuthToken();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The JWT token used for authentication
         * </pre>
         *
         * <code>string auth_token = 2;</code>
         */
        public Builder setAuthTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authToken_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object firebaseToken_ = "";
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public java.lang.String getFirebaseToken() {
          java.lang.Object ref = firebaseToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            firebaseToken_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public com.google.protobuf.ByteString
            getFirebaseTokenBytes() {
          java.lang.Object ref = firebaseToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            firebaseToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public Builder setFirebaseToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          firebaseToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public Builder clearFirebaseToken() {
          
          firebaseToken_ = getDefaultInstance().getFirebaseToken();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The assigned firebase token
         * </pre>
         *
         * <code>string firebase_token = 3;</code>
         */
        public Builder setFirebaseTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          firebaseToken_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.UserInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.UserInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<UserInformation>
          PARSER = new com.google.protobuf.AbstractParser<UserInformation>() {
        @java.lang.Override
        public UserInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UserInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UserInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StationInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.StationInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The user selectable station id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      java.lang.String getId();
      /**
       * <pre>
       * The user selectable station id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string uuid = 2;</code>
       */
      java.lang.String getUuid();
      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string uuid = 2;</code>
       */
      com.google.protobuf.ByteString
          getUuidBytes();

      /**
       * <pre>
       * Make of the station
       * </pre>
       *
       * <code>string make = 3;</code>
       */
      java.lang.String getMake();
      /**
       * <pre>
       * Make of the station
       * </pre>
       *
       * <code>string make = 3;</code>
       */
      com.google.protobuf.ByteString
          getMakeBytes();

      /**
       * <pre>
       * Model of the station
       * </pre>
       *
       * <code>string model = 4;</code>
       */
      java.lang.String getModel();
      /**
       * <pre>
       * Model of the station
       * </pre>
       *
       * <code>string model = 4;</code>
       */
      com.google.protobuf.ByteString
          getModelBytes();

      /**
       * <pre>
       * OS of the station
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
       */
      int getOsValue();
      /**
       * <pre>
       * OS of the station
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType getOs();

      /**
       * <pre>
       * OS version of the station
       * </pre>
       *
       * <code>string os_version = 6;</code>
       */
      java.lang.String getOsVersion();
      /**
       * <pre>
       * OS version of the station
       * </pre>
       *
       * <code>string os_version = 6;</code>
       */
      com.google.protobuf.ByteString
          getOsVersionBytes();

      /**
       * <pre>
       * App version on the station
       * </pre>
       *
       * <code>string app_version = 7;</code>
       */
      java.lang.String getAppVersion();
      /**
       * <pre>
       * App version on the station
       * </pre>
       *
       * <code>string app_version = 7;</code>
       */
      com.google.protobuf.ByteString
          getAppVersionBytes();

      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
       */
      boolean hasAppSettings();
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings getAppSettings();
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder getAppSettingsOrBuilder();

      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
       */
      int getNetworkTypeValue();
      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType getNetworkType();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
       */
      boolean hasStationInformationTimestamps();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getStationInformationTimestamps();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getStationInformationTimestampsOrBuilder();

      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
       */
      boolean hasNetworkStrength();
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getNetworkStrength();
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getNetworkStrengthOrBuilder();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
       */
      boolean hasTemperature();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTemperature();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTemperatureOrBuilder();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
       */
      boolean hasBattery();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBattery();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBatteryOrBuilder();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
       */
      boolean hasAvailableRam();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAvailableRam();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAvailableRamOrBuilder();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
       */
      boolean hasAvailableDisk();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAvailableDisk();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAvailableDiskOrBuilder();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
       */
      boolean hasCpuUtilization();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getCpuUtilization();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getCpuUtilizationOrBuilder();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.StationInformation}
     */
    public  static final class StationInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.StationInformation)
        StationInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use StationInformation.newBuilder() to construct.
      private StationInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StationInformation() {
        id_ = "";
        uuid_ = "";
        make_ = "";
        model_ = "";
        os_ = 0;
        osVersion_ = "";
        appVersion_ = "";
        networkType_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StationInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                id_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                uuid_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                make_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                model_ = s;
                break;
              }
              case 40: {
                int rawValue = input.readEnum();

                os_ = rawValue;
                break;
              }
              case 50: {
                java.lang.String s = input.readStringRequireUtf8();

                osVersion_ = s;
                break;
              }
              case 58: {
                java.lang.String s = input.readStringRequireUtf8();

                appVersion_ = s;
                break;
              }
              case 66: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder subBuilder = null;
                if (appSettings_ != null) {
                  subBuilder = appSettings_.toBuilder();
                }
                appSettings_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(appSettings_);
                  appSettings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 72: {
                int rawValue = input.readEnum();

                networkType_ = rawValue;
                break;
              }
              case 82: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (stationInformationTimestamps_ != null) {
                  subBuilder = stationInformationTimestamps_.toBuilder();
                }
                stationInformationTimestamps_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(stationInformationTimestamps_);
                  stationInformationTimestamps_ = subBuilder.buildPartial();
                }

                break;
              }
              case 90: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (networkStrength_ != null) {
                  subBuilder = networkStrength_.toBuilder();
                }
                networkStrength_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(networkStrength_);
                  networkStrength_ = subBuilder.buildPartial();
                }

                break;
              }
              case 98: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (temperature_ != null) {
                  subBuilder = temperature_.toBuilder();
                }
                temperature_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(temperature_);
                  temperature_ = subBuilder.buildPartial();
                }

                break;
              }
              case 106: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (battery_ != null) {
                  subBuilder = battery_.toBuilder();
                }
                battery_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(battery_);
                  battery_ = subBuilder.buildPartial();
                }

                break;
              }
              case 114: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (availableRam_ != null) {
                  subBuilder = availableRam_.toBuilder();
                }
                availableRam_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(availableRam_);
                  availableRam_ = subBuilder.buildPartial();
                }

                break;
              }
              case 122: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (availableDisk_ != null) {
                  subBuilder = availableDisk_.toBuilder();
                }
                availableDisk_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(availableDisk_);
                  availableDisk_ = subBuilder.buildPartial();
                }

                break;
              }
              case 130: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                if (cpuUtilization_ != null) {
                  subBuilder = cpuUtilization_.toBuilder();
                }
                cpuUtilization_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cpuUtilization_);
                  cpuUtilization_ = subBuilder.buildPartial();
                }

                break;
              }
              case 138: {
                if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00010000;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 17:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder.class);
      }

      /**
       * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType}
       */
      public enum NetworkType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>WIFI = 0;</code>
         */
        WIFI(0),
        /**
         * <code>CELLULAR = 1;</code>
         */
        CELLULAR(1),
        /**
         * <code>NONE = 2;</code>
         */
        NONE(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>WIFI = 0;</code>
         */
        public static final int WIFI_VALUE = 0;
        /**
         * <code>CELLULAR = 1;</code>
         */
        public static final int CELLULAR_VALUE = 1;
        /**
         * <code>NONE = 2;</code>
         */
        public static final int NONE_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static NetworkType valueOf(int value) {
          return forNumber(value);
        }

        public static NetworkType forNumber(int value) {
          switch (value) {
            case 0: return WIFI;
            case 1: return CELLULAR;
            case 2: return NONE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<NetworkType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            NetworkType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<NetworkType>() {
                public NetworkType findValueByNumber(int number) {
                  return NetworkType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDescriptor().getEnumTypes().get(0);
        }

        private static final NetworkType[] VALUES = values();

        public static NetworkType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private NetworkType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType)
      }

      /**
       * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.StationInformation.OsType}
       */
      public enum OsType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>ANDROID = 0;</code>
         */
        ANDROID(0),
        /**
         * <code>IOS = 1;</code>
         */
        IOS(1),
        /**
         * <code>LINUX = 2;</code>
         */
        LINUX(2),
        /**
         * <code>WINDOWS = 3;</code>
         */
        WINDOWS(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>ANDROID = 0;</code>
         */
        public static final int ANDROID_VALUE = 0;
        /**
         * <code>IOS = 1;</code>
         */
        public static final int IOS_VALUE = 1;
        /**
         * <code>LINUX = 2;</code>
         */
        public static final int LINUX_VALUE = 2;
        /**
         * <code>WINDOWS = 3;</code>
         */
        public static final int WINDOWS_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static OsType valueOf(int value) {
          return forNumber(value);
        }

        public static OsType forNumber(int value) {
          switch (value) {
            case 0: return ANDROID;
            case 1: return IOS;
            case 2: return LINUX;
            case 3: return WINDOWS;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<OsType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            OsType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<OsType>() {
                public OsType findValueByNumber(int number) {
                  return OsType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDescriptor().getEnumTypes().get(1);
        }

        private static final OsType[] VALUES = values();

        public static OsType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private OsType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.StationInformation.OsType)
      }

      public interface AppSettingsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
         */
        int getAudioSamplingRateHzValue();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate getAudioSamplingRateHz();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        int getAudioSourceTuningValue();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning getAudioSourceTuning();

        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor> getAdditionalInputSensorsList();
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        int getAdditionalInputSensorsCount();
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor getAdditionalInputSensors(int index);
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        java.util.List<java.lang.Integer>
        getAdditionalInputSensorsValueList();
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        int getAdditionalInputSensorsValue(int index);

        /**
         * <code>bool automatically_record = 4;</code>
         */
        boolean getAutomaticallyRecord();

        /**
         * <code>bool launch_at_power_up = 5;</code>
         */
        boolean getLaunchAtPowerUp();

        /**
         * <code>string redvox_id = 6;</code>
         */
        java.lang.String getRedvoxId();
        /**
         * <code>string redvox_id = 6;</code>
         */
        com.google.protobuf.ByteString
            getRedvoxIdBytes();

        /**
         * <code>bool push_to_server = 7;</code>
         */
        boolean getPushToServer();

        /**
         * <code>bool publish_data_as_private = 8;</code>
         */
        boolean getPublishDataAsPrivate();

        /**
         * <code>bool scramble_voice_data = 9;</code>
         */
        boolean getScrambleVoiceData();

        /**
         * <code>bool provide_backfill = 10;</code>
         */
        boolean getProvideBackfill();

        /**
         * <code>bool use_custom_time_sync_server = 11;</code>
         */
        boolean getUseCustomTimeSyncServer();

        /**
         * <code>string time_sync_server_url = 12;</code>
         */
        java.lang.String getTimeSyncServerUrl();
        /**
         * <code>string time_sync_server_url = 12;</code>
         */
        com.google.protobuf.ByteString
            getTimeSyncServerUrlBytes();

        /**
         * <code>bool use_custom_data_server = 13;</code>
         */
        boolean getUseCustomDataServer();

        /**
         * <code>string data_server_url = 14;</code>
         */
        java.lang.String getDataServerUrl();
        /**
         * <code>string data_server_url = 14;</code>
         */
        com.google.protobuf.ByteString
            getDataServerUrlBytes();

        /**
         * <code>bool auto_delete_data_files = 15;</code>
         */
        boolean getAutoDeleteDataFiles();

        /**
         * <code>double storage_space_allowance = 16;</code>
         */
        double getStorageSpaceAllowance();

        /**
         * <code>bool use_sd_card_for_data_storage = 17;</code>
         */
        boolean getUseSdCardForDataStorage();

        /**
         * <code>bool use_location_services = 18;</code>
         */
        boolean getUseLocationServices();

        /**
         * <code>double use_latitude = 19;</code>
         */
        double getUseLatitude();

        /**
         * <code>double use_longitude = 20;</code>
         */
        double getUseLongitude();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings}
       */
      public  static final class AppSettings extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings)
          AppSettingsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AppSettings.newBuilder() to construct.
        private AppSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AppSettings() {
          audioSamplingRateHz_ = 0;
          audioSourceTuning_ = 0;
          additionalInputSensors_ = java.util.Collections.emptyList();
          automaticallyRecord_ = false;
          launchAtPowerUp_ = false;
          redvoxId_ = "";
          pushToServer_ = false;
          publishDataAsPrivate_ = false;
          scrambleVoiceData_ = false;
          provideBackfill_ = false;
          useCustomTimeSyncServer_ = false;
          timeSyncServerUrl_ = "";
          useCustomDataServer_ = false;
          dataServerUrl_ = "";
          autoDeleteDataFiles_ = false;
          storageSpaceAllowance_ = 0D;
          useSdCardForDataStorage_ = false;
          useLocationServices_ = false;
          useLatitude_ = 0D;
          useLongitude_ = 0D;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AppSettings(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();

                  audioSamplingRateHz_ = rawValue;
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  audioSourceTuning_ = rawValue;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    additionalInputSensors_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  additionalInputSensors_.add(rawValue);
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int rawValue = input.readEnum();
                    if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                      additionalInputSensors_ = new java.util.ArrayList<java.lang.Integer>();
                      mutable_bitField0_ |= 0x00000004;
                    }
                    additionalInputSensors_.add(rawValue);
                  }
                  input.popLimit(oldLimit);
                  break;
                }
                case 32: {

                  automaticallyRecord_ = input.readBool();
                  break;
                }
                case 40: {

                  launchAtPowerUp_ = input.readBool();
                  break;
                }
                case 50: {
                  java.lang.String s = input.readStringRequireUtf8();

                  redvoxId_ = s;
                  break;
                }
                case 56: {

                  pushToServer_ = input.readBool();
                  break;
                }
                case 64: {

                  publishDataAsPrivate_ = input.readBool();
                  break;
                }
                case 72: {

                  scrambleVoiceData_ = input.readBool();
                  break;
                }
                case 80: {

                  provideBackfill_ = input.readBool();
                  break;
                }
                case 88: {

                  useCustomTimeSyncServer_ = input.readBool();
                  break;
                }
                case 98: {
                  java.lang.String s = input.readStringRequireUtf8();

                  timeSyncServerUrl_ = s;
                  break;
                }
                case 104: {

                  useCustomDataServer_ = input.readBool();
                  break;
                }
                case 114: {
                  java.lang.String s = input.readStringRequireUtf8();

                  dataServerUrl_ = s;
                  break;
                }
                case 120: {

                  autoDeleteDataFiles_ = input.readBool();
                  break;
                }
                case 129: {

                  storageSpaceAllowance_ = input.readDouble();
                  break;
                }
                case 136: {

                  useSdCardForDataStorage_ = input.readBool();
                  break;
                }
                case 144: {

                  useLocationServices_ = input.readBool();
                  break;
                }
                case 153: {

                  useLatitude_ = input.readDouble();
                  break;
                }
                case 161: {

                  useLongitude_ = input.readDouble();
                  break;
                }
                case 170: {
                  if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00100000;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              additionalInputSensors_ = java.util.Collections.unmodifiableList(additionalInputSensors_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 21:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder.class);
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate}
         */
        public enum AudioSamplingRate
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>HZ_80 = 0;</code>
           */
          HZ_80(0),
          /**
           * <code>HZ_800 = 1;</code>
           */
          HZ_800(1),
          /**
           * <code>HZ_8000 = 2;</code>
           */
          HZ_8000(2),
          /**
           * <code>HZ_16000 = 3;</code>
           */
          HZ_16000(3),
          /**
           * <code>HZ_48000 = 4;</code>
           */
          HZ_48000(4),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>HZ_80 = 0;</code>
           */
          public static final int HZ_80_VALUE = 0;
          /**
           * <code>HZ_800 = 1;</code>
           */
          public static final int HZ_800_VALUE = 1;
          /**
           * <code>HZ_8000 = 2;</code>
           */
          public static final int HZ_8000_VALUE = 2;
          /**
           * <code>HZ_16000 = 3;</code>
           */
          public static final int HZ_16000_VALUE = 3;
          /**
           * <code>HZ_48000 = 4;</code>
           */
          public static final int HZ_48000_VALUE = 4;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static AudioSamplingRate valueOf(int value) {
            return forNumber(value);
          }

          public static AudioSamplingRate forNumber(int value) {
            switch (value) {
              case 0: return HZ_80;
              case 1: return HZ_800;
              case 2: return HZ_8000;
              case 3: return HZ_16000;
              case 4: return HZ_48000;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<AudioSamplingRate>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              AudioSamplingRate> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AudioSamplingRate>() {
                  public AudioSamplingRate findValueByNumber(int number) {
                    return AudioSamplingRate.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDescriptor().getEnumTypes().get(0);
          }

          private static final AudioSamplingRate[] VALUES = values();

          public static AudioSamplingRate valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private AudioSamplingRate(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate)
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning}
         */
        public enum AudioSourceTuning
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>INFRASOUND = 0;</code>
           */
          INFRASOUND(0),
          /**
           * <code>LOW_AUDIO = 1;</code>
           */
          LOW_AUDIO(1),
          /**
           * <code>AUDIO = 2;</code>
           */
          AUDIO(2),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>INFRASOUND = 0;</code>
           */
          public static final int INFRASOUND_VALUE = 0;
          /**
           * <code>LOW_AUDIO = 1;</code>
           */
          public static final int LOW_AUDIO_VALUE = 1;
          /**
           * <code>AUDIO = 2;</code>
           */
          public static final int AUDIO_VALUE = 2;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static AudioSourceTuning valueOf(int value) {
            return forNumber(value);
          }

          public static AudioSourceTuning forNumber(int value) {
            switch (value) {
              case 0: return INFRASOUND;
              case 1: return LOW_AUDIO;
              case 2: return AUDIO;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<AudioSourceTuning>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              AudioSourceTuning> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AudioSourceTuning>() {
                  public AudioSourceTuning findValueByNumber(int number) {
                    return AudioSourceTuning.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDescriptor().getEnumTypes().get(1);
          }

          private static final AudioSourceTuning[] VALUES = values();

          public static AudioSourceTuning valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private AudioSourceTuning(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning)
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor}
         */
        public enum InputSensor
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>BAROMETER = 0;</code>
           */
          BAROMETER(0),
          /**
           * <code>ACCELEROMETER = 1;</code>
           */
          ACCELEROMETER(1),
          /**
           * <code>ACCELEROMETER_FAST = 2;</code>
           */
          ACCELEROMETER_FAST(2),
          /**
           * <code>MAGNETOMETER = 3;</code>
           */
          MAGNETOMETER(3),
          /**
           * <code>MAGNETOMETER_FAST = 4;</code>
           */
          MAGNETOMETER_FAST(4),
          /**
           * <code>GYROSCOPE = 5;</code>
           */
          GYROSCOPE(5),
          /**
           * <code>GYROSCOPE_FAST = 6;</code>
           */
          GYROSCOPE_FAST(6),
          /**
           * <code>LUMINOSITY = 7;</code>
           */
          LUMINOSITY(7),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>BAROMETER = 0;</code>
           */
          public static final int BAROMETER_VALUE = 0;
          /**
           * <code>ACCELEROMETER = 1;</code>
           */
          public static final int ACCELEROMETER_VALUE = 1;
          /**
           * <code>ACCELEROMETER_FAST = 2;</code>
           */
          public static final int ACCELEROMETER_FAST_VALUE = 2;
          /**
           * <code>MAGNETOMETER = 3;</code>
           */
          public static final int MAGNETOMETER_VALUE = 3;
          /**
           * <code>MAGNETOMETER_FAST = 4;</code>
           */
          public static final int MAGNETOMETER_FAST_VALUE = 4;
          /**
           * <code>GYROSCOPE = 5;</code>
           */
          public static final int GYROSCOPE_VALUE = 5;
          /**
           * <code>GYROSCOPE_FAST = 6;</code>
           */
          public static final int GYROSCOPE_FAST_VALUE = 6;
          /**
           * <code>LUMINOSITY = 7;</code>
           */
          public static final int LUMINOSITY_VALUE = 7;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static InputSensor valueOf(int value) {
            return forNumber(value);
          }

          public static InputSensor forNumber(int value) {
            switch (value) {
              case 0: return BAROMETER;
              case 1: return ACCELEROMETER;
              case 2: return ACCELEROMETER_FAST;
              case 3: return MAGNETOMETER;
              case 4: return MAGNETOMETER_FAST;
              case 5: return GYROSCOPE;
              case 6: return GYROSCOPE_FAST;
              case 7: return LUMINOSITY;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<InputSensor>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              InputSensor> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<InputSensor>() {
                  public InputSensor findValueByNumber(int number) {
                    return InputSensor.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDescriptor().getEnumTypes().get(2);
          }

          private static final InputSensor[] VALUES = values();

          public static InputSensor valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private InputSensor(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor)
        }

        private int bitField0_;
        public static final int AUDIO_SAMPLING_RATE_HZ_FIELD_NUMBER = 1;
        private int audioSamplingRateHz_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
         */
        public int getAudioSamplingRateHzValue() {
          return audioSamplingRateHz_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate getAudioSamplingRateHz() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate.valueOf(audioSamplingRateHz_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate.UNRECOGNIZED : result;
        }

        public static final int AUDIO_SOURCE_TUNING_FIELD_NUMBER = 2;
        private int audioSourceTuning_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        public int getAudioSourceTuningValue() {
          return audioSourceTuning_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning getAudioSourceTuning() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning.valueOf(audioSourceTuning_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning.UNRECOGNIZED : result;
        }

        public static final int ADDITIONAL_INPUT_SENSORS_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Integer> additionalInputSensors_;
        private static final com.google.protobuf.Internal.ListAdapter.Converter<
            java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor> additionalInputSensors_converter_ =
                new com.google.protobuf.Internal.ListAdapter.Converter<
                    java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor>() {
                  public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor convert(java.lang.Integer from) {
                    @SuppressWarnings("deprecation")
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor.valueOf(from);
                    return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor.UNRECOGNIZED : result;
                  }
                };
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor> getAdditionalInputSensorsList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor>(additionalInputSensors_, additionalInputSensors_converter_);
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public int getAdditionalInputSensorsCount() {
          return additionalInputSensors_.size();
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor getAdditionalInputSensors(int index) {
          return additionalInputSensors_converter_.convert(additionalInputSensors_.get(index));
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getAdditionalInputSensorsValueList() {
          return additionalInputSensors_;
        }
        /**
         * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
         */
        public int getAdditionalInputSensorsValue(int index) {
          return additionalInputSensors_.get(index);
        }
        private int additionalInputSensorsMemoizedSerializedSize;

        public static final int AUTOMATICALLY_RECORD_FIELD_NUMBER = 4;
        private boolean automaticallyRecord_;
        /**
         * <code>bool automatically_record = 4;</code>
         */
        public boolean getAutomaticallyRecord() {
          return automaticallyRecord_;
        }

        public static final int LAUNCH_AT_POWER_UP_FIELD_NUMBER = 5;
        private boolean launchAtPowerUp_;
        /**
         * <code>bool launch_at_power_up = 5;</code>
         */
        public boolean getLaunchAtPowerUp() {
          return launchAtPowerUp_;
        }

        public static final int REDVOX_ID_FIELD_NUMBER = 6;
        private volatile java.lang.Object redvoxId_;
        /**
         * <code>string redvox_id = 6;</code>
         */
        public java.lang.String getRedvoxId() {
          java.lang.Object ref = redvoxId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            redvoxId_ = s;
            return s;
          }
        }
        /**
         * <code>string redvox_id = 6;</code>
         */
        public com.google.protobuf.ByteString
            getRedvoxIdBytes() {
          java.lang.Object ref = redvoxId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            redvoxId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PUSH_TO_SERVER_FIELD_NUMBER = 7;
        private boolean pushToServer_;
        /**
         * <code>bool push_to_server = 7;</code>
         */
        public boolean getPushToServer() {
          return pushToServer_;
        }

        public static final int PUBLISH_DATA_AS_PRIVATE_FIELD_NUMBER = 8;
        private boolean publishDataAsPrivate_;
        /**
         * <code>bool publish_data_as_private = 8;</code>
         */
        public boolean getPublishDataAsPrivate() {
          return publishDataAsPrivate_;
        }

        public static final int SCRAMBLE_VOICE_DATA_FIELD_NUMBER = 9;
        private boolean scrambleVoiceData_;
        /**
         * <code>bool scramble_voice_data = 9;</code>
         */
        public boolean getScrambleVoiceData() {
          return scrambleVoiceData_;
        }

        public static final int PROVIDE_BACKFILL_FIELD_NUMBER = 10;
        private boolean provideBackfill_;
        /**
         * <code>bool provide_backfill = 10;</code>
         */
        public boolean getProvideBackfill() {
          return provideBackfill_;
        }

        public static final int USE_CUSTOM_TIME_SYNC_SERVER_FIELD_NUMBER = 11;
        private boolean useCustomTimeSyncServer_;
        /**
         * <code>bool use_custom_time_sync_server = 11;</code>
         */
        public boolean getUseCustomTimeSyncServer() {
          return useCustomTimeSyncServer_;
        }

        public static final int TIME_SYNC_SERVER_URL_FIELD_NUMBER = 12;
        private volatile java.lang.Object timeSyncServerUrl_;
        /**
         * <code>string time_sync_server_url = 12;</code>
         */
        public java.lang.String getTimeSyncServerUrl() {
          java.lang.Object ref = timeSyncServerUrl_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            timeSyncServerUrl_ = s;
            return s;
          }
        }
        /**
         * <code>string time_sync_server_url = 12;</code>
         */
        public com.google.protobuf.ByteString
            getTimeSyncServerUrlBytes() {
          java.lang.Object ref = timeSyncServerUrl_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            timeSyncServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int USE_CUSTOM_DATA_SERVER_FIELD_NUMBER = 13;
        private boolean useCustomDataServer_;
        /**
         * <code>bool use_custom_data_server = 13;</code>
         */
        public boolean getUseCustomDataServer() {
          return useCustomDataServer_;
        }

        public static final int DATA_SERVER_URL_FIELD_NUMBER = 14;
        private volatile java.lang.Object dataServerUrl_;
        /**
         * <code>string data_server_url = 14;</code>
         */
        public java.lang.String getDataServerUrl() {
          java.lang.Object ref = dataServerUrl_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            dataServerUrl_ = s;
            return s;
          }
        }
        /**
         * <code>string data_server_url = 14;</code>
         */
        public com.google.protobuf.ByteString
            getDataServerUrlBytes() {
          java.lang.Object ref = dataServerUrl_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int AUTO_DELETE_DATA_FILES_FIELD_NUMBER = 15;
        private boolean autoDeleteDataFiles_;
        /**
         * <code>bool auto_delete_data_files = 15;</code>
         */
        public boolean getAutoDeleteDataFiles() {
          return autoDeleteDataFiles_;
        }

        public static final int STORAGE_SPACE_ALLOWANCE_FIELD_NUMBER = 16;
        private double storageSpaceAllowance_;
        /**
         * <code>double storage_space_allowance = 16;</code>
         */
        public double getStorageSpaceAllowance() {
          return storageSpaceAllowance_;
        }

        public static final int USE_SD_CARD_FOR_DATA_STORAGE_FIELD_NUMBER = 17;
        private boolean useSdCardForDataStorage_;
        /**
         * <code>bool use_sd_card_for_data_storage = 17;</code>
         */
        public boolean getUseSdCardForDataStorage() {
          return useSdCardForDataStorage_;
        }

        public static final int USE_LOCATION_SERVICES_FIELD_NUMBER = 18;
        private boolean useLocationServices_;
        /**
         * <code>bool use_location_services = 18;</code>
         */
        public boolean getUseLocationServices() {
          return useLocationServices_;
        }

        public static final int USE_LATITUDE_FIELD_NUMBER = 19;
        private double useLatitude_;
        /**
         * <code>double use_latitude = 19;</code>
         */
        public double getUseLatitude() {
          return useLatitude_;
        }

        public static final int USE_LONGITUDE_FIELD_NUMBER = 20;
        private double useLongitude_;
        /**
         * <code>double use_longitude = 20;</code>
         */
        public double getUseLongitude() {
          return useLongitude_;
        }

        public static final int METADATA_FIELD_NUMBER = 21;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 21;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (audioSamplingRateHz_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate.HZ_80.getNumber()) {
            output.writeEnum(1, audioSamplingRateHz_);
          }
          if (audioSourceTuning_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning.INFRASOUND.getNumber()) {
            output.writeEnum(2, audioSourceTuning_);
          }
          if (getAdditionalInputSensorsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(additionalInputSensorsMemoizedSerializedSize);
          }
          for (int i = 0; i < additionalInputSensors_.size(); i++) {
            output.writeEnumNoTag(additionalInputSensors_.get(i));
          }
          if (automaticallyRecord_ != false) {
            output.writeBool(4, automaticallyRecord_);
          }
          if (launchAtPowerUp_ != false) {
            output.writeBool(5, launchAtPowerUp_);
          }
          if (!getRedvoxIdBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, redvoxId_);
          }
          if (pushToServer_ != false) {
            output.writeBool(7, pushToServer_);
          }
          if (publishDataAsPrivate_ != false) {
            output.writeBool(8, publishDataAsPrivate_);
          }
          if (scrambleVoiceData_ != false) {
            output.writeBool(9, scrambleVoiceData_);
          }
          if (provideBackfill_ != false) {
            output.writeBool(10, provideBackfill_);
          }
          if (useCustomTimeSyncServer_ != false) {
            output.writeBool(11, useCustomTimeSyncServer_);
          }
          if (!getTimeSyncServerUrlBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 12, timeSyncServerUrl_);
          }
          if (useCustomDataServer_ != false) {
            output.writeBool(13, useCustomDataServer_);
          }
          if (!getDataServerUrlBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 14, dataServerUrl_);
          }
          if (autoDeleteDataFiles_ != false) {
            output.writeBool(15, autoDeleteDataFiles_);
          }
          if (storageSpaceAllowance_ != 0D) {
            output.writeDouble(16, storageSpaceAllowance_);
          }
          if (useSdCardForDataStorage_ != false) {
            output.writeBool(17, useSdCardForDataStorage_);
          }
          if (useLocationServices_ != false) {
            output.writeBool(18, useLocationServices_);
          }
          if (useLatitude_ != 0D) {
            output.writeDouble(19, useLatitude_);
          }
          if (useLongitude_ != 0D) {
            output.writeDouble(20, useLongitude_);
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              21);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (audioSamplingRateHz_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate.HZ_80.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, audioSamplingRateHz_);
          }
          if (audioSourceTuning_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning.INFRASOUND.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(2, audioSourceTuning_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < additionalInputSensors_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeEnumSizeNoTag(additionalInputSensors_.get(i));
            }
            size += dataSize;
            if (!getAdditionalInputSensorsList().isEmpty()) {  size += 1;
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(dataSize);
            }additionalInputSensorsMemoizedSerializedSize = dataSize;
          }
          if (automaticallyRecord_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(4, automaticallyRecord_);
          }
          if (launchAtPowerUp_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(5, launchAtPowerUp_);
          }
          if (!getRedvoxIdBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, redvoxId_);
          }
          if (pushToServer_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(7, pushToServer_);
          }
          if (publishDataAsPrivate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(8, publishDataAsPrivate_);
          }
          if (scrambleVoiceData_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, scrambleVoiceData_);
          }
          if (provideBackfill_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(10, provideBackfill_);
          }
          if (useCustomTimeSyncServer_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(11, useCustomTimeSyncServer_);
          }
          if (!getTimeSyncServerUrlBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, timeSyncServerUrl_);
          }
          if (useCustomDataServer_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(13, useCustomDataServer_);
          }
          if (!getDataServerUrlBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, dataServerUrl_);
          }
          if (autoDeleteDataFiles_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(15, autoDeleteDataFiles_);
          }
          if (storageSpaceAllowance_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(16, storageSpaceAllowance_);
          }
          if (useSdCardForDataStorage_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(17, useSdCardForDataStorage_);
          }
          if (useLocationServices_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(18, useLocationServices_);
          }
          if (useLatitude_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(19, useLatitude_);
          }
          if (useLongitude_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(20, useLongitude_);
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(21, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings) obj;

          boolean result = true;
          result = result && audioSamplingRateHz_ == other.audioSamplingRateHz_;
          result = result && audioSourceTuning_ == other.audioSourceTuning_;
          result = result && additionalInputSensors_.equals(other.additionalInputSensors_);
          result = result && (getAutomaticallyRecord()
              == other.getAutomaticallyRecord());
          result = result && (getLaunchAtPowerUp()
              == other.getLaunchAtPowerUp());
          result = result && getRedvoxId()
              .equals(other.getRedvoxId());
          result = result && (getPushToServer()
              == other.getPushToServer());
          result = result && (getPublishDataAsPrivate()
              == other.getPublishDataAsPrivate());
          result = result && (getScrambleVoiceData()
              == other.getScrambleVoiceData());
          result = result && (getProvideBackfill()
              == other.getProvideBackfill());
          result = result && (getUseCustomTimeSyncServer()
              == other.getUseCustomTimeSyncServer());
          result = result && getTimeSyncServerUrl()
              .equals(other.getTimeSyncServerUrl());
          result = result && (getUseCustomDataServer()
              == other.getUseCustomDataServer());
          result = result && getDataServerUrl()
              .equals(other.getDataServerUrl());
          result = result && (getAutoDeleteDataFiles()
              == other.getAutoDeleteDataFiles());
          result = result && (
              java.lang.Double.doubleToLongBits(getStorageSpaceAllowance())
              == java.lang.Double.doubleToLongBits(
                  other.getStorageSpaceAllowance()));
          result = result && (getUseSdCardForDataStorage()
              == other.getUseSdCardForDataStorage());
          result = result && (getUseLocationServices()
              == other.getUseLocationServices());
          result = result && (
              java.lang.Double.doubleToLongBits(getUseLatitude())
              == java.lang.Double.doubleToLongBits(
                  other.getUseLatitude()));
          result = result && (
              java.lang.Double.doubleToLongBits(getUseLongitude())
              == java.lang.Double.doubleToLongBits(
                  other.getUseLongitude()));
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + AUDIO_SAMPLING_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + audioSamplingRateHz_;
          hash = (37 * hash) + AUDIO_SOURCE_TUNING_FIELD_NUMBER;
          hash = (53 * hash) + audioSourceTuning_;
          if (getAdditionalInputSensorsCount() > 0) {
            hash = (37 * hash) + ADDITIONAL_INPUT_SENSORS_FIELD_NUMBER;
            hash = (53 * hash) + additionalInputSensors_.hashCode();
          }
          hash = (37 * hash) + AUTOMATICALLY_RECORD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getAutomaticallyRecord());
          hash = (37 * hash) + LAUNCH_AT_POWER_UP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLaunchAtPowerUp());
          hash = (37 * hash) + REDVOX_ID_FIELD_NUMBER;
          hash = (53 * hash) + getRedvoxId().hashCode();
          hash = (37 * hash) + PUSH_TO_SERVER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPushToServer());
          hash = (37 * hash) + PUBLISH_DATA_AS_PRIVATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPublishDataAsPrivate());
          hash = (37 * hash) + SCRAMBLE_VOICE_DATA_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getScrambleVoiceData());
          hash = (37 * hash) + PROVIDE_BACKFILL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getProvideBackfill());
          hash = (37 * hash) + USE_CUSTOM_TIME_SYNC_SERVER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseCustomTimeSyncServer());
          hash = (37 * hash) + TIME_SYNC_SERVER_URL_FIELD_NUMBER;
          hash = (53 * hash) + getTimeSyncServerUrl().hashCode();
          hash = (37 * hash) + USE_CUSTOM_DATA_SERVER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseCustomDataServer());
          hash = (37 * hash) + DATA_SERVER_URL_FIELD_NUMBER;
          hash = (53 * hash) + getDataServerUrl().hashCode();
          hash = (37 * hash) + AUTO_DELETE_DATA_FILES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getAutoDeleteDataFiles());
          hash = (37 * hash) + STORAGE_SPACE_ALLOWANCE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getStorageSpaceAllowance()));
          hash = (37 * hash) + USE_SD_CARD_FOR_DATA_STORAGE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseSdCardForDataStorage());
          hash = (37 * hash) + USE_LOCATION_SERVICES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUseLocationServices());
          hash = (37 * hash) + USE_LATITUDE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getUseLatitude()));
          hash = (37 * hash) + USE_LONGITUDE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getUseLongitude()));
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 21:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 21:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            audioSamplingRateHz_ = 0;

            audioSourceTuning_ = 0;

            additionalInputSensors_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            automaticallyRecord_ = false;

            launchAtPowerUp_ = false;

            redvoxId_ = "";

            pushToServer_ = false;

            publishDataAsPrivate_ = false;

            scrambleVoiceData_ = false;

            provideBackfill_ = false;

            useCustomTimeSyncServer_ = false;

            timeSyncServerUrl_ = "";

            useCustomDataServer_ = false;

            dataServerUrl_ = "";

            autoDeleteDataFiles_ = false;

            storageSpaceAllowance_ = 0D;

            useSdCardForDataStorage_ = false;

            useLocationServices_ = false;

            useLatitude_ = 0D;

            useLongitude_ = 0D;

            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.audioSamplingRateHz_ = audioSamplingRateHz_;
            result.audioSourceTuning_ = audioSourceTuning_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              additionalInputSensors_ = java.util.Collections.unmodifiableList(additionalInputSensors_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.additionalInputSensors_ = additionalInputSensors_;
            result.automaticallyRecord_ = automaticallyRecord_;
            result.launchAtPowerUp_ = launchAtPowerUp_;
            result.redvoxId_ = redvoxId_;
            result.pushToServer_ = pushToServer_;
            result.publishDataAsPrivate_ = publishDataAsPrivate_;
            result.scrambleVoiceData_ = scrambleVoiceData_;
            result.provideBackfill_ = provideBackfill_;
            result.useCustomTimeSyncServer_ = useCustomTimeSyncServer_;
            result.timeSyncServerUrl_ = timeSyncServerUrl_;
            result.useCustomDataServer_ = useCustomDataServer_;
            result.dataServerUrl_ = dataServerUrl_;
            result.autoDeleteDataFiles_ = autoDeleteDataFiles_;
            result.storageSpaceAllowance_ = storageSpaceAllowance_;
            result.useSdCardForDataStorage_ = useSdCardForDataStorage_;
            result.useLocationServices_ = useLocationServices_;
            result.useLatitude_ = useLatitude_;
            result.useLongitude_ = useLongitude_;
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDefaultInstance()) return this;
            if (other.audioSamplingRateHz_ != 0) {
              setAudioSamplingRateHzValue(other.getAudioSamplingRateHzValue());
            }
            if (other.audioSourceTuning_ != 0) {
              setAudioSourceTuningValue(other.getAudioSourceTuningValue());
            }
            if (!other.additionalInputSensors_.isEmpty()) {
              if (additionalInputSensors_.isEmpty()) {
                additionalInputSensors_ = other.additionalInputSensors_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureAdditionalInputSensorsIsMutable();
                additionalInputSensors_.addAll(other.additionalInputSensors_);
              }
              onChanged();
            }
            if (other.getAutomaticallyRecord() != false) {
              setAutomaticallyRecord(other.getAutomaticallyRecord());
            }
            if (other.getLaunchAtPowerUp() != false) {
              setLaunchAtPowerUp(other.getLaunchAtPowerUp());
            }
            if (!other.getRedvoxId().isEmpty()) {
              redvoxId_ = other.redvoxId_;
              onChanged();
            }
            if (other.getPushToServer() != false) {
              setPushToServer(other.getPushToServer());
            }
            if (other.getPublishDataAsPrivate() != false) {
              setPublishDataAsPrivate(other.getPublishDataAsPrivate());
            }
            if (other.getScrambleVoiceData() != false) {
              setScrambleVoiceData(other.getScrambleVoiceData());
            }
            if (other.getProvideBackfill() != false) {
              setProvideBackfill(other.getProvideBackfill());
            }
            if (other.getUseCustomTimeSyncServer() != false) {
              setUseCustomTimeSyncServer(other.getUseCustomTimeSyncServer());
            }
            if (!other.getTimeSyncServerUrl().isEmpty()) {
              timeSyncServerUrl_ = other.timeSyncServerUrl_;
              onChanged();
            }
            if (other.getUseCustomDataServer() != false) {
              setUseCustomDataServer(other.getUseCustomDataServer());
            }
            if (!other.getDataServerUrl().isEmpty()) {
              dataServerUrl_ = other.dataServerUrl_;
              onChanged();
            }
            if (other.getAutoDeleteDataFiles() != false) {
              setAutoDeleteDataFiles(other.getAutoDeleteDataFiles());
            }
            if (other.getStorageSpaceAllowance() != 0D) {
              setStorageSpaceAllowance(other.getStorageSpaceAllowance());
            }
            if (other.getUseSdCardForDataStorage() != false) {
              setUseSdCardForDataStorage(other.getUseSdCardForDataStorage());
            }
            if (other.getUseLocationServices() != false) {
              setUseLocationServices(other.getUseLocationServices());
            }
            if (other.getUseLatitude() != 0D) {
              setUseLatitude(other.getUseLatitude());
            }
            if (other.getUseLongitude() != 0D) {
              setUseLongitude(other.getUseLongitude());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int audioSamplingRateHz_ = 0;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
           */
          public int getAudioSamplingRateHzValue() {
            return audioSamplingRateHz_;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
           */
          public Builder setAudioSamplingRateHzValue(int value) {
            audioSamplingRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate getAudioSamplingRateHz() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate.valueOf(audioSamplingRateHz_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate.UNRECOGNIZED : result;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
           */
          public Builder setAudioSamplingRateHz(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            audioSamplingRateHz_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSamplingRate audio_sampling_rate_hz = 1;</code>
           */
          public Builder clearAudioSamplingRateHz() {
            
            audioSamplingRateHz_ = 0;
            onChanged();
            return this;
          }

          private int audioSourceTuning_ = 0;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public int getAudioSourceTuningValue() {
            return audioSourceTuning_;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public Builder setAudioSourceTuningValue(int value) {
            audioSourceTuning_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning getAudioSourceTuning() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning.valueOf(audioSourceTuning_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning.UNRECOGNIZED : result;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public Builder setAudioSourceTuning(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            audioSourceTuning_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.AudioSourceTuning audio_source_tuning = 2;</code>
           */
          public Builder clearAudioSourceTuning() {
            
            audioSourceTuning_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> additionalInputSensors_ =
            java.util.Collections.emptyList();
          private void ensureAdditionalInputSensorsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              additionalInputSensors_ = new java.util.ArrayList<java.lang.Integer>(additionalInputSensors_);
              bitField0_ |= 0x00000004;
            }
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor> getAdditionalInputSensorsList() {
            return new com.google.protobuf.Internal.ListAdapter<
                java.lang.Integer, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor>(additionalInputSensors_, additionalInputSensors_converter_);
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public int getAdditionalInputSensorsCount() {
            return additionalInputSensors_.size();
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor getAdditionalInputSensors(int index) {
            return additionalInputSensors_converter_.convert(additionalInputSensors_.get(index));
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder setAdditionalInputSensors(
              int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.set(index, value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAdditionalInputSensors(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.add(value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAllAdditionalInputSensors(
              java.lang.Iterable<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor> values) {
            ensureAdditionalInputSensorsIsMutable();
            for (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor value : values) {
              additionalInputSensors_.add(value.getNumber());
            }
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder clearAdditionalInputSensors() {
            additionalInputSensors_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public java.util.List<java.lang.Integer>
          getAdditionalInputSensorsValueList() {
            return java.util.Collections.unmodifiableList(additionalInputSensors_);
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public int getAdditionalInputSensorsValue(int index) {
            return additionalInputSensors_.get(index);
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder setAdditionalInputSensorsValue(
              int index, int value) {
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAdditionalInputSensorsValue(int value) {
            ensureAdditionalInputSensorsIsMutable();
            additionalInputSensors_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings.InputSensor additional_input_sensors = 3;</code>
           */
          public Builder addAllAdditionalInputSensorsValue(
              java.lang.Iterable<java.lang.Integer> values) {
            ensureAdditionalInputSensorsIsMutable();
            for (int value : values) {
              additionalInputSensors_.add(value);
            }
            onChanged();
            return this;
          }

          private boolean automaticallyRecord_ ;
          /**
           * <code>bool automatically_record = 4;</code>
           */
          public boolean getAutomaticallyRecord() {
            return automaticallyRecord_;
          }
          /**
           * <code>bool automatically_record = 4;</code>
           */
          public Builder setAutomaticallyRecord(boolean value) {
            
            automaticallyRecord_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool automatically_record = 4;</code>
           */
          public Builder clearAutomaticallyRecord() {
            
            automaticallyRecord_ = false;
            onChanged();
            return this;
          }

          private boolean launchAtPowerUp_ ;
          /**
           * <code>bool launch_at_power_up = 5;</code>
           */
          public boolean getLaunchAtPowerUp() {
            return launchAtPowerUp_;
          }
          /**
           * <code>bool launch_at_power_up = 5;</code>
           */
          public Builder setLaunchAtPowerUp(boolean value) {
            
            launchAtPowerUp_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool launch_at_power_up = 5;</code>
           */
          public Builder clearLaunchAtPowerUp() {
            
            launchAtPowerUp_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object redvoxId_ = "";
          /**
           * <code>string redvox_id = 6;</code>
           */
          public java.lang.String getRedvoxId() {
            java.lang.Object ref = redvoxId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              redvoxId_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public com.google.protobuf.ByteString
              getRedvoxIdBytes() {
            java.lang.Object ref = redvoxId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              redvoxId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public Builder setRedvoxId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            redvoxId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public Builder clearRedvoxId() {
            
            redvoxId_ = getDefaultInstance().getRedvoxId();
            onChanged();
            return this;
          }
          /**
           * <code>string redvox_id = 6;</code>
           */
          public Builder setRedvoxIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            redvoxId_ = value;
            onChanged();
            return this;
          }

          private boolean pushToServer_ ;
          /**
           * <code>bool push_to_server = 7;</code>
           */
          public boolean getPushToServer() {
            return pushToServer_;
          }
          /**
           * <code>bool push_to_server = 7;</code>
           */
          public Builder setPushToServer(boolean value) {
            
            pushToServer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool push_to_server = 7;</code>
           */
          public Builder clearPushToServer() {
            
            pushToServer_ = false;
            onChanged();
            return this;
          }

          private boolean publishDataAsPrivate_ ;
          /**
           * <code>bool publish_data_as_private = 8;</code>
           */
          public boolean getPublishDataAsPrivate() {
            return publishDataAsPrivate_;
          }
          /**
           * <code>bool publish_data_as_private = 8;</code>
           */
          public Builder setPublishDataAsPrivate(boolean value) {
            
            publishDataAsPrivate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool publish_data_as_private = 8;</code>
           */
          public Builder clearPublishDataAsPrivate() {
            
            publishDataAsPrivate_ = false;
            onChanged();
            return this;
          }

          private boolean scrambleVoiceData_ ;
          /**
           * <code>bool scramble_voice_data = 9;</code>
           */
          public boolean getScrambleVoiceData() {
            return scrambleVoiceData_;
          }
          /**
           * <code>bool scramble_voice_data = 9;</code>
           */
          public Builder setScrambleVoiceData(boolean value) {
            
            scrambleVoiceData_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool scramble_voice_data = 9;</code>
           */
          public Builder clearScrambleVoiceData() {
            
            scrambleVoiceData_ = false;
            onChanged();
            return this;
          }

          private boolean provideBackfill_ ;
          /**
           * <code>bool provide_backfill = 10;</code>
           */
          public boolean getProvideBackfill() {
            return provideBackfill_;
          }
          /**
           * <code>bool provide_backfill = 10;</code>
           */
          public Builder setProvideBackfill(boolean value) {
            
            provideBackfill_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool provide_backfill = 10;</code>
           */
          public Builder clearProvideBackfill() {
            
            provideBackfill_ = false;
            onChanged();
            return this;
          }

          private boolean useCustomTimeSyncServer_ ;
          /**
           * <code>bool use_custom_time_sync_server = 11;</code>
           */
          public boolean getUseCustomTimeSyncServer() {
            return useCustomTimeSyncServer_;
          }
          /**
           * <code>bool use_custom_time_sync_server = 11;</code>
           */
          public Builder setUseCustomTimeSyncServer(boolean value) {
            
            useCustomTimeSyncServer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_custom_time_sync_server = 11;</code>
           */
          public Builder clearUseCustomTimeSyncServer() {
            
            useCustomTimeSyncServer_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object timeSyncServerUrl_ = "";
          /**
           * <code>string time_sync_server_url = 12;</code>
           */
          public java.lang.String getTimeSyncServerUrl() {
            java.lang.Object ref = timeSyncServerUrl_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              timeSyncServerUrl_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string time_sync_server_url = 12;</code>
           */
          public com.google.protobuf.ByteString
              getTimeSyncServerUrlBytes() {
            java.lang.Object ref = timeSyncServerUrl_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              timeSyncServerUrl_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string time_sync_server_url = 12;</code>
           */
          public Builder setTimeSyncServerUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            timeSyncServerUrl_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string time_sync_server_url = 12;</code>
           */
          public Builder clearTimeSyncServerUrl() {
            
            timeSyncServerUrl_ = getDefaultInstance().getTimeSyncServerUrl();
            onChanged();
            return this;
          }
          /**
           * <code>string time_sync_server_url = 12;</code>
           */
          public Builder setTimeSyncServerUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            timeSyncServerUrl_ = value;
            onChanged();
            return this;
          }

          private boolean useCustomDataServer_ ;
          /**
           * <code>bool use_custom_data_server = 13;</code>
           */
          public boolean getUseCustomDataServer() {
            return useCustomDataServer_;
          }
          /**
           * <code>bool use_custom_data_server = 13;</code>
           */
          public Builder setUseCustomDataServer(boolean value) {
            
            useCustomDataServer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_custom_data_server = 13;</code>
           */
          public Builder clearUseCustomDataServer() {
            
            useCustomDataServer_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object dataServerUrl_ = "";
          /**
           * <code>string data_server_url = 14;</code>
           */
          public java.lang.String getDataServerUrl() {
            java.lang.Object ref = dataServerUrl_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              dataServerUrl_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public com.google.protobuf.ByteString
              getDataServerUrlBytes() {
            java.lang.Object ref = dataServerUrl_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              dataServerUrl_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public Builder setDataServerUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            dataServerUrl_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public Builder clearDataServerUrl() {
            
            dataServerUrl_ = getDefaultInstance().getDataServerUrl();
            onChanged();
            return this;
          }
          /**
           * <code>string data_server_url = 14;</code>
           */
          public Builder setDataServerUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            dataServerUrl_ = value;
            onChanged();
            return this;
          }

          private boolean autoDeleteDataFiles_ ;
          /**
           * <code>bool auto_delete_data_files = 15;</code>
           */
          public boolean getAutoDeleteDataFiles() {
            return autoDeleteDataFiles_;
          }
          /**
           * <code>bool auto_delete_data_files = 15;</code>
           */
          public Builder setAutoDeleteDataFiles(boolean value) {
            
            autoDeleteDataFiles_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool auto_delete_data_files = 15;</code>
           */
          public Builder clearAutoDeleteDataFiles() {
            
            autoDeleteDataFiles_ = false;
            onChanged();
            return this;
          }

          private double storageSpaceAllowance_ ;
          /**
           * <code>double storage_space_allowance = 16;</code>
           */
          public double getStorageSpaceAllowance() {
            return storageSpaceAllowance_;
          }
          /**
           * <code>double storage_space_allowance = 16;</code>
           */
          public Builder setStorageSpaceAllowance(double value) {
            
            storageSpaceAllowance_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double storage_space_allowance = 16;</code>
           */
          public Builder clearStorageSpaceAllowance() {
            
            storageSpaceAllowance_ = 0D;
            onChanged();
            return this;
          }

          private boolean useSdCardForDataStorage_ ;
          /**
           * <code>bool use_sd_card_for_data_storage = 17;</code>
           */
          public boolean getUseSdCardForDataStorage() {
            return useSdCardForDataStorage_;
          }
          /**
           * <code>bool use_sd_card_for_data_storage = 17;</code>
           */
          public Builder setUseSdCardForDataStorage(boolean value) {
            
            useSdCardForDataStorage_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_sd_card_for_data_storage = 17;</code>
           */
          public Builder clearUseSdCardForDataStorage() {
            
            useSdCardForDataStorage_ = false;
            onChanged();
            return this;
          }

          private boolean useLocationServices_ ;
          /**
           * <code>bool use_location_services = 18;</code>
           */
          public boolean getUseLocationServices() {
            return useLocationServices_;
          }
          /**
           * <code>bool use_location_services = 18;</code>
           */
          public Builder setUseLocationServices(boolean value) {
            
            useLocationServices_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool use_location_services = 18;</code>
           */
          public Builder clearUseLocationServices() {
            
            useLocationServices_ = false;
            onChanged();
            return this;
          }

          private double useLatitude_ ;
          /**
           * <code>double use_latitude = 19;</code>
           */
          public double getUseLatitude() {
            return useLatitude_;
          }
          /**
           * <code>double use_latitude = 19;</code>
           */
          public Builder setUseLatitude(double value) {
            
            useLatitude_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double use_latitude = 19;</code>
           */
          public Builder clearUseLatitude() {
            
            useLatitude_ = 0D;
            onChanged();
            return this;
          }

          private double useLongitude_ ;
          /**
           * <code>double use_longitude = 20;</code>
           */
          public double getUseLongitude() {
            return useLongitude_;
          }
          /**
           * <code>double use_longitude = 20;</code>
           */
          public Builder setUseLongitude(double value) {
            
            useLongitude_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double use_longitude = 20;</code>
           */
          public Builder clearUseLongitude() {
            
            useLongitude_ = 0D;
            onChanged();
            return this;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 21;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AppSettings>
            PARSER = new com.google.protobuf.AbstractParser<AppSettings>() {
          @java.lang.Override
          public AppSettings parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AppSettings(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AppSettings> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AppSettings> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object id_;
      /**
       * <pre>
       * The user selectable station id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The user selectable station id
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int UUID_FIELD_NUMBER = 2;
      private volatile java.lang.Object uuid_;
      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string uuid = 2;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The app provided UUID
       * </pre>
       *
       * <code>string uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MAKE_FIELD_NUMBER = 3;
      private volatile java.lang.Object make_;
      /**
       * <pre>
       * Make of the station
       * </pre>
       *
       * <code>string make = 3;</code>
       */
      public java.lang.String getMake() {
        java.lang.Object ref = make_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          make_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Make of the station
       * </pre>
       *
       * <code>string make = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMakeBytes() {
        java.lang.Object ref = make_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          make_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MODEL_FIELD_NUMBER = 4;
      private volatile java.lang.Object model_;
      /**
       * <pre>
       * Model of the station
       * </pre>
       *
       * <code>string model = 4;</code>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          model_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Model of the station
       * </pre>
       *
       * <code>string model = 4;</code>
       */
      public com.google.protobuf.ByteString
          getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OS_FIELD_NUMBER = 5;
      private int os_;
      /**
       * <pre>
       * OS of the station
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
       */
      public int getOsValue() {
        return os_;
      }
      /**
       * <pre>
       * OS of the station
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType getOs() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType.valueOf(os_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType.UNRECOGNIZED : result;
      }

      public static final int OS_VERSION_FIELD_NUMBER = 6;
      private volatile java.lang.Object osVersion_;
      /**
       * <pre>
       * OS version of the station
       * </pre>
       *
       * <code>string os_version = 6;</code>
       */
      public java.lang.String getOsVersion() {
        java.lang.Object ref = osVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          osVersion_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * OS version of the station
       * </pre>
       *
       * <code>string os_version = 6;</code>
       */
      public com.google.protobuf.ByteString
          getOsVersionBytes() {
        java.lang.Object ref = osVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          osVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int APP_VERSION_FIELD_NUMBER = 7;
      private volatile java.lang.Object appVersion_;
      /**
       * <pre>
       * App version on the station
       * </pre>
       *
       * <code>string app_version = 7;</code>
       */
      public java.lang.String getAppVersion() {
        java.lang.Object ref = appVersion_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          appVersion_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * App version on the station
       * </pre>
       *
       * <code>string app_version = 7;</code>
       */
      public com.google.protobuf.ByteString
          getAppVersionBytes() {
        java.lang.Object ref = appVersion_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int APP_SETTINGS_FIELD_NUMBER = 8;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings appSettings_;
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
       */
      public boolean hasAppSettings() {
        return appSettings_ != null;
      }
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings getAppSettings() {
        return appSettings_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDefaultInstance() : appSettings_;
      }
      /**
       * <pre>
       * A copy of the App's settings
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder getAppSettingsOrBuilder() {
        return getAppSettings();
      }

      public static final int NETWORK_TYPE_FIELD_NUMBER = 9;
      private int networkType_;
      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
       */
      public int getNetworkTypeValue() {
        return networkType_;
      }
      /**
       * <pre>
       * Type of network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType getNetworkType() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType.valueOf(networkType_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType.UNRECOGNIZED : result;
      }

      public static final int STATION_INFORMATION_TIMESTAMPS_FIELD_NUMBER = 10;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload stationInformationTimestamps_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
       */
      public boolean hasStationInformationTimestamps() {
        return stationInformationTimestamps_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getStationInformationTimestamps() {
        return stationInformationTimestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : stationInformationTimestamps_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getStationInformationTimestampsOrBuilder() {
        return getStationInformationTimestamps();
      }

      public static final int NETWORK_STRENGTH_FIELD_NUMBER = 11;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload networkStrength_;
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
       */
      public boolean hasNetworkStrength() {
        return networkStrength_ != null;
      }
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getNetworkStrength() {
        return networkStrength_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : networkStrength_;
      }
      /**
       * <pre>
       * A value representing the strength of the network connection
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getNetworkStrengthOrBuilder() {
        return getNetworkStrength();
      }

      public static final int TEMPERATURE_FIELD_NUMBER = 12;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload temperature_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
       */
      public boolean hasTemperature() {
        return temperature_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTemperature() {
        return temperature_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : temperature_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTemperatureOrBuilder() {
        return getTemperature();
      }

      public static final int BATTERY_FIELD_NUMBER = 13;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload battery_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
       */
      public boolean hasBattery() {
        return battery_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBattery() {
        return battery_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : battery_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBatteryOrBuilder() {
        return getBattery();
      }

      public static final int AVAILABLE_RAM_FIELD_NUMBER = 14;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload availableRam_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
       */
      public boolean hasAvailableRam() {
        return availableRam_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAvailableRam() {
        return availableRam_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : availableRam_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAvailableRamOrBuilder() {
        return getAvailableRam();
      }

      public static final int AVAILABLE_DISK_FIELD_NUMBER = 15;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload availableDisk_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
       */
      public boolean hasAvailableDisk() {
        return availableDisk_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAvailableDisk() {
        return availableDisk_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : availableDisk_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAvailableDiskOrBuilder() {
        return getAvailableDisk();
      }

      public static final int CPU_UTILIZATION_FIELD_NUMBER = 16;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload cpuUtilization_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
       */
      public boolean hasCpuUtilization() {
        return cpuUtilization_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getCpuUtilization() {
        return cpuUtilization_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : cpuUtilization_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getCpuUtilizationOrBuilder() {
        return getCpuUtilization();
      }

      public static final int METADATA_FIELD_NUMBER = 17;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 17;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
        }
        if (!getUuidBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uuid_);
        }
        if (!getMakeBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, make_);
        }
        if (!getModelBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, model_);
        }
        if (os_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType.ANDROID.getNumber()) {
          output.writeEnum(5, os_);
        }
        if (!getOsVersionBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, osVersion_);
        }
        if (!getAppVersionBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, appVersion_);
        }
        if (appSettings_ != null) {
          output.writeMessage(8, getAppSettings());
        }
        if (networkType_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType.WIFI.getNumber()) {
          output.writeEnum(9, networkType_);
        }
        if (stationInformationTimestamps_ != null) {
          output.writeMessage(10, getStationInformationTimestamps());
        }
        if (networkStrength_ != null) {
          output.writeMessage(11, getNetworkStrength());
        }
        if (temperature_ != null) {
          output.writeMessage(12, getTemperature());
        }
        if (battery_ != null) {
          output.writeMessage(13, getBattery());
        }
        if (availableRam_ != null) {
          output.writeMessage(14, getAvailableRam());
        }
        if (availableDisk_ != null) {
          output.writeMessage(15, getAvailableDisk());
        }
        if (cpuUtilization_ != null) {
          output.writeMessage(16, getCpuUtilization());
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            17);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
        }
        if (!getUuidBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uuid_);
        }
        if (!getMakeBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, make_);
        }
        if (!getModelBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, model_);
        }
        if (os_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType.ANDROID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, os_);
        }
        if (!getOsVersionBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, osVersion_);
        }
        if (!getAppVersionBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, appVersion_);
        }
        if (appSettings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, getAppSettings());
        }
        if (networkType_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType.WIFI.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(9, networkType_);
        }
        if (stationInformationTimestamps_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, getStationInformationTimestamps());
        }
        if (networkStrength_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, getNetworkStrength());
        }
        if (temperature_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, getTemperature());
        }
        if (battery_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, getBattery());
        }
        if (availableRam_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, getAvailableRam());
        }
        if (availableDisk_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, getAvailableDisk());
        }
        if (cpuUtilization_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, getCpuUtilization());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(17, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation) obj;

        boolean result = true;
        result = result && getId()
            .equals(other.getId());
        result = result && getUuid()
            .equals(other.getUuid());
        result = result && getMake()
            .equals(other.getMake());
        result = result && getModel()
            .equals(other.getModel());
        result = result && os_ == other.os_;
        result = result && getOsVersion()
            .equals(other.getOsVersion());
        result = result && getAppVersion()
            .equals(other.getAppVersion());
        result = result && (hasAppSettings() == other.hasAppSettings());
        if (hasAppSettings()) {
          result = result && getAppSettings()
              .equals(other.getAppSettings());
        }
        result = result && networkType_ == other.networkType_;
        result = result && (hasStationInformationTimestamps() == other.hasStationInformationTimestamps());
        if (hasStationInformationTimestamps()) {
          result = result && getStationInformationTimestamps()
              .equals(other.getStationInformationTimestamps());
        }
        result = result && (hasNetworkStrength() == other.hasNetworkStrength());
        if (hasNetworkStrength()) {
          result = result && getNetworkStrength()
              .equals(other.getNetworkStrength());
        }
        result = result && (hasTemperature() == other.hasTemperature());
        if (hasTemperature()) {
          result = result && getTemperature()
              .equals(other.getTemperature());
        }
        result = result && (hasBattery() == other.hasBattery());
        if (hasBattery()) {
          result = result && getBattery()
              .equals(other.getBattery());
        }
        result = result && (hasAvailableRam() == other.hasAvailableRam());
        if (hasAvailableRam()) {
          result = result && getAvailableRam()
              .equals(other.getAvailableRam());
        }
        result = result && (hasAvailableDisk() == other.hasAvailableDisk());
        if (hasAvailableDisk()) {
          result = result && getAvailableDisk()
              .equals(other.getAvailableDisk());
        }
        result = result && (hasCpuUtilization() == other.hasCpuUtilization());
        if (hasCpuUtilization()) {
          result = result && getCpuUtilization()
              .equals(other.getCpuUtilization());
        }
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
        hash = (37 * hash) + MAKE_FIELD_NUMBER;
        hash = (53 * hash) + getMake().hashCode();
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
        hash = (37 * hash) + OS_FIELD_NUMBER;
        hash = (53 * hash) + os_;
        hash = (37 * hash) + OS_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getOsVersion().hashCode();
        hash = (37 * hash) + APP_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getAppVersion().hashCode();
        if (hasAppSettings()) {
          hash = (37 * hash) + APP_SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getAppSettings().hashCode();
        }
        hash = (37 * hash) + NETWORK_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + networkType_;
        if (hasStationInformationTimestamps()) {
          hash = (37 * hash) + STATION_INFORMATION_TIMESTAMPS_FIELD_NUMBER;
          hash = (53 * hash) + getStationInformationTimestamps().hashCode();
        }
        if (hasNetworkStrength()) {
          hash = (37 * hash) + NETWORK_STRENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getNetworkStrength().hashCode();
        }
        if (hasTemperature()) {
          hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
          hash = (53 * hash) + getTemperature().hashCode();
        }
        if (hasBattery()) {
          hash = (37 * hash) + BATTERY_FIELD_NUMBER;
          hash = (53 * hash) + getBattery().hashCode();
        }
        if (hasAvailableRam()) {
          hash = (37 * hash) + AVAILABLE_RAM_FIELD_NUMBER;
          hash = (53 * hash) + getAvailableRam().hashCode();
        }
        if (hasAvailableDisk()) {
          hash = (37 * hash) + AVAILABLE_DISK_FIELD_NUMBER;
          hash = (53 * hash) + getAvailableDisk().hashCode();
        }
        if (hasCpuUtilization()) {
          hash = (37 * hash) + CPU_UTILIZATION_FIELD_NUMBER;
          hash = (53 * hash) + getCpuUtilization().hashCode();
        }
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.StationInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.StationInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 17:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 17:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = "";

          uuid_ = "";

          make_ = "";

          model_ = "";

          os_ = 0;

          osVersion_ = "";

          appVersion_ = "";

          if (appSettingsBuilder_ == null) {
            appSettings_ = null;
          } else {
            appSettings_ = null;
            appSettingsBuilder_ = null;
          }
          networkType_ = 0;

          if (stationInformationTimestampsBuilder_ == null) {
            stationInformationTimestamps_ = null;
          } else {
            stationInformationTimestamps_ = null;
            stationInformationTimestampsBuilder_ = null;
          }
          if (networkStrengthBuilder_ == null) {
            networkStrength_ = null;
          } else {
            networkStrength_ = null;
            networkStrengthBuilder_ = null;
          }
          if (temperatureBuilder_ == null) {
            temperature_ = null;
          } else {
            temperature_ = null;
            temperatureBuilder_ = null;
          }
          if (batteryBuilder_ == null) {
            battery_ = null;
          } else {
            battery_ = null;
            batteryBuilder_ = null;
          }
          if (availableRamBuilder_ == null) {
            availableRam_ = null;
          } else {
            availableRam_ = null;
            availableRamBuilder_ = null;
          }
          if (availableDiskBuilder_ == null) {
            availableDisk_ = null;
          } else {
            availableDisk_ = null;
            availableDiskBuilder_ = null;
          }
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilization_ = null;
          } else {
            cpuUtilization_ = null;
            cpuUtilizationBuilder_ = null;
          }
          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.id_ = id_;
          result.uuid_ = uuid_;
          result.make_ = make_;
          result.model_ = model_;
          result.os_ = os_;
          result.osVersion_ = osVersion_;
          result.appVersion_ = appVersion_;
          if (appSettingsBuilder_ == null) {
            result.appSettings_ = appSettings_;
          } else {
            result.appSettings_ = appSettingsBuilder_.build();
          }
          result.networkType_ = networkType_;
          if (stationInformationTimestampsBuilder_ == null) {
            result.stationInformationTimestamps_ = stationInformationTimestamps_;
          } else {
            result.stationInformationTimestamps_ = stationInformationTimestampsBuilder_.build();
          }
          if (networkStrengthBuilder_ == null) {
            result.networkStrength_ = networkStrength_;
          } else {
            result.networkStrength_ = networkStrengthBuilder_.build();
          }
          if (temperatureBuilder_ == null) {
            result.temperature_ = temperature_;
          } else {
            result.temperature_ = temperatureBuilder_.build();
          }
          if (batteryBuilder_ == null) {
            result.battery_ = battery_;
          } else {
            result.battery_ = batteryBuilder_.build();
          }
          if (availableRamBuilder_ == null) {
            result.availableRam_ = availableRam_;
          } else {
            result.availableRam_ = availableRamBuilder_.build();
          }
          if (availableDiskBuilder_ == null) {
            result.availableDisk_ = availableDisk_;
          } else {
            result.availableDisk_ = availableDiskBuilder_.build();
          }
          if (cpuUtilizationBuilder_ == null) {
            result.cpuUtilization_ = cpuUtilization_;
          } else {
            result.cpuUtilization_ = cpuUtilizationBuilder_.build();
          }
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDefaultInstance()) return this;
          if (!other.getId().isEmpty()) {
            id_ = other.id_;
            onChanged();
          }
          if (!other.getUuid().isEmpty()) {
            uuid_ = other.uuid_;
            onChanged();
          }
          if (!other.getMake().isEmpty()) {
            make_ = other.make_;
            onChanged();
          }
          if (!other.getModel().isEmpty()) {
            model_ = other.model_;
            onChanged();
          }
          if (other.os_ != 0) {
            setOsValue(other.getOsValue());
          }
          if (!other.getOsVersion().isEmpty()) {
            osVersion_ = other.osVersion_;
            onChanged();
          }
          if (!other.getAppVersion().isEmpty()) {
            appVersion_ = other.appVersion_;
            onChanged();
          }
          if (other.hasAppSettings()) {
            mergeAppSettings(other.getAppSettings());
          }
          if (other.networkType_ != 0) {
            setNetworkTypeValue(other.getNetworkTypeValue());
          }
          if (other.hasStationInformationTimestamps()) {
            mergeStationInformationTimestamps(other.getStationInformationTimestamps());
          }
          if (other.hasNetworkStrength()) {
            mergeNetworkStrength(other.getNetworkStrength());
          }
          if (other.hasTemperature()) {
            mergeTemperature(other.getTemperature());
          }
          if (other.hasBattery()) {
            mergeBattery(other.getBattery());
          }
          if (other.hasAvailableRam()) {
            mergeAvailableRam(other.getAvailableRam());
          }
          if (other.hasAvailableDisk()) {
            mergeAvailableDisk(other.getAvailableDisk());
          }
          if (other.hasCpuUtilization()) {
            mergeCpuUtilization(other.getCpuUtilization());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object id_ = "";
        /**
         * <pre>
         * The user selectable station id
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The user selectable station id
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The user selectable station id
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The user selectable station id
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public Builder clearId() {
          
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The user selectable station id
         * </pre>
         *
         * <code>string id = 1;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          id_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object uuid_ = "";
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string uuid = 2;</code>
         */
        public java.lang.String getUuid() {
          java.lang.Object ref = uuid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            uuid_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string uuid = 2;</code>
         */
        public com.google.protobuf.ByteString
            getUuidBytes() {
          java.lang.Object ref = uuid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            uuid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string uuid = 2;</code>
         */
        public Builder setUuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          uuid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string uuid = 2;</code>
         */
        public Builder clearUuid() {
          
          uuid_ = getDefaultInstance().getUuid();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The app provided UUID
         * </pre>
         *
         * <code>string uuid = 2;</code>
         */
        public Builder setUuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          uuid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object make_ = "";
        /**
         * <pre>
         * Make of the station
         * </pre>
         *
         * <code>string make = 3;</code>
         */
        public java.lang.String getMake() {
          java.lang.Object ref = make_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            make_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Make of the station
         * </pre>
         *
         * <code>string make = 3;</code>
         */
        public com.google.protobuf.ByteString
            getMakeBytes() {
          java.lang.Object ref = make_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            make_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Make of the station
         * </pre>
         *
         * <code>string make = 3;</code>
         */
        public Builder setMake(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          make_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Make of the station
         * </pre>
         *
         * <code>string make = 3;</code>
         */
        public Builder clearMake() {
          
          make_ = getDefaultInstance().getMake();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Make of the station
         * </pre>
         *
         * <code>string make = 3;</code>
         */
        public Builder setMakeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          make_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object model_ = "";
        /**
         * <pre>
         * Model of the station
         * </pre>
         *
         * <code>string model = 4;</code>
         */
        public java.lang.String getModel() {
          java.lang.Object ref = model_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            model_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Model of the station
         * </pre>
         *
         * <code>string model = 4;</code>
         */
        public com.google.protobuf.ByteString
            getModelBytes() {
          java.lang.Object ref = model_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            model_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Model of the station
         * </pre>
         *
         * <code>string model = 4;</code>
         */
        public Builder setModel(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          model_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Model of the station
         * </pre>
         *
         * <code>string model = 4;</code>
         */
        public Builder clearModel() {
          
          model_ = getDefaultInstance().getModel();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Model of the station
         * </pre>
         *
         * <code>string model = 4;</code>
         */
        public Builder setModelBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          model_ = value;
          onChanged();
          return this;
        }

        private int os_ = 0;
        /**
         * <pre>
         * OS of the station
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
         */
        public int getOsValue() {
          return os_;
        }
        /**
         * <pre>
         * OS of the station
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
         */
        public Builder setOsValue(int value) {
          os_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS of the station
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType getOs() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType.valueOf(os_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * OS of the station
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
         */
        public Builder setOs(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.OsType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          os_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS of the station
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.OsType os = 5;</code>
         */
        public Builder clearOs() {
          
          os_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object osVersion_ = "";
        /**
         * <pre>
         * OS version of the station
         * </pre>
         *
         * <code>string os_version = 6;</code>
         */
        public java.lang.String getOsVersion() {
          java.lang.Object ref = osVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            osVersion_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * OS version of the station
         * </pre>
         *
         * <code>string os_version = 6;</code>
         */
        public com.google.protobuf.ByteString
            getOsVersionBytes() {
          java.lang.Object ref = osVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            osVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * OS version of the station
         * </pre>
         *
         * <code>string os_version = 6;</code>
         */
        public Builder setOsVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          osVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS version of the station
         * </pre>
         *
         * <code>string os_version = 6;</code>
         */
        public Builder clearOsVersion() {
          
          osVersion_ = getDefaultInstance().getOsVersion();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * OS version of the station
         * </pre>
         *
         * <code>string os_version = 6;</code>
         */
        public Builder setOsVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          osVersion_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object appVersion_ = "";
        /**
         * <pre>
         * App version on the station
         * </pre>
         *
         * <code>string app_version = 7;</code>
         */
        public java.lang.String getAppVersion() {
          java.lang.Object ref = appVersion_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            appVersion_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * App version on the station
         * </pre>
         *
         * <code>string app_version = 7;</code>
         */
        public com.google.protobuf.ByteString
            getAppVersionBytes() {
          java.lang.Object ref = appVersion_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            appVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * App version on the station
         * </pre>
         *
         * <code>string app_version = 7;</code>
         */
        public Builder setAppVersion(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          appVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * App version on the station
         * </pre>
         *
         * <code>string app_version = 7;</code>
         */
        public Builder clearAppVersion() {
          
          appVersion_ = getDefaultInstance().getAppVersion();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * App version on the station
         * </pre>
         *
         * <code>string app_version = 7;</code>
         */
        public Builder setAppVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          appVersion_ = value;
          onChanged();
          return this;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings appSettings_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder> appSettingsBuilder_;
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public boolean hasAppSettings() {
          return appSettingsBuilder_ != null || appSettings_ != null;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings getAppSettings() {
          if (appSettingsBuilder_ == null) {
            return appSettings_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDefaultInstance() : appSettings_;
          } else {
            return appSettingsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public Builder setAppSettings(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings value) {
          if (appSettingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            appSettings_ = value;
            onChanged();
          } else {
            appSettingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public Builder setAppSettings(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder builderForValue) {
          if (appSettingsBuilder_ == null) {
            appSettings_ = builderForValue.build();
            onChanged();
          } else {
            appSettingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public Builder mergeAppSettings(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings value) {
          if (appSettingsBuilder_ == null) {
            if (appSettings_ != null) {
              appSettings_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.newBuilder(appSettings_).mergeFrom(value).buildPartial();
            } else {
              appSettings_ = value;
            }
            onChanged();
          } else {
            appSettingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public Builder clearAppSettings() {
          if (appSettingsBuilder_ == null) {
            appSettings_ = null;
            onChanged();
          } else {
            appSettings_ = null;
            appSettingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder getAppSettingsBuilder() {
          
          onChanged();
          return getAppSettingsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder getAppSettingsOrBuilder() {
          if (appSettingsBuilder_ != null) {
            return appSettingsBuilder_.getMessageOrBuilder();
          } else {
            return appSettings_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.getDefaultInstance() : appSettings_;
          }
        }
        /**
         * <pre>
         * A copy of the App's settings
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.AppSettings app_settings = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder> 
            getAppSettingsFieldBuilder() {
          if (appSettingsBuilder_ == null) {
            appSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettings.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.AppSettingsOrBuilder>(
                    getAppSettings(),
                    getParentForChildren(),
                    isClean());
            appSettings_ = null;
          }
          return appSettingsBuilder_;
        }

        private int networkType_ = 0;
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
         */
        public int getNetworkTypeValue() {
          return networkType_;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
         */
        public Builder setNetworkTypeValue(int value) {
          networkType_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType getNetworkType() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType.valueOf(networkType_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
         */
        public Builder setNetworkType(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.NetworkType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          networkType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Type of network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.StationInformation.NetworkType network_type = 9;</code>
         */
        public Builder clearNetworkType() {
          
          networkType_ = 0;
          onChanged();
          return this;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload stationInformationTimestamps_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> stationInformationTimestampsBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public boolean hasStationInformationTimestamps() {
          return stationInformationTimestampsBuilder_ != null || stationInformationTimestamps_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getStationInformationTimestamps() {
          if (stationInformationTimestampsBuilder_ == null) {
            return stationInformationTimestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : stationInformationTimestamps_;
          } else {
            return stationInformationTimestampsBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public Builder setStationInformationTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (stationInformationTimestampsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stationInformationTimestamps_ = value;
            onChanged();
          } else {
            stationInformationTimestampsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public Builder setStationInformationTimestamps(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (stationInformationTimestampsBuilder_ == null) {
            stationInformationTimestamps_ = builderForValue.build();
            onChanged();
          } else {
            stationInformationTimestampsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public Builder mergeStationInformationTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (stationInformationTimestampsBuilder_ == null) {
            if (stationInformationTimestamps_ != null) {
              stationInformationTimestamps_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(stationInformationTimestamps_).mergeFrom(value).buildPartial();
            } else {
              stationInformationTimestamps_ = value;
            }
            onChanged();
          } else {
            stationInformationTimestampsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public Builder clearStationInformationTimestamps() {
          if (stationInformationTimestampsBuilder_ == null) {
            stationInformationTimestamps_ = null;
            onChanged();
          } else {
            stationInformationTimestamps_ = null;
            stationInformationTimestampsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getStationInformationTimestampsBuilder() {
          
          onChanged();
          return getStationInformationTimestampsFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getStationInformationTimestampsOrBuilder() {
          if (stationInformationTimestampsBuilder_ != null) {
            return stationInformationTimestampsBuilder_.getMessageOrBuilder();
          } else {
            return stationInformationTimestamps_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : stationInformationTimestamps_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload station_information_timestamps = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getStationInformationTimestampsFieldBuilder() {
          if (stationInformationTimestampsBuilder_ == null) {
            stationInformationTimestampsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getStationInformationTimestamps(),
                    getParentForChildren(),
                    isClean());
            stationInformationTimestamps_ = null;
          }
          return stationInformationTimestampsBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload networkStrength_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> networkStrengthBuilder_;
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public boolean hasNetworkStrength() {
          return networkStrengthBuilder_ != null || networkStrength_ != null;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getNetworkStrength() {
          if (networkStrengthBuilder_ == null) {
            return networkStrength_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : networkStrength_;
          } else {
            return networkStrengthBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public Builder setNetworkStrength(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (networkStrengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            networkStrength_ = value;
            onChanged();
          } else {
            networkStrengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public Builder setNetworkStrength(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (networkStrengthBuilder_ == null) {
            networkStrength_ = builderForValue.build();
            onChanged();
          } else {
            networkStrengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public Builder mergeNetworkStrength(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (networkStrengthBuilder_ == null) {
            if (networkStrength_ != null) {
              networkStrength_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(networkStrength_).mergeFrom(value).buildPartial();
            } else {
              networkStrength_ = value;
            }
            onChanged();
          } else {
            networkStrengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public Builder clearNetworkStrength() {
          if (networkStrengthBuilder_ == null) {
            networkStrength_ = null;
            onChanged();
          } else {
            networkStrength_ = null;
            networkStrengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getNetworkStrengthBuilder() {
          
          onChanged();
          return getNetworkStrengthFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getNetworkStrengthOrBuilder() {
          if (networkStrengthBuilder_ != null) {
            return networkStrengthBuilder_.getMessageOrBuilder();
          } else {
            return networkStrength_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : networkStrength_;
          }
        }
        /**
         * <pre>
         * A value representing the strength of the network connection
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload network_strength = 11;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getNetworkStrengthFieldBuilder() {
          if (networkStrengthBuilder_ == null) {
            networkStrengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getNetworkStrength(),
                    getParentForChildren(),
                    isClean());
            networkStrength_ = null;
          }
          return networkStrengthBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload temperature_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> temperatureBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public boolean hasTemperature() {
          return temperatureBuilder_ != null || temperature_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTemperature() {
          if (temperatureBuilder_ == null) {
            return temperature_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : temperature_;
          } else {
            return temperatureBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public Builder setTemperature(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (temperatureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            temperature_ = value;
            onChanged();
          } else {
            temperatureBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public Builder setTemperature(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (temperatureBuilder_ == null) {
            temperature_ = builderForValue.build();
            onChanged();
          } else {
            temperatureBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public Builder mergeTemperature(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (temperatureBuilder_ == null) {
            if (temperature_ != null) {
              temperature_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(temperature_).mergeFrom(value).buildPartial();
            } else {
              temperature_ = value;
            }
            onChanged();
          } else {
            temperatureBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public Builder clearTemperature() {
          if (temperatureBuilder_ == null) {
            temperature_ = null;
            onChanged();
          } else {
            temperature_ = null;
            temperatureBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getTemperatureBuilder() {
          
          onChanged();
          return getTemperatureFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTemperatureOrBuilder() {
          if (temperatureBuilder_ != null) {
            return temperatureBuilder_.getMessageOrBuilder();
          } else {
            return temperature_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : temperature_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload temperature = 12;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getTemperatureFieldBuilder() {
          if (temperatureBuilder_ == null) {
            temperatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getTemperature(),
                    getParentForChildren(),
                    isClean());
            temperature_ = null;
          }
          return temperatureBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload battery_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> batteryBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public boolean hasBattery() {
          return batteryBuilder_ != null || battery_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBattery() {
          if (batteryBuilder_ == null) {
            return battery_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : battery_;
          } else {
            return batteryBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public Builder setBattery(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (batteryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            battery_ = value;
            onChanged();
          } else {
            batteryBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public Builder setBattery(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (batteryBuilder_ == null) {
            battery_ = builderForValue.build();
            onChanged();
          } else {
            batteryBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public Builder mergeBattery(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (batteryBuilder_ == null) {
            if (battery_ != null) {
              battery_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(battery_).mergeFrom(value).buildPartial();
            } else {
              battery_ = value;
            }
            onChanged();
          } else {
            batteryBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public Builder clearBattery() {
          if (batteryBuilder_ == null) {
            battery_ = null;
            onChanged();
          } else {
            battery_ = null;
            batteryBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getBatteryBuilder() {
          
          onChanged();
          return getBatteryFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBatteryOrBuilder() {
          if (batteryBuilder_ != null) {
            return batteryBuilder_.getMessageOrBuilder();
          } else {
            return battery_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : battery_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload battery = 13;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getBatteryFieldBuilder() {
          if (batteryBuilder_ == null) {
            batteryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getBattery(),
                    getParentForChildren(),
                    isClean());
            battery_ = null;
          }
          return batteryBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload availableRam_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> availableRamBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public boolean hasAvailableRam() {
          return availableRamBuilder_ != null || availableRam_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAvailableRam() {
          if (availableRamBuilder_ == null) {
            return availableRam_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : availableRam_;
          } else {
            return availableRamBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public Builder setAvailableRam(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (availableRamBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            availableRam_ = value;
            onChanged();
          } else {
            availableRamBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public Builder setAvailableRam(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (availableRamBuilder_ == null) {
            availableRam_ = builderForValue.build();
            onChanged();
          } else {
            availableRamBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public Builder mergeAvailableRam(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (availableRamBuilder_ == null) {
            if (availableRam_ != null) {
              availableRam_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(availableRam_).mergeFrom(value).buildPartial();
            } else {
              availableRam_ = value;
            }
            onChanged();
          } else {
            availableRamBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public Builder clearAvailableRam() {
          if (availableRamBuilder_ == null) {
            availableRam_ = null;
            onChanged();
          } else {
            availableRam_ = null;
            availableRamBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getAvailableRamBuilder() {
          
          onChanged();
          return getAvailableRamFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAvailableRamOrBuilder() {
          if (availableRamBuilder_ != null) {
            return availableRamBuilder_.getMessageOrBuilder();
          } else {
            return availableRam_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : availableRam_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_ram = 14;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getAvailableRamFieldBuilder() {
          if (availableRamBuilder_ == null) {
            availableRamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getAvailableRam(),
                    getParentForChildren(),
                    isClean());
            availableRam_ = null;
          }
          return availableRamBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload availableDisk_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> availableDiskBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public boolean hasAvailableDisk() {
          return availableDiskBuilder_ != null || availableDisk_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAvailableDisk() {
          if (availableDiskBuilder_ == null) {
            return availableDisk_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : availableDisk_;
          } else {
            return availableDiskBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public Builder setAvailableDisk(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (availableDiskBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            availableDisk_ = value;
            onChanged();
          } else {
            availableDiskBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public Builder setAvailableDisk(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (availableDiskBuilder_ == null) {
            availableDisk_ = builderForValue.build();
            onChanged();
          } else {
            availableDiskBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public Builder mergeAvailableDisk(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (availableDiskBuilder_ == null) {
            if (availableDisk_ != null) {
              availableDisk_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(availableDisk_).mergeFrom(value).buildPartial();
            } else {
              availableDisk_ = value;
            }
            onChanged();
          } else {
            availableDiskBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public Builder clearAvailableDisk() {
          if (availableDiskBuilder_ == null) {
            availableDisk_ = null;
            onChanged();
          } else {
            availableDisk_ = null;
            availableDiskBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getAvailableDiskBuilder() {
          
          onChanged();
          return getAvailableDiskFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAvailableDiskOrBuilder() {
          if (availableDiskBuilder_ != null) {
            return availableDiskBuilder_.getMessageOrBuilder();
          } else {
            return availableDisk_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : availableDisk_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload available_disk = 15;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getAvailableDiskFieldBuilder() {
          if (availableDiskBuilder_ == null) {
            availableDiskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getAvailableDisk(),
                    getParentForChildren(),
                    isClean());
            availableDisk_ = null;
          }
          return availableDiskBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload cpuUtilization_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> cpuUtilizationBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public boolean hasCpuUtilization() {
          return cpuUtilizationBuilder_ != null || cpuUtilization_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getCpuUtilization() {
          if (cpuUtilizationBuilder_ == null) {
            return cpuUtilization_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : cpuUtilization_;
          } else {
            return cpuUtilizationBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public Builder setCpuUtilization(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (cpuUtilizationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cpuUtilization_ = value;
            onChanged();
          } else {
            cpuUtilizationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public Builder setCpuUtilization(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilization_ = builderForValue.build();
            onChanged();
          } else {
            cpuUtilizationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public Builder mergeCpuUtilization(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
          if (cpuUtilizationBuilder_ == null) {
            if (cpuUtilization_ != null) {
              cpuUtilization_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(cpuUtilization_).mergeFrom(value).buildPartial();
            } else {
              cpuUtilization_ = value;
            }
            onChanged();
          } else {
            cpuUtilizationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public Builder clearCpuUtilization() {
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilization_ = null;
            onChanged();
          } else {
            cpuUtilization_ = null;
            cpuUtilizationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getCpuUtilizationBuilder() {
          
          onChanged();
          return getCpuUtilizationFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getCpuUtilizationOrBuilder() {
          if (cpuUtilizationBuilder_ != null) {
            return cpuUtilizationBuilder_.getMessageOrBuilder();
          } else {
            return cpuUtilization_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : cpuUtilization_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload cpu_utilization = 16;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
            getCpuUtilizationFieldBuilder() {
          if (cpuUtilizationBuilder_ == null) {
            cpuUtilizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                    getCpuUtilization(),
                    getParentForChildren(),
                    isClean());
            cpuUtilization_ = null;
          }
          return cpuUtilizationBuilder_;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 17;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.StationInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.StationInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StationInformation>
          PARSER = new com.google.protobuf.AbstractParser<StationInformation>() {
        @java.lang.Override
        public StationInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StationInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StationInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StationInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PacketInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.PacketInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Field for if this packet has been backfilled or not
       * </pre>
       *
       * <code>bool is_backfilled = 1;</code>
       */
      boolean getIsBackfilled();

      /**
       * <pre>
       * Field for if this packet is private to the user or not
       * </pre>
       *
       * <code>bool is_private = 2;</code>
       */
      boolean getIsPrivate();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.PacketInformation}
     */
    public  static final class PacketInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.PacketInformation)
        PacketInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PacketInformation.newBuilder() to construct.
      private PacketInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PacketInformation() {
        isBackfilled_ = false;
        isPrivate_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PacketInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                isBackfilled_ = input.readBool();
                break;
              }
              case 16: {

                isPrivate_ = input.readBool();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000004;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder.class);
      }

      private int bitField0_;
      public static final int IS_BACKFILLED_FIELD_NUMBER = 1;
      private boolean isBackfilled_;
      /**
       * <pre>
       * Field for if this packet has been backfilled or not
       * </pre>
       *
       * <code>bool is_backfilled = 1;</code>
       */
      public boolean getIsBackfilled() {
        return isBackfilled_;
      }

      public static final int IS_PRIVATE_FIELD_NUMBER = 2;
      private boolean isPrivate_;
      /**
       * <pre>
       * Field for if this packet is private to the user or not
       * </pre>
       *
       * <code>bool is_private = 2;</code>
       */
      public boolean getIsPrivate() {
        return isPrivate_;
      }

      public static final int METADATA_FIELD_NUMBER = 3;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 3;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (isBackfilled_ != false) {
          output.writeBool(1, isBackfilled_);
        }
        if (isPrivate_ != false) {
          output.writeBool(2, isPrivate_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            3);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (isBackfilled_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isBackfilled_);
        }
        if (isPrivate_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, isPrivate_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation) obj;

        boolean result = true;
        result = result && (getIsBackfilled()
            == other.getIsBackfilled());
        result = result && (getIsPrivate()
            == other.getIsPrivate());
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + IS_BACKFILLED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsBackfilled());
        hash = (37 * hash) + IS_PRIVATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsPrivate());
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.PacketInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.PacketInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 3:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 3:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isBackfilled_ = false;

          isPrivate_ = false;

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.isBackfilled_ = isBackfilled_;
          result.isPrivate_ = isPrivate_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance()) return this;
          if (other.getIsBackfilled() != false) {
            setIsBackfilled(other.getIsBackfilled());
          }
          if (other.getIsPrivate() != false) {
            setIsPrivate(other.getIsPrivate());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isBackfilled_ ;
        /**
         * <pre>
         * Field for if this packet has been backfilled or not
         * </pre>
         *
         * <code>bool is_backfilled = 1;</code>
         */
        public boolean getIsBackfilled() {
          return isBackfilled_;
        }
        /**
         * <pre>
         * Field for if this packet has been backfilled or not
         * </pre>
         *
         * <code>bool is_backfilled = 1;</code>
         */
        public Builder setIsBackfilled(boolean value) {
          
          isBackfilled_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Field for if this packet has been backfilled or not
         * </pre>
         *
         * <code>bool is_backfilled = 1;</code>
         */
        public Builder clearIsBackfilled() {
          
          isBackfilled_ = false;
          onChanged();
          return this;
        }

        private boolean isPrivate_ ;
        /**
         * <pre>
         * Field for if this packet is private to the user or not
         * </pre>
         *
         * <code>bool is_private = 2;</code>
         */
        public boolean getIsPrivate() {
          return isPrivate_;
        }
        /**
         * <pre>
         * Field for if this packet is private to the user or not
         * </pre>
         *
         * <code>bool is_private = 2;</code>
         */
        public Builder setIsPrivate(boolean value) {
          
          isPrivate_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Field for if this packet is private to the user or not
         * </pre>
         *
         * <code>bool is_private = 2;</code>
         */
        public Builder clearIsPrivate() {
          
          isPrivate_ = false;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 3;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.PacketInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.PacketInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PacketInformation>
          PARSER = new com.google.protobuf.AbstractParser<PacketInformation>() {
        @java.lang.Override
        public PacketInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PacketInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PacketInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PacketInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TimingInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.TimingInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Start timestamp of the packet using the os clock (corresponding to first audio sample)
       * </pre>
       *
       * <code>double packet_start_os_timestamp = 1;</code>
       */
      double getPacketStartOsTimestamp();

      /**
       * <pre>
       * Start timestamp of the packet using machine time (corresponding to the first audio sample)
       * </pre>
       *
       * <code>double packet_start_mach_timestamp = 2;</code>
       */
      double getPacketStartMachTimestamp();

      /**
       * <pre>
       * End timestamp of the packet using the os clock (corresponding to the last audio sample)
       * </pre>
       *
       * <code>double packet_end_os_timestamp = 3;</code>
       */
      double getPacketEndOsTimestamp();

      /**
       * <pre>
       * End timestamp of the packet using machine time (corresponding to the last audio sample)
       * </pre>
       *
       * <code>double packet_end_mach_timestamp = 4;</code>
       */
      double getPacketEndMachTimestamp();

      /**
       * <pre>
       * Timestamp that the packet arrived at the acquisition server
       * </pre>
       *
       * <code>double server_acquisition_arrival_timestamp = 5;</code>
       */
      double getServerAcquisitionArrivalTimestamp();

      /**
       * <pre>
       * The start of the app as machine time
       * </pre>
       *
       * <code>double app_start_mach_timestamp = 6;</code>
       */
      double getAppStartMachTimestamp();

      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> 
          getSynchExchangesList();
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getSynchExchanges(int index);
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      int getSynchExchangesCount();
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      java.util.List<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
          getSynchExchangesOrBuilderList();
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder getSynchExchangesOrBuilder(
          int index);

      /**
       * <pre>
       * The best latency as determined from the synch params
       * </pre>
       *
       * <code>double best_latency = 8;</code>
       */
      double getBestLatency();

      /**
       * <pre>
       * The best offset as determined from the synch params
       * </pre>
       *
       * <code>double best_offset = 9;</code>
       */
      double getBestOffset();

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
       */
      int getUnitValue();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation}
     */
    public  static final class TimingInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.TimingInformation)
        TimingInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TimingInformation.newBuilder() to construct.
      private TimingInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TimingInformation() {
        packetStartOsTimestamp_ = 0D;
        packetStartMachTimestamp_ = 0D;
        packetEndOsTimestamp_ = 0D;
        packetEndMachTimestamp_ = 0D;
        serverAcquisitionArrivalTimestamp_ = 0D;
        appStartMachTimestamp_ = 0D;
        synchExchanges_ = java.util.Collections.emptyList();
        bestLatency_ = 0D;
        bestOffset_ = 0D;
        unit_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TimingInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {

                packetStartOsTimestamp_ = input.readDouble();
                break;
              }
              case 17: {

                packetStartMachTimestamp_ = input.readDouble();
                break;
              }
              case 25: {

                packetEndOsTimestamp_ = input.readDouble();
                break;
              }
              case 33: {

                packetEndMachTimestamp_ = input.readDouble();
                break;
              }
              case 41: {

                serverAcquisitionArrivalTimestamp_ = input.readDouble();
                break;
              }
              case 49: {

                appStartMachTimestamp_ = input.readDouble();
                break;
              }
              case 58: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  synchExchanges_ = new java.util.ArrayList<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange>();
                  mutable_bitField0_ |= 0x00000040;
                }
                synchExchanges_.add(
                    input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.parser(), extensionRegistry));
                break;
              }
              case 65: {

                bestLatency_ = input.readDouble();
                break;
              }
              case 73: {

                bestOffset_ = input.readDouble();
                break;
              }
              case 80: {
                int rawValue = input.readEnum();

                unit_ = rawValue;
                break;
              }
              case 90: {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000400;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            synchExchanges_ = java.util.Collections.unmodifiableList(synchExchanges_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder.class);
      }

      public interface SynchExchangeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>double a1 = 1;</code>
         */
        double getA1();

        /**
         * <code>double a2 = 2;</code>
         */
        double getA2();

        /**
         * <code>double a3 = 3;</code>
         */
        double getA3();

        /**
         * <code>double b1 = 4;</code>
         */
        double getB1();

        /**
         * <code>double b2 = 5;</code>
         */
        double getB2();

        /**
         * <code>double b3 = 6;</code>
         */
        double getB3();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
         */
        int getUnitValue();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange}
       */
      public  static final class SynchExchange extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
          SynchExchangeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SynchExchange.newBuilder() to construct.
        private SynchExchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SynchExchange() {
          a1_ = 0D;
          a2_ = 0D;
          a3_ = 0D;
          b1_ = 0D;
          b2_ = 0D;
          b3_ = 0D;
          unit_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SynchExchange(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {

                  a1_ = input.readDouble();
                  break;
                }
                case 17: {

                  a2_ = input.readDouble();
                  break;
                }
                case 25: {

                  a3_ = input.readDouble();
                  break;
                }
                case 33: {

                  b1_ = input.readDouble();
                  break;
                }
                case 41: {

                  b2_ = input.readDouble();
                  break;
                }
                case 49: {

                  b3_ = input.readDouble();
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();

                  unit_ = rawValue;
                  break;
                }
                case 66: {
                  if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000080;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 8:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder.class);
        }

        private int bitField0_;
        public static final int A1_FIELD_NUMBER = 1;
        private double a1_;
        /**
         * <code>double a1 = 1;</code>
         */
        public double getA1() {
          return a1_;
        }

        public static final int A2_FIELD_NUMBER = 2;
        private double a2_;
        /**
         * <code>double a2 = 2;</code>
         */
        public double getA2() {
          return a2_;
        }

        public static final int A3_FIELD_NUMBER = 3;
        private double a3_;
        /**
         * <code>double a3 = 3;</code>
         */
        public double getA3() {
          return a3_;
        }

        public static final int B1_FIELD_NUMBER = 4;
        private double b1_;
        /**
         * <code>double b1 = 4;</code>
         */
        public double getB1() {
          return b1_;
        }

        public static final int B2_FIELD_NUMBER = 5;
        private double b2_;
        /**
         * <code>double b2 = 5;</code>
         */
        public double getB2() {
          return b2_;
        }

        public static final int B3_FIELD_NUMBER = 6;
        private double b3_;
        /**
         * <code>double b3 = 6;</code>
         */
        public double getB3() {
          return b3_;
        }

        public static final int UNIT_FIELD_NUMBER = 7;
        private int unit_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
         */
        public int getUnitValue() {
          return unit_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.valueOf(unit_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.UNRECOGNIZED : result;
        }

        public static final int METADATA_FIELD_NUMBER = 8;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 8;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (a1_ != 0D) {
            output.writeDouble(1, a1_);
          }
          if (a2_ != 0D) {
            output.writeDouble(2, a2_);
          }
          if (a3_ != 0D) {
            output.writeDouble(3, a3_);
          }
          if (b1_ != 0D) {
            output.writeDouble(4, b1_);
          }
          if (b2_ != 0D) {
            output.writeDouble(5, b2_);
          }
          if (b3_ != 0D) {
            output.writeDouble(6, b3_);
          }
          if (unit_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.METERS_PER_SECOND_SQUARED.getNumber()) {
            output.writeEnum(7, unit_);
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              8);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (a1_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(1, a1_);
          }
          if (a2_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, a2_);
          }
          if (a3_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, a3_);
          }
          if (b1_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, b1_);
          }
          if (b2_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(5, b2_);
          }
          if (b3_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(6, b3_);
          }
          if (unit_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.METERS_PER_SECOND_SQUARED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(7, unit_);
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(8, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange) obj;

          boolean result = true;
          result = result && (
              java.lang.Double.doubleToLongBits(getA1())
              == java.lang.Double.doubleToLongBits(
                  other.getA1()));
          result = result && (
              java.lang.Double.doubleToLongBits(getA2())
              == java.lang.Double.doubleToLongBits(
                  other.getA2()));
          result = result && (
              java.lang.Double.doubleToLongBits(getA3())
              == java.lang.Double.doubleToLongBits(
                  other.getA3()));
          result = result && (
              java.lang.Double.doubleToLongBits(getB1())
              == java.lang.Double.doubleToLongBits(
                  other.getB1()));
          result = result && (
              java.lang.Double.doubleToLongBits(getB2())
              == java.lang.Double.doubleToLongBits(
                  other.getB2()));
          result = result && (
              java.lang.Double.doubleToLongBits(getB3())
              == java.lang.Double.doubleToLongBits(
                  other.getB3()));
          result = result && unit_ == other.unit_;
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + A1_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getA1()));
          hash = (37 * hash) + A2_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getA2()));
          hash = (37 * hash) + A3_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getA3()));
          hash = (37 * hash) + B1_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getB1()));
          hash = (37 * hash) + B2_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getB2()));
          hash = (37 * hash) + B3_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getB3()));
          hash = (37 * hash) + UNIT_FIELD_NUMBER;
          hash = (53 * hash) + unit_;
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 8:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 8:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            a1_ = 0D;

            a2_ = 0D;

            a3_ = 0D;

            b1_ = 0D;

            b2_ = 0D;

            b3_ = 0D;

            unit_ = 0;

            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.a1_ = a1_;
            result.a2_ = a2_;
            result.a3_ = a3_;
            result.b1_ = b1_;
            result.b2_ = b2_;
            result.b3_ = b3_;
            result.unit_ = unit_;
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance()) return this;
            if (other.getA1() != 0D) {
              setA1(other.getA1());
            }
            if (other.getA2() != 0D) {
              setA2(other.getA2());
            }
            if (other.getA3() != 0D) {
              setA3(other.getA3());
            }
            if (other.getB1() != 0D) {
              setB1(other.getB1());
            }
            if (other.getB2() != 0D) {
              setB2(other.getB2());
            }
            if (other.getB3() != 0D) {
              setB3(other.getB3());
            }
            if (other.unit_ != 0) {
              setUnitValue(other.getUnitValue());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private double a1_ ;
          /**
           * <code>double a1 = 1;</code>
           */
          public double getA1() {
            return a1_;
          }
          /**
           * <code>double a1 = 1;</code>
           */
          public Builder setA1(double value) {
            
            a1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double a1 = 1;</code>
           */
          public Builder clearA1() {
            
            a1_ = 0D;
            onChanged();
            return this;
          }

          private double a2_ ;
          /**
           * <code>double a2 = 2;</code>
           */
          public double getA2() {
            return a2_;
          }
          /**
           * <code>double a2 = 2;</code>
           */
          public Builder setA2(double value) {
            
            a2_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double a2 = 2;</code>
           */
          public Builder clearA2() {
            
            a2_ = 0D;
            onChanged();
            return this;
          }

          private double a3_ ;
          /**
           * <code>double a3 = 3;</code>
           */
          public double getA3() {
            return a3_;
          }
          /**
           * <code>double a3 = 3;</code>
           */
          public Builder setA3(double value) {
            
            a3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double a3 = 3;</code>
           */
          public Builder clearA3() {
            
            a3_ = 0D;
            onChanged();
            return this;
          }

          private double b1_ ;
          /**
           * <code>double b1 = 4;</code>
           */
          public double getB1() {
            return b1_;
          }
          /**
           * <code>double b1 = 4;</code>
           */
          public Builder setB1(double value) {
            
            b1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double b1 = 4;</code>
           */
          public Builder clearB1() {
            
            b1_ = 0D;
            onChanged();
            return this;
          }

          private double b2_ ;
          /**
           * <code>double b2 = 5;</code>
           */
          public double getB2() {
            return b2_;
          }
          /**
           * <code>double b2 = 5;</code>
           */
          public Builder setB2(double value) {
            
            b2_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double b2 = 5;</code>
           */
          public Builder clearB2() {
            
            b2_ = 0D;
            onChanged();
            return this;
          }

          private double b3_ ;
          /**
           * <code>double b3 = 6;</code>
           */
          public double getB3() {
            return b3_;
          }
          /**
           * <code>double b3 = 6;</code>
           */
          public Builder setB3(double value) {
            
            b3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>double b3 = 6;</code>
           */
          public Builder clearB3() {
            
            b3_ = 0D;
            onChanged();
            return this;
          }

          private int unit_ = 0;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
           */
          public int getUnitValue() {
            return unit_;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
           */
          public Builder setUnitValue(int value) {
            unit_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.valueOf(unit_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.UNRECOGNIZED : result;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
           */
          public Builder setUnit(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            unit_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 7;</code>
           */
          public Builder clearUnit() {
            
            unit_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 8;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SynchExchange>
            PARSER = new com.google.protobuf.AbstractParser<SynchExchange>() {
          @java.lang.Override
          public SynchExchange parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SynchExchange(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SynchExchange> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SynchExchange> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int PACKET_START_OS_TIMESTAMP_FIELD_NUMBER = 1;
      private double packetStartOsTimestamp_;
      /**
       * <pre>
       * Start timestamp of the packet using the os clock (corresponding to first audio sample)
       * </pre>
       *
       * <code>double packet_start_os_timestamp = 1;</code>
       */
      public double getPacketStartOsTimestamp() {
        return packetStartOsTimestamp_;
      }

      public static final int PACKET_START_MACH_TIMESTAMP_FIELD_NUMBER = 2;
      private double packetStartMachTimestamp_;
      /**
       * <pre>
       * Start timestamp of the packet using machine time (corresponding to the first audio sample)
       * </pre>
       *
       * <code>double packet_start_mach_timestamp = 2;</code>
       */
      public double getPacketStartMachTimestamp() {
        return packetStartMachTimestamp_;
      }

      public static final int PACKET_END_OS_TIMESTAMP_FIELD_NUMBER = 3;
      private double packetEndOsTimestamp_;
      /**
       * <pre>
       * End timestamp of the packet using the os clock (corresponding to the last audio sample)
       * </pre>
       *
       * <code>double packet_end_os_timestamp = 3;</code>
       */
      public double getPacketEndOsTimestamp() {
        return packetEndOsTimestamp_;
      }

      public static final int PACKET_END_MACH_TIMESTAMP_FIELD_NUMBER = 4;
      private double packetEndMachTimestamp_;
      /**
       * <pre>
       * End timestamp of the packet using machine time (corresponding to the last audio sample)
       * </pre>
       *
       * <code>double packet_end_mach_timestamp = 4;</code>
       */
      public double getPacketEndMachTimestamp() {
        return packetEndMachTimestamp_;
      }

      public static final int SERVER_ACQUISITION_ARRIVAL_TIMESTAMP_FIELD_NUMBER = 5;
      private double serverAcquisitionArrivalTimestamp_;
      /**
       * <pre>
       * Timestamp that the packet arrived at the acquisition server
       * </pre>
       *
       * <code>double server_acquisition_arrival_timestamp = 5;</code>
       */
      public double getServerAcquisitionArrivalTimestamp() {
        return serverAcquisitionArrivalTimestamp_;
      }

      public static final int APP_START_MACH_TIMESTAMP_FIELD_NUMBER = 6;
      private double appStartMachTimestamp_;
      /**
       * <pre>
       * The start of the app as machine time
       * </pre>
       *
       * <code>double app_start_mach_timestamp = 6;</code>
       */
      public double getAppStartMachTimestamp() {
        return appStartMachTimestamp_;
      }

      public static final int SYNCH_EXCHANGES_FIELD_NUMBER = 7;
      private java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> synchExchanges_;
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> getSynchExchangesList() {
        return synchExchanges_;
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public java.util.List<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
          getSynchExchangesOrBuilderList() {
        return synchExchanges_;
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public int getSynchExchangesCount() {
        return synchExchanges_.size();
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getSynchExchanges(int index) {
        return synchExchanges_.get(index);
      }
      /**
       * <pre>
       * An array of synchronization params from the synch server
       * </pre>
       *
       * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder getSynchExchangesOrBuilder(
          int index) {
        return synchExchanges_.get(index);
      }

      public static final int BEST_LATENCY_FIELD_NUMBER = 8;
      private double bestLatency_;
      /**
       * <pre>
       * The best latency as determined from the synch params
       * </pre>
       *
       * <code>double best_latency = 8;</code>
       */
      public double getBestLatency() {
        return bestLatency_;
      }

      public static final int BEST_OFFSET_FIELD_NUMBER = 9;
      private double bestOffset_;
      /**
       * <pre>
       * The best offset as determined from the synch params
       * </pre>
       *
       * <code>double best_offset = 9;</code>
       */
      public double getBestOffset() {
        return bestOffset_;
      }

      public static final int UNIT_FIELD_NUMBER = 10;
      private int unit_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
       */
      public int getUnitValue() {
        return unit_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.valueOf(unit_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.UNRECOGNIZED : result;
      }

      public static final int METADATA_FIELD_NUMBER = 11;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 11;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (packetStartOsTimestamp_ != 0D) {
          output.writeDouble(1, packetStartOsTimestamp_);
        }
        if (packetStartMachTimestamp_ != 0D) {
          output.writeDouble(2, packetStartMachTimestamp_);
        }
        if (packetEndOsTimestamp_ != 0D) {
          output.writeDouble(3, packetEndOsTimestamp_);
        }
        if (packetEndMachTimestamp_ != 0D) {
          output.writeDouble(4, packetEndMachTimestamp_);
        }
        if (serverAcquisitionArrivalTimestamp_ != 0D) {
          output.writeDouble(5, serverAcquisitionArrivalTimestamp_);
        }
        if (appStartMachTimestamp_ != 0D) {
          output.writeDouble(6, appStartMachTimestamp_);
        }
        for (int i = 0; i < synchExchanges_.size(); i++) {
          output.writeMessage(7, synchExchanges_.get(i));
        }
        if (bestLatency_ != 0D) {
          output.writeDouble(8, bestLatency_);
        }
        if (bestOffset_ != 0D) {
          output.writeDouble(9, bestOffset_);
        }
        if (unit_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.METERS_PER_SECOND_SQUARED.getNumber()) {
          output.writeEnum(10, unit_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            11);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (packetStartOsTimestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, packetStartOsTimestamp_);
        }
        if (packetStartMachTimestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, packetStartMachTimestamp_);
        }
        if (packetEndOsTimestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, packetEndOsTimestamp_);
        }
        if (packetEndMachTimestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, packetEndMachTimestamp_);
        }
        if (serverAcquisitionArrivalTimestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, serverAcquisitionArrivalTimestamp_);
        }
        if (appStartMachTimestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, appStartMachTimestamp_);
        }
        for (int i = 0; i < synchExchanges_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, synchExchanges_.get(i));
        }
        if (bestLatency_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, bestLatency_);
        }
        if (bestOffset_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, bestOffset_);
        }
        if (unit_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.METERS_PER_SECOND_SQUARED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(10, unit_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation) obj;

        boolean result = true;
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketStartOsTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getPacketStartOsTimestamp()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketStartMachTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getPacketStartMachTimestamp()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketEndOsTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getPacketEndOsTimestamp()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPacketEndMachTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getPacketEndMachTimestamp()));
        result = result && (
            java.lang.Double.doubleToLongBits(getServerAcquisitionArrivalTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getServerAcquisitionArrivalTimestamp()));
        result = result && (
            java.lang.Double.doubleToLongBits(getAppStartMachTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getAppStartMachTimestamp()));
        result = result && getSynchExchangesList()
            .equals(other.getSynchExchangesList());
        result = result && (
            java.lang.Double.doubleToLongBits(getBestLatency())
            == java.lang.Double.doubleToLongBits(
                other.getBestLatency()));
        result = result && (
            java.lang.Double.doubleToLongBits(getBestOffset())
            == java.lang.Double.doubleToLongBits(
                other.getBestOffset()));
        result = result && unit_ == other.unit_;
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PACKET_START_OS_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketStartOsTimestamp()));
        hash = (37 * hash) + PACKET_START_MACH_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketStartMachTimestamp()));
        hash = (37 * hash) + PACKET_END_OS_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketEndOsTimestamp()));
        hash = (37 * hash) + PACKET_END_MACH_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPacketEndMachTimestamp()));
        hash = (37 * hash) + SERVER_ACQUISITION_ARRIVAL_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getServerAcquisitionArrivalTimestamp()));
        hash = (37 * hash) + APP_START_MACH_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAppStartMachTimestamp()));
        if (getSynchExchangesCount() > 0) {
          hash = (37 * hash) + SYNCH_EXCHANGES_FIELD_NUMBER;
          hash = (53 * hash) + getSynchExchangesList().hashCode();
        }
        hash = (37 * hash) + BEST_LATENCY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBestLatency()));
        hash = (37 * hash) + BEST_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBestOffset()));
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + unit_;
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.TimingInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.TimingInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 11:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 11:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSynchExchangesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          packetStartOsTimestamp_ = 0D;

          packetStartMachTimestamp_ = 0D;

          packetEndOsTimestamp_ = 0D;

          packetEndMachTimestamp_ = 0D;

          serverAcquisitionArrivalTimestamp_ = 0D;

          appStartMachTimestamp_ = 0D;

          if (synchExchangesBuilder_ == null) {
            synchExchanges_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            synchExchangesBuilder_.clear();
          }
          bestLatency_ = 0D;

          bestOffset_ = 0D;

          unit_ = 0;

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.packetStartOsTimestamp_ = packetStartOsTimestamp_;
          result.packetStartMachTimestamp_ = packetStartMachTimestamp_;
          result.packetEndOsTimestamp_ = packetEndOsTimestamp_;
          result.packetEndMachTimestamp_ = packetEndMachTimestamp_;
          result.serverAcquisitionArrivalTimestamp_ = serverAcquisitionArrivalTimestamp_;
          result.appStartMachTimestamp_ = appStartMachTimestamp_;
          if (synchExchangesBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              synchExchanges_ = java.util.Collections.unmodifiableList(synchExchanges_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.synchExchanges_ = synchExchanges_;
          } else {
            result.synchExchanges_ = synchExchangesBuilder_.build();
          }
          result.bestLatency_ = bestLatency_;
          result.bestOffset_ = bestOffset_;
          result.unit_ = unit_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance()) return this;
          if (other.getPacketStartOsTimestamp() != 0D) {
            setPacketStartOsTimestamp(other.getPacketStartOsTimestamp());
          }
          if (other.getPacketStartMachTimestamp() != 0D) {
            setPacketStartMachTimestamp(other.getPacketStartMachTimestamp());
          }
          if (other.getPacketEndOsTimestamp() != 0D) {
            setPacketEndOsTimestamp(other.getPacketEndOsTimestamp());
          }
          if (other.getPacketEndMachTimestamp() != 0D) {
            setPacketEndMachTimestamp(other.getPacketEndMachTimestamp());
          }
          if (other.getServerAcquisitionArrivalTimestamp() != 0D) {
            setServerAcquisitionArrivalTimestamp(other.getServerAcquisitionArrivalTimestamp());
          }
          if (other.getAppStartMachTimestamp() != 0D) {
            setAppStartMachTimestamp(other.getAppStartMachTimestamp());
          }
          if (synchExchangesBuilder_ == null) {
            if (!other.synchExchanges_.isEmpty()) {
              if (synchExchanges_.isEmpty()) {
                synchExchanges_ = other.synchExchanges_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureSynchExchangesIsMutable();
                synchExchanges_.addAll(other.synchExchanges_);
              }
              onChanged();
            }
          } else {
            if (!other.synchExchanges_.isEmpty()) {
              if (synchExchangesBuilder_.isEmpty()) {
                synchExchangesBuilder_.dispose();
                synchExchangesBuilder_ = null;
                synchExchanges_ = other.synchExchanges_;
                bitField0_ = (bitField0_ & ~0x00000040);
                synchExchangesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSynchExchangesFieldBuilder() : null;
              } else {
                synchExchangesBuilder_.addAllMessages(other.synchExchanges_);
              }
            }
          }
          if (other.getBestLatency() != 0D) {
            setBestLatency(other.getBestLatency());
          }
          if (other.getBestOffset() != 0D) {
            setBestOffset(other.getBestOffset());
          }
          if (other.unit_ != 0) {
            setUnitValue(other.getUnitValue());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double packetStartOsTimestamp_ ;
        /**
         * <pre>
         * Start timestamp of the packet using the os clock (corresponding to first audio sample)
         * </pre>
         *
         * <code>double packet_start_os_timestamp = 1;</code>
         */
        public double getPacketStartOsTimestamp() {
          return packetStartOsTimestamp_;
        }
        /**
         * <pre>
         * Start timestamp of the packet using the os clock (corresponding to first audio sample)
         * </pre>
         *
         * <code>double packet_start_os_timestamp = 1;</code>
         */
        public Builder setPacketStartOsTimestamp(double value) {
          
          packetStartOsTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Start timestamp of the packet using the os clock (corresponding to first audio sample)
         * </pre>
         *
         * <code>double packet_start_os_timestamp = 1;</code>
         */
        public Builder clearPacketStartOsTimestamp() {
          
          packetStartOsTimestamp_ = 0D;
          onChanged();
          return this;
        }

        private double packetStartMachTimestamp_ ;
        /**
         * <pre>
         * Start timestamp of the packet using machine time (corresponding to the first audio sample)
         * </pre>
         *
         * <code>double packet_start_mach_timestamp = 2;</code>
         */
        public double getPacketStartMachTimestamp() {
          return packetStartMachTimestamp_;
        }
        /**
         * <pre>
         * Start timestamp of the packet using machine time (corresponding to the first audio sample)
         * </pre>
         *
         * <code>double packet_start_mach_timestamp = 2;</code>
         */
        public Builder setPacketStartMachTimestamp(double value) {
          
          packetStartMachTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Start timestamp of the packet using machine time (corresponding to the first audio sample)
         * </pre>
         *
         * <code>double packet_start_mach_timestamp = 2;</code>
         */
        public Builder clearPacketStartMachTimestamp() {
          
          packetStartMachTimestamp_ = 0D;
          onChanged();
          return this;
        }

        private double packetEndOsTimestamp_ ;
        /**
         * <pre>
         * End timestamp of the packet using the os clock (corresponding to the last audio sample)
         * </pre>
         *
         * <code>double packet_end_os_timestamp = 3;</code>
         */
        public double getPacketEndOsTimestamp() {
          return packetEndOsTimestamp_;
        }
        /**
         * <pre>
         * End timestamp of the packet using the os clock (corresponding to the last audio sample)
         * </pre>
         *
         * <code>double packet_end_os_timestamp = 3;</code>
         */
        public Builder setPacketEndOsTimestamp(double value) {
          
          packetEndOsTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * End timestamp of the packet using the os clock (corresponding to the last audio sample)
         * </pre>
         *
         * <code>double packet_end_os_timestamp = 3;</code>
         */
        public Builder clearPacketEndOsTimestamp() {
          
          packetEndOsTimestamp_ = 0D;
          onChanged();
          return this;
        }

        private double packetEndMachTimestamp_ ;
        /**
         * <pre>
         * End timestamp of the packet using machine time (corresponding to the last audio sample)
         * </pre>
         *
         * <code>double packet_end_mach_timestamp = 4;</code>
         */
        public double getPacketEndMachTimestamp() {
          return packetEndMachTimestamp_;
        }
        /**
         * <pre>
         * End timestamp of the packet using machine time (corresponding to the last audio sample)
         * </pre>
         *
         * <code>double packet_end_mach_timestamp = 4;</code>
         */
        public Builder setPacketEndMachTimestamp(double value) {
          
          packetEndMachTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * End timestamp of the packet using machine time (corresponding to the last audio sample)
         * </pre>
         *
         * <code>double packet_end_mach_timestamp = 4;</code>
         */
        public Builder clearPacketEndMachTimestamp() {
          
          packetEndMachTimestamp_ = 0D;
          onChanged();
          return this;
        }

        private double serverAcquisitionArrivalTimestamp_ ;
        /**
         * <pre>
         * Timestamp that the packet arrived at the acquisition server
         * </pre>
         *
         * <code>double server_acquisition_arrival_timestamp = 5;</code>
         */
        public double getServerAcquisitionArrivalTimestamp() {
          return serverAcquisitionArrivalTimestamp_;
        }
        /**
         * <pre>
         * Timestamp that the packet arrived at the acquisition server
         * </pre>
         *
         * <code>double server_acquisition_arrival_timestamp = 5;</code>
         */
        public Builder setServerAcquisitionArrivalTimestamp(double value) {
          
          serverAcquisitionArrivalTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Timestamp that the packet arrived at the acquisition server
         * </pre>
         *
         * <code>double server_acquisition_arrival_timestamp = 5;</code>
         */
        public Builder clearServerAcquisitionArrivalTimestamp() {
          
          serverAcquisitionArrivalTimestamp_ = 0D;
          onChanged();
          return this;
        }

        private double appStartMachTimestamp_ ;
        /**
         * <pre>
         * The start of the app as machine time
         * </pre>
         *
         * <code>double app_start_mach_timestamp = 6;</code>
         */
        public double getAppStartMachTimestamp() {
          return appStartMachTimestamp_;
        }
        /**
         * <pre>
         * The start of the app as machine time
         * </pre>
         *
         * <code>double app_start_mach_timestamp = 6;</code>
         */
        public Builder setAppStartMachTimestamp(double value) {
          
          appStartMachTimestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The start of the app as machine time
         * </pre>
         *
         * <code>double app_start_mach_timestamp = 6;</code>
         */
        public Builder clearAppStartMachTimestamp() {
          
          appStartMachTimestamp_ = 0D;
          onChanged();
          return this;
        }

        private java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> synchExchanges_ =
          java.util.Collections.emptyList();
        private void ensureSynchExchangesIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            synchExchanges_ = new java.util.ArrayList<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange>(synchExchanges_);
            bitField0_ |= 0x00000040;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> synchExchangesBuilder_;

        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> getSynchExchangesList() {
          if (synchExchangesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(synchExchanges_);
          } else {
            return synchExchangesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public int getSynchExchangesCount() {
          if (synchExchangesBuilder_ == null) {
            return synchExchanges_.size();
          } else {
            return synchExchangesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange getSynchExchanges(int index) {
          if (synchExchangesBuilder_ == null) {
            return synchExchanges_.get(index);
          } else {
            return synchExchangesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder setSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange value) {
          if (synchExchangesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSynchExchangesIsMutable();
            synchExchanges_.set(index, value);
            onChanged();
          } else {
            synchExchangesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder setSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder builderForValue) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.set(index, builderForValue.build());
            onChanged();
          } else {
            synchExchangesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange value) {
          if (synchExchangesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(value);
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange value) {
          if (synchExchangesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(index, value);
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder builderForValue) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(builderForValue.build());
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addSynchExchanges(
            int index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder builderForValue) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.add(index, builderForValue.build());
            onChanged();
          } else {
            synchExchangesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder addAllSynchExchanges(
            java.lang.Iterable<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange> values) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, synchExchanges_);
            onChanged();
          } else {
            synchExchangesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder clearSynchExchanges() {
          if (synchExchangesBuilder_ == null) {
            synchExchanges_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            synchExchangesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public Builder removeSynchExchanges(int index) {
          if (synchExchangesBuilder_ == null) {
            ensureSynchExchangesIsMutable();
            synchExchanges_.remove(index);
            onChanged();
          } else {
            synchExchangesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder getSynchExchangesBuilder(
            int index) {
          return getSynchExchangesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder getSynchExchangesOrBuilder(
            int index) {
          if (synchExchangesBuilder_ == null) {
            return synchExchanges_.get(index);  } else {
            return synchExchangesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public java.util.List<? extends io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
             getSynchExchangesOrBuilderList() {
          if (synchExchangesBuilder_ != null) {
            return synchExchangesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(synchExchanges_);
          }
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder addSynchExchangesBuilder() {
          return getSynchExchangesFieldBuilder().addBuilder(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance());
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder addSynchExchangesBuilder(
            int index) {
          return getSynchExchangesFieldBuilder().addBuilder(
              index, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.getDefaultInstance());
        }
        /**
         * <pre>
         * An array of synchronization params from the synch server
         * </pre>
         *
         * <code>repeated .redvox_api1000.RedvoxPacket1000.TimingInformation.SynchExchange synch_exchanges = 7;</code>
         */
        public java.util.List<io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder> 
             getSynchExchangesBuilderList() {
          return getSynchExchangesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder> 
            getSynchExchangesFieldBuilder() {
          if (synchExchangesBuilder_ == null) {
            synchExchangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchange.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.SynchExchangeOrBuilder>(
                    synchExchanges_,
                    ((bitField0_ & 0x00000040) == 0x00000040),
                    getParentForChildren(),
                    isClean());
            synchExchanges_ = null;
          }
          return synchExchangesBuilder_;
        }

        private double bestLatency_ ;
        /**
         * <pre>
         * The best latency as determined from the synch params
         * </pre>
         *
         * <code>double best_latency = 8;</code>
         */
        public double getBestLatency() {
          return bestLatency_;
        }
        /**
         * <pre>
         * The best latency as determined from the synch params
         * </pre>
         *
         * <code>double best_latency = 8;</code>
         */
        public Builder setBestLatency(double value) {
          
          bestLatency_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The best latency as determined from the synch params
         * </pre>
         *
         * <code>double best_latency = 8;</code>
         */
        public Builder clearBestLatency() {
          
          bestLatency_ = 0D;
          onChanged();
          return this;
        }

        private double bestOffset_ ;
        /**
         * <pre>
         * The best offset as determined from the synch params
         * </pre>
         *
         * <code>double best_offset = 9;</code>
         */
        public double getBestOffset() {
          return bestOffset_;
        }
        /**
         * <pre>
         * The best offset as determined from the synch params
         * </pre>
         *
         * <code>double best_offset = 9;</code>
         */
        public Builder setBestOffset(double value) {
          
          bestOffset_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The best offset as determined from the synch params
         * </pre>
         *
         * <code>double best_offset = 9;</code>
         */
        public Builder clearBestOffset() {
          
          bestOffset_ = 0D;
          onChanged();
          return this;
        }

        private int unit_ = 0;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
         */
        public int getUnitValue() {
          return unit_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
         */
        public Builder setUnitValue(int value) {
          unit_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.valueOf(unit_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.UNRECOGNIZED : result;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
         */
        public Builder setUnit(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          unit_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 10;</code>
         */
        public Builder clearUnit() {
          
          unit_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.TimingInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.TimingInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TimingInformation>
          PARSER = new com.google.protobuf.AbstractParser<TimingInformation>() {
        @java.lang.Override
        public TimingInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimingInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TimingInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TimingInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ServerInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.ServerInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The URL of the authentication server
       * </pre>
       *
       * <code>string auth_server_url = 1;</code>
       */
      java.lang.String getAuthServerUrl();
      /**
       * <pre>
       * The URL of the authentication server
       * </pre>
       *
       * <code>string auth_server_url = 1;</code>
       */
      com.google.protobuf.ByteString
          getAuthServerUrlBytes();

      /**
       * <pre>
       * The URL of the synch server
       * </pre>
       *
       * <code>string synch_server_url = 2;</code>
       */
      java.lang.String getSynchServerUrl();
      /**
       * <pre>
       * The URL of the synch server
       * </pre>
       *
       * <code>string synch_server_url = 2;</code>
       */
      com.google.protobuf.ByteString
          getSynchServerUrlBytes();

      /**
       * <pre>
       * The URL of the acquisition server
       * </pre>
       *
       * <code>string acquisition_server_url = 3;</code>
       */
      java.lang.String getAcquisitionServerUrl();
      /**
       * <pre>
       * The URL of the acquisition server
       * </pre>
       *
       * <code>string acquisition_server_url = 3;</code>
       */
      com.google.protobuf.ByteString
          getAcquisitionServerUrlBytes();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.ServerInformation}
     */
    public  static final class ServerInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.ServerInformation)
        ServerInformationOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ServerInformation.newBuilder() to construct.
      private ServerInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ServerInformation() {
        authServerUrl_ = "";
        synchServerUrl_ = "";
        acquisitionServerUrl_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ServerInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                authServerUrl_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                synchServerUrl_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                acquisitionServerUrl_ = s;
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000008;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder.class);
      }

      private int bitField0_;
      public static final int AUTH_SERVER_URL_FIELD_NUMBER = 1;
      private volatile java.lang.Object authServerUrl_;
      /**
       * <pre>
       * The URL of the authentication server
       * </pre>
       *
       * <code>string auth_server_url = 1;</code>
       */
      public java.lang.String getAuthServerUrl() {
        java.lang.Object ref = authServerUrl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authServerUrl_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The URL of the authentication server
       * </pre>
       *
       * <code>string auth_server_url = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAuthServerUrlBytes() {
        java.lang.Object ref = authServerUrl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authServerUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SYNCH_SERVER_URL_FIELD_NUMBER = 2;
      private volatile java.lang.Object synchServerUrl_;
      /**
       * <pre>
       * The URL of the synch server
       * </pre>
       *
       * <code>string synch_server_url = 2;</code>
       */
      public java.lang.String getSynchServerUrl() {
        java.lang.Object ref = synchServerUrl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          synchServerUrl_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The URL of the synch server
       * </pre>
       *
       * <code>string synch_server_url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSynchServerUrlBytes() {
        java.lang.Object ref = synchServerUrl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          synchServerUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ACQUISITION_SERVER_URL_FIELD_NUMBER = 3;
      private volatile java.lang.Object acquisitionServerUrl_;
      /**
       * <pre>
       * The URL of the acquisition server
       * </pre>
       *
       * <code>string acquisition_server_url = 3;</code>
       */
      public java.lang.String getAcquisitionServerUrl() {
        java.lang.Object ref = acquisitionServerUrl_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          acquisitionServerUrl_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The URL of the acquisition server
       * </pre>
       *
       * <code>string acquisition_server_url = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAcquisitionServerUrlBytes() {
        java.lang.Object ref = acquisitionServerUrl_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          acquisitionServerUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int METADATA_FIELD_NUMBER = 4;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getAuthServerUrlBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authServerUrl_);
        }
        if (!getSynchServerUrlBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, synchServerUrl_);
        }
        if (!getAcquisitionServerUrlBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, acquisitionServerUrl_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            4);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getAuthServerUrlBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authServerUrl_);
        }
        if (!getSynchServerUrlBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, synchServerUrl_);
        }
        if (!getAcquisitionServerUrlBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, acquisitionServerUrl_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation) obj;

        boolean result = true;
        result = result && getAuthServerUrl()
            .equals(other.getAuthServerUrl());
        result = result && getSynchServerUrl()
            .equals(other.getSynchServerUrl());
        result = result && getAcquisitionServerUrl()
            .equals(other.getAcquisitionServerUrl());
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + AUTH_SERVER_URL_FIELD_NUMBER;
        hash = (53 * hash) + getAuthServerUrl().hashCode();
        hash = (37 * hash) + SYNCH_SERVER_URL_FIELD_NUMBER;
        hash = (53 * hash) + getSynchServerUrl().hashCode();
        hash = (37 * hash) + ACQUISITION_SERVER_URL_FIELD_NUMBER;
        hash = (53 * hash) + getAcquisitionServerUrl().hashCode();
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.ServerInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.ServerInformation)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          authServerUrl_ = "";

          synchServerUrl_ = "";

          acquisitionServerUrl_ = "";

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.authServerUrl_ = authServerUrl_;
          result.synchServerUrl_ = synchServerUrl_;
          result.acquisitionServerUrl_ = acquisitionServerUrl_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.getDefaultInstance()) return this;
          if (!other.getAuthServerUrl().isEmpty()) {
            authServerUrl_ = other.authServerUrl_;
            onChanged();
          }
          if (!other.getSynchServerUrl().isEmpty()) {
            synchServerUrl_ = other.synchServerUrl_;
            onChanged();
          }
          if (!other.getAcquisitionServerUrl().isEmpty()) {
            acquisitionServerUrl_ = other.acquisitionServerUrl_;
            onChanged();
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object authServerUrl_ = "";
        /**
         * <pre>
         * The URL of the authentication server
         * </pre>
         *
         * <code>string auth_server_url = 1;</code>
         */
        public java.lang.String getAuthServerUrl() {
          java.lang.Object ref = authServerUrl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authServerUrl_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The URL of the authentication server
         * </pre>
         *
         * <code>string auth_server_url = 1;</code>
         */
        public com.google.protobuf.ByteString
            getAuthServerUrlBytes() {
          java.lang.Object ref = authServerUrl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The URL of the authentication server
         * </pre>
         *
         * <code>string auth_server_url = 1;</code>
         */
        public Builder setAuthServerUrl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authServerUrl_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The URL of the authentication server
         * </pre>
         *
         * <code>string auth_server_url = 1;</code>
         */
        public Builder clearAuthServerUrl() {
          
          authServerUrl_ = getDefaultInstance().getAuthServerUrl();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The URL of the authentication server
         * </pre>
         *
         * <code>string auth_server_url = 1;</code>
         */
        public Builder setAuthServerUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authServerUrl_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object synchServerUrl_ = "";
        /**
         * <pre>
         * The URL of the synch server
         * </pre>
         *
         * <code>string synch_server_url = 2;</code>
         */
        public java.lang.String getSynchServerUrl() {
          java.lang.Object ref = synchServerUrl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            synchServerUrl_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The URL of the synch server
         * </pre>
         *
         * <code>string synch_server_url = 2;</code>
         */
        public com.google.protobuf.ByteString
            getSynchServerUrlBytes() {
          java.lang.Object ref = synchServerUrl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            synchServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The URL of the synch server
         * </pre>
         *
         * <code>string synch_server_url = 2;</code>
         */
        public Builder setSynchServerUrl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          synchServerUrl_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The URL of the synch server
         * </pre>
         *
         * <code>string synch_server_url = 2;</code>
         */
        public Builder clearSynchServerUrl() {
          
          synchServerUrl_ = getDefaultInstance().getSynchServerUrl();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The URL of the synch server
         * </pre>
         *
         * <code>string synch_server_url = 2;</code>
         */
        public Builder setSynchServerUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          synchServerUrl_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object acquisitionServerUrl_ = "";
        /**
         * <pre>
         * The URL of the acquisition server
         * </pre>
         *
         * <code>string acquisition_server_url = 3;</code>
         */
        public java.lang.String getAcquisitionServerUrl() {
          java.lang.Object ref = acquisitionServerUrl_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            acquisitionServerUrl_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The URL of the acquisition server
         * </pre>
         *
         * <code>string acquisition_server_url = 3;</code>
         */
        public com.google.protobuf.ByteString
            getAcquisitionServerUrlBytes() {
          java.lang.Object ref = acquisitionServerUrl_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            acquisitionServerUrl_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The URL of the acquisition server
         * </pre>
         *
         * <code>string acquisition_server_url = 3;</code>
         */
        public Builder setAcquisitionServerUrl(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          acquisitionServerUrl_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The URL of the acquisition server
         * </pre>
         *
         * <code>string acquisition_server_url = 3;</code>
         */
        public Builder clearAcquisitionServerUrl() {
          
          acquisitionServerUrl_ = getDefaultInstance().getAcquisitionServerUrl();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The URL of the acquisition server
         * </pre>
         *
         * <code>string acquisition_server_url = 3;</code>
         */
        public Builder setAcquisitionServerUrlBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          acquisitionServerUrl_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.ServerInformation)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.ServerInformation)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ServerInformation>
          PARSER = new com.google.protobuf.AbstractParser<ServerInformation>() {
        @java.lang.Override
        public ServerInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ServerInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ServerInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ServerInformation> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SensorChannelsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The audio channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
       */
      boolean hasAudioChannel();
      /**
       * <pre>
       * The audio channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel getAudioChannel();
      /**
       * <pre>
       * The audio channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder getAudioChannelOrBuilder();

      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      boolean hasBarometerChannel();
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getBarometerChannel();
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getBarometerChannelOrBuilder();

      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      boolean hasLocationChannel();
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getLocationChannel();
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder getLocationChannelOrBuilder();

      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      boolean hasAccelerometerChannel();
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getAccelerometerChannel();
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getAccelerometerChannelOrBuilder();

      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      boolean hasGyroscopeChannel();
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getGyroscopeChannel();
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getGyroscopeChannelOrBuilder();

      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      boolean hasMagnetometerChannel();
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getMagnetometerChannel();
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getMagnetometerChannelOrBuilder();

      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      boolean hasLightChannel();
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getLightChannel();
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getLightChannelOrBuilder();

      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      boolean hasInfraredChannel();
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getInfraredChannel();
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getInfraredChannelOrBuilder();

      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      boolean hasImageChannel();
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getImageChannel();
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder getImageChannelOrBuilder();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels}
     */
    public  static final class SensorChannels extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels)
        SensorChannelsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SensorChannels.newBuilder() to construct.
      private SensorChannels(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SensorChannels() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SensorChannels(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder subBuilder = null;
                if (audioChannel_ != null) {
                  subBuilder = audioChannel_.toBuilder();
                }
                audioChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(audioChannel_);
                  audioChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder subBuilder = null;
                if (barometerChannel_ != null) {
                  subBuilder = barometerChannel_.toBuilder();
                }
                barometerChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(barometerChannel_);
                  barometerChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder subBuilder = null;
                if (locationChannel_ != null) {
                  subBuilder = locationChannel_.toBuilder();
                }
                locationChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(locationChannel_);
                  locationChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder subBuilder = null;
                if (accelerometerChannel_ != null) {
                  subBuilder = accelerometerChannel_.toBuilder();
                }
                accelerometerChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(accelerometerChannel_);
                  accelerometerChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder subBuilder = null;
                if (gyroscopeChannel_ != null) {
                  subBuilder = gyroscopeChannel_.toBuilder();
                }
                gyroscopeChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(gyroscopeChannel_);
                  gyroscopeChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder subBuilder = null;
                if (magnetometerChannel_ != null) {
                  subBuilder = magnetometerChannel_.toBuilder();
                }
                magnetometerChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(magnetometerChannel_);
                  magnetometerChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 58: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder subBuilder = null;
                if (lightChannel_ != null) {
                  subBuilder = lightChannel_.toBuilder();
                }
                lightChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lightChannel_);
                  lightChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 66: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder subBuilder = null;
                if (infraredChannel_ != null) {
                  subBuilder = infraredChannel_.toBuilder();
                }
                infraredChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(infraredChannel_);
                  infraredChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 74: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder subBuilder = null;
                if (imageChannel_ != null) {
                  subBuilder = imageChannel_.toBuilder();
                }
                imageChannel_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(imageChannel_);
                  imageChannel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 82: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000200;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder.class);
      }

      public interface AudioChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the audio sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the audio sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * Timestamp of the first audio sample
         * </pre>
         *
         * <code>double first_sample_timestamp = 2;</code>
         */
        double getFirstSampleTimestamp();

        /**
         * <pre>
         * Microphone sample rate in Hz
         * </pre>
         *
         * <code>double sample_rate_hz = 3;</code>
         */
        double getSampleRateHz();

        /**
         * <pre>
         * If audio data has been scrambled to remove voice
         * </pre>
         *
         * <code>bool is_scrambled = 4;</code>
         */
        boolean getIsScrambled();

        /**
         * <pre>
         * List of audio samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
         */
        boolean hasSamples();
        /**
         * <pre>
         * List of audio samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSamples();
        /**
         * <pre>
         * List of audio samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSamplesOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel}
       */
      public  static final class AudioChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel)
          AudioChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AudioChannel.newBuilder() to construct.
        private AudioChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AudioChannel() {
          sensorDescription_ = "";
          firstSampleTimestamp_ = 0D;
          sampleRateHz_ = 0D;
          isScrambled_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AudioChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  firstSampleTimestamp_ = input.readDouble();
                  break;
                }
                case 25: {

                  sampleRateHz_ = input.readDouble();
                  break;
                }
                case 32: {

                  isScrambled_ = input.readBool();
                  break;
                }
                case 42: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (samples_ != null) {
                    subBuilder = samples_.toBuilder();
                  }
                  samples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(samples_);
                    samples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000020;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 6:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the audio sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the audio sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FIRST_SAMPLE_TIMESTAMP_FIELD_NUMBER = 2;
        private double firstSampleTimestamp_;
        /**
         * <pre>
         * Timestamp of the first audio sample
         * </pre>
         *
         * <code>double first_sample_timestamp = 2;</code>
         */
        public double getFirstSampleTimestamp() {
          return firstSampleTimestamp_;
        }

        public static final int SAMPLE_RATE_HZ_FIELD_NUMBER = 3;
        private double sampleRateHz_;
        /**
         * <pre>
         * Microphone sample rate in Hz
         * </pre>
         *
         * <code>double sample_rate_hz = 3;</code>
         */
        public double getSampleRateHz() {
          return sampleRateHz_;
        }

        public static final int IS_SCRAMBLED_FIELD_NUMBER = 4;
        private boolean isScrambled_;
        /**
         * <pre>
         * If audio data has been scrambled to remove voice
         * </pre>
         *
         * <code>bool is_scrambled = 4;</code>
         */
        public boolean getIsScrambled() {
          return isScrambled_;
        }

        public static final int SAMPLES_FIELD_NUMBER = 5;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload samples_;
        /**
         * <pre>
         * List of audio samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
         */
        public boolean hasSamples() {
          return samples_ != null;
        }
        /**
         * <pre>
         * List of audio samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSamples() {
          return samples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : samples_;
        }
        /**
         * <pre>
         * List of audio samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSamplesOrBuilder() {
          return getSamples();
        }

        public static final int METADATA_FIELD_NUMBER = 6;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (firstSampleTimestamp_ != 0D) {
            output.writeDouble(2, firstSampleTimestamp_);
          }
          if (sampleRateHz_ != 0D) {
            output.writeDouble(3, sampleRateHz_);
          }
          if (isScrambled_ != false) {
            output.writeBool(4, isScrambled_);
          }
          if (samples_ != null) {
            output.writeMessage(5, getSamples());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              6);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (firstSampleTimestamp_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, firstSampleTimestamp_);
          }
          if (sampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, sampleRateHz_);
          }
          if (isScrambled_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(4, isScrambled_);
          }
          if (samples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getSamples());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getFirstSampleTimestamp())
              == java.lang.Double.doubleToLongBits(
                  other.getFirstSampleTimestamp()));
          result = result && (
              java.lang.Double.doubleToLongBits(getSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getSampleRateHz()));
          result = result && (getIsScrambled()
              == other.getIsScrambled());
          result = result && (hasSamples() == other.hasSamples());
          if (hasSamples()) {
            result = result && getSamples()
                .equals(other.getSamples());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + FIRST_SAMPLE_TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFirstSampleTimestamp()));
          hash = (37 * hash) + SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSampleRateHz()));
          hash = (37 * hash) + IS_SCRAMBLED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsScrambled());
          if (hasSamples()) {
            hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSamples().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 6:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 6:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            firstSampleTimestamp_ = 0D;

            sampleRateHz_ = 0D;

            isScrambled_ = false;

            if (samplesBuilder_ == null) {
              samples_ = null;
            } else {
              samples_ = null;
              samplesBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.firstSampleTimestamp_ = firstSampleTimestamp_;
            result.sampleRateHz_ = sampleRateHz_;
            result.isScrambled_ = isScrambled_;
            if (samplesBuilder_ == null) {
              result.samples_ = samples_;
            } else {
              result.samples_ = samplesBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getFirstSampleTimestamp() != 0D) {
              setFirstSampleTimestamp(other.getFirstSampleTimestamp());
            }
            if (other.getSampleRateHz() != 0D) {
              setSampleRateHz(other.getSampleRateHz());
            }
            if (other.getIsScrambled() != false) {
              setIsScrambled(other.getIsScrambled());
            }
            if (other.hasSamples()) {
              mergeSamples(other.getSamples());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the audio sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the audio sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the audio sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the audio sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the audio sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double firstSampleTimestamp_ ;
          /**
           * <pre>
           * Timestamp of the first audio sample
           * </pre>
           *
           * <code>double first_sample_timestamp = 2;</code>
           */
          public double getFirstSampleTimestamp() {
            return firstSampleTimestamp_;
          }
          /**
           * <pre>
           * Timestamp of the first audio sample
           * </pre>
           *
           * <code>double first_sample_timestamp = 2;</code>
           */
          public Builder setFirstSampleTimestamp(double value) {
            
            firstSampleTimestamp_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Timestamp of the first audio sample
           * </pre>
           *
           * <code>double first_sample_timestamp = 2;</code>
           */
          public Builder clearFirstSampleTimestamp() {
            
            firstSampleTimestamp_ = 0D;
            onChanged();
            return this;
          }

          private double sampleRateHz_ ;
          /**
           * <pre>
           * Microphone sample rate in Hz
           * </pre>
           *
           * <code>double sample_rate_hz = 3;</code>
           */
          public double getSampleRateHz() {
            return sampleRateHz_;
          }
          /**
           * <pre>
           * Microphone sample rate in Hz
           * </pre>
           *
           * <code>double sample_rate_hz = 3;</code>
           */
          public Builder setSampleRateHz(double value) {
            
            sampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Microphone sample rate in Hz
           * </pre>
           *
           * <code>double sample_rate_hz = 3;</code>
           */
          public Builder clearSampleRateHz() {
            
            sampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private boolean isScrambled_ ;
          /**
           * <pre>
           * If audio data has been scrambled to remove voice
           * </pre>
           *
           * <code>bool is_scrambled = 4;</code>
           */
          public boolean getIsScrambled() {
            return isScrambled_;
          }
          /**
           * <pre>
           * If audio data has been scrambled to remove voice
           * </pre>
           *
           * <code>bool is_scrambled = 4;</code>
           */
          public Builder setIsScrambled(boolean value) {
            
            isScrambled_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * If audio data has been scrambled to remove voice
           * </pre>
           *
           * <code>bool is_scrambled = 4;</code>
           */
          public Builder clearIsScrambled() {
            
            isScrambled_ = false;
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload samples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> samplesBuilder_;
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public boolean hasSamples() {
            return samplesBuilder_ != null || samples_ != null;
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSamples() {
            if (samplesBuilder_ == null) {
              return samples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : samples_;
            } else {
              return samplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public Builder setSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (samplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              samples_ = value;
              onChanged();
            } else {
              samplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public Builder setSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (samplesBuilder_ == null) {
              samples_ = builderForValue.build();
              onChanged();
            } else {
              samplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public Builder mergeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (samplesBuilder_ == null) {
              if (samples_ != null) {
                samples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(samples_).mergeFrom(value).buildPartial();
              } else {
                samples_ = value;
              }
              onChanged();
            } else {
              samplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public Builder clearSamples() {
            if (samplesBuilder_ == null) {
              samples_ = null;
              onChanged();
            } else {
              samples_ = null;
              samplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getSamplesBuilder() {
            
            onChanged();
            return getSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSamplesOrBuilder() {
            if (samplesBuilder_ != null) {
              return samplesBuilder_.getMessageOrBuilder();
            } else {
              return samples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : samples_;
            }
          }
          /**
           * <pre>
           * List of audio samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getSamplesFieldBuilder() {
            if (samplesBuilder_ == null) {
              samplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getSamples(),
                      getParentForChildren(),
                      isClean());
              samples_ = null;
            }
            return samplesBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AudioChannel>
            PARSER = new com.google.protobuf.AbstractParser<AudioChannel>() {
          @java.lang.Override
          public AudioChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AudioChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AudioChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AudioChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface SingleChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        boolean hasTimestamps();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
         */
        boolean hasSamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSamplesOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel}
       */
      public  static final class SingleChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
          SingleChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SingleChannel.newBuilder() to construct.
        private SingleChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SingleChannel() {
          sensorDescription_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SingleChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 18: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (timestamps_ != null) {
                    subBuilder = timestamps_.toBuilder();
                  }
                  timestamps_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(timestamps_);
                    timestamps_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (samples_ != null) {
                    subBuilder = samples_.toBuilder();
                  }
                  samples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(samples_);
                    samples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000008;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TIMESTAMPS_FIELD_NUMBER = 2;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload timestamps_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public boolean hasTimestamps() {
          return timestamps_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps() {
          return timestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder() {
          return getTimestamps();
        }

        public static final int SAMPLES_FIELD_NUMBER = 3;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload samples_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
         */
        public boolean hasSamples() {
          return samples_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSamples() {
          return samples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : samples_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSamplesOrBuilder() {
          return getSamples();
        }

        public static final int METADATA_FIELD_NUMBER = 4;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (timestamps_ != null) {
            output.writeMessage(2, getTimestamps());
          }
          if (samples_ != null) {
            output.writeMessage(3, getSamples());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              4);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (timestamps_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getTimestamps());
          }
          if (samples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getSamples());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (hasTimestamps() == other.hasTimestamps());
          if (hasTimestamps()) {
            result = result && getTimestamps()
                .equals(other.getTimestamps());
          }
          result = result && (hasSamples() == other.hasSamples());
          if (hasSamples()) {
            result = result && getSamples()
                .equals(other.getSamples());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          if (hasTimestamps()) {
            hash = (37 * hash) + TIMESTAMPS_FIELD_NUMBER;
            hash = (53 * hash) + getTimestamps().hashCode();
          }
          if (hasSamples()) {
            hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSamples().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 4:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 4:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            if (timestampsBuilder_ == null) {
              timestamps_ = null;
            } else {
              timestamps_ = null;
              timestampsBuilder_ = null;
            }
            if (samplesBuilder_ == null) {
              samples_ = null;
            } else {
              samples_ = null;
              samplesBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            if (timestampsBuilder_ == null) {
              result.timestamps_ = timestamps_;
            } else {
              result.timestamps_ = timestampsBuilder_.build();
            }
            if (samplesBuilder_ == null) {
              result.samples_ = samples_;
            } else {
              result.samples_ = samplesBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.hasTimestamps()) {
              mergeTimestamps(other.getTimestamps());
            }
            if (other.hasSamples()) {
              mergeSamples(other.getSamples());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload timestamps_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> timestampsBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public boolean hasTimestamps() {
            return timestampsBuilder_ != null || timestamps_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps() {
            if (timestampsBuilder_ == null) {
              return timestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
            } else {
              return timestampsBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder setTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (timestampsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              timestamps_ = value;
              onChanged();
            } else {
              timestampsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder setTimestamps(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (timestampsBuilder_ == null) {
              timestamps_ = builderForValue.build();
              onChanged();
            } else {
              timestampsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder mergeTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (timestampsBuilder_ == null) {
              if (timestamps_ != null) {
                timestamps_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(timestamps_).mergeFrom(value).buildPartial();
              } else {
                timestamps_ = value;
              }
              onChanged();
            } else {
              timestampsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder clearTimestamps() {
            if (timestampsBuilder_ == null) {
              timestamps_ = null;
              onChanged();
            } else {
              timestamps_ = null;
              timestampsBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getTimestampsBuilder() {
            
            onChanged();
            return getTimestampsFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder() {
            if (timestampsBuilder_ != null) {
              return timestampsBuilder_.getMessageOrBuilder();
            } else {
              return timestamps_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getTimestampsFieldBuilder() {
            if (timestampsBuilder_ == null) {
              timestampsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getTimestamps(),
                      getParentForChildren(),
                      isClean());
              timestamps_ = null;
            }
            return timestampsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload samples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> samplesBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public boolean hasSamples() {
            return samplesBuilder_ != null || samples_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSamples() {
            if (samplesBuilder_ == null) {
              return samples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : samples_;
            } else {
              return samplesBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public Builder setSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (samplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              samples_ = value;
              onChanged();
            } else {
              samplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public Builder setSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (samplesBuilder_ == null) {
              samples_ = builderForValue.build();
              onChanged();
            } else {
              samplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public Builder mergeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (samplesBuilder_ == null) {
              if (samples_ != null) {
                samples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(samples_).mergeFrom(value).buildPartial();
              } else {
                samples_ = value;
              }
              onChanged();
            } else {
              samplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public Builder clearSamples() {
            if (samplesBuilder_ == null) {
              samples_ = null;
              onChanged();
            } else {
              samples_ = null;
              samplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getSamplesBuilder() {
            
            onChanged();
            return getSamplesFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSamplesOrBuilder() {
            if (samplesBuilder_ != null) {
              return samplesBuilder_.getMessageOrBuilder();
            } else {
              return samples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : samples_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload samples = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getSamplesFieldBuilder() {
            if (samplesBuilder_ == null) {
              samplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getSamples(),
                      getParentForChildren(),
                      isClean());
              samples_ = null;
            }
            return samplesBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 4;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SingleChannel>
            PARSER = new com.google.protobuf.AbstractParser<SingleChannel>() {
          @java.lang.Override
          public SingleChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SingleChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SingleChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SingleChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface LocationChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        boolean hasTimestamps();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder();

        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
         */
        boolean hasLatitudeSamples();
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getLatitudeSamples();
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getLatitudeSamplesOrBuilder();

        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
         */
        boolean hasLongitudeSamples();
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getLongitudeSamples();
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getLongitudeSamplesOrBuilder();

        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
         */
        boolean hasAltitudeSamples();
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAltitudeSamples();
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAltitudeSamplesOrBuilder();

        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
         */
        boolean hasSpeedSamples();
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSpeedSamples();
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSpeedSamplesOrBuilder();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
         */
        boolean hasBearingSamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBearingSamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBearingSamplesOrBuilder();

        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
         */
        boolean hasHorizontalAccuracySamples();
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getHorizontalAccuracySamples();
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getHorizontalAccuracySamplesOrBuilder();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
         */
        boolean hasVerticalAccuracySamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getVerticalAccuracySamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getVerticalAccuracySamplesOrBuilder();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
         */
        boolean hasSpeedAccuracySamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSpeedAccuracySamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSpeedAccuracySamplesOrBuilder();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
         */
        boolean hasBearingAccuracySamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBearingAccuracySamples();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBearingAccuracySamplesOrBuilder();

        /**
         * <pre>
         * Have location permissions been granted by the user?
         * </pre>
         *
         * <code>bool location_permissions_granted = 12;</code>
         */
        boolean getLocationPermissionsGranted();

        /**
         * <pre>
         * Has location services been requested by the user?
         * </pre>
         *
         * <code>bool location_services_requested = 13;</code>
         */
        boolean getLocationServicesRequested();

        /**
         * <pre>
         * Are location services enabled and working?
         * </pre>
         *
         * <code>bool location_services_enabled = 14;</code>
         */
        boolean getLocationServicesEnabled();

        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
         */
        int getLocationProviderValue();
        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider getLocationProvider();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel}
       */
      public  static final class LocationChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
          LocationChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use LocationChannel.newBuilder() to construct.
        private LocationChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private LocationChannel() {
          sensorDescription_ = "";
          locationPermissionsGranted_ = false;
          locationServicesRequested_ = false;
          locationServicesEnabled_ = false;
          locationProvider_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private LocationChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 18: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (timestamps_ != null) {
                    subBuilder = timestamps_.toBuilder();
                  }
                  timestamps_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(timestamps_);
                    timestamps_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (latitudeSamples_ != null) {
                    subBuilder = latitudeSamples_.toBuilder();
                  }
                  latitudeSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(latitudeSamples_);
                    latitudeSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (longitudeSamples_ != null) {
                    subBuilder = longitudeSamples_.toBuilder();
                  }
                  longitudeSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(longitudeSamples_);
                    longitudeSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (altitudeSamples_ != null) {
                    subBuilder = altitudeSamples_.toBuilder();
                  }
                  altitudeSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(altitudeSamples_);
                    altitudeSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (speedSamples_ != null) {
                    subBuilder = speedSamples_.toBuilder();
                  }
                  speedSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(speedSamples_);
                    speedSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (bearingSamples_ != null) {
                    subBuilder = bearingSamples_.toBuilder();
                  }
                  bearingSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(bearingSamples_);
                    bearingSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (horizontalAccuracySamples_ != null) {
                    subBuilder = horizontalAccuracySamples_.toBuilder();
                  }
                  horizontalAccuracySamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(horizontalAccuracySamples_);
                    horizontalAccuracySamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 74: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (verticalAccuracySamples_ != null) {
                    subBuilder = verticalAccuracySamples_.toBuilder();
                  }
                  verticalAccuracySamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(verticalAccuracySamples_);
                    verticalAccuracySamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (speedAccuracySamples_ != null) {
                    subBuilder = speedAccuracySamples_.toBuilder();
                  }
                  speedAccuracySamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(speedAccuracySamples_);
                    speedAccuracySamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (bearingAccuracySamples_ != null) {
                    subBuilder = bearingAccuracySamples_.toBuilder();
                  }
                  bearingAccuracySamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(bearingAccuracySamples_);
                    bearingAccuracySamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 96: {

                  locationPermissionsGranted_ = input.readBool();
                  break;
                }
                case 104: {

                  locationServicesRequested_ = input.readBool();
                  break;
                }
                case 112: {

                  locationServicesEnabled_ = input.readBool();
                  break;
                }
                case 120: {
                  int rawValue = input.readEnum();

                  locationProvider_ = rawValue;
                  break;
                }
                case 210: {
                  if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00008000;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 26:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder.class);
        }

        /**
         * Protobuf enum {@code redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider}
         */
        public enum LocationProvider
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>NONE = 0;</code>
           */
          NONE(0),
          /**
           * <code>USER = 1;</code>
           */
          USER(1),
          /**
           * <code>GPS = 2;</code>
           */
          GPS(2),
          /**
           * <code>NETWORK = 3;</code>
           */
          NETWORK(3),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>NONE = 0;</code>
           */
          public static final int NONE_VALUE = 0;
          /**
           * <code>USER = 1;</code>
           */
          public static final int USER_VALUE = 1;
          /**
           * <code>GPS = 2;</code>
           */
          public static final int GPS_VALUE = 2;
          /**
           * <code>NETWORK = 3;</code>
           */
          public static final int NETWORK_VALUE = 3;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static LocationProvider valueOf(int value) {
            return forNumber(value);
          }

          public static LocationProvider forNumber(int value) {
            switch (value) {
              case 0: return NONE;
              case 1: return USER;
              case 2: return GPS;
              case 3: return NETWORK;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<LocationProvider>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              LocationProvider> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<LocationProvider>() {
                  public LocationProvider findValueByNumber(int number) {
                    return LocationProvider.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDescriptor().getEnumTypes().get(0);
          }

          private static final LocationProvider[] VALUES = values();

          public static LocationProvider valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private LocationProvider(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider)
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TIMESTAMPS_FIELD_NUMBER = 2;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload timestamps_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public boolean hasTimestamps() {
          return timestamps_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps() {
          return timestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder() {
          return getTimestamps();
        }

        public static final int LATITUDE_SAMPLES_FIELD_NUMBER = 3;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload latitudeSamples_;
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
         */
        public boolean hasLatitudeSamples() {
          return latitudeSamples_ != null;
        }
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getLatitudeSamples() {
          return latitudeSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : latitudeSamples_;
        }
        /**
         * <pre>
         * A list of latitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getLatitudeSamplesOrBuilder() {
          return getLatitudeSamples();
        }

        public static final int LONGITUDE_SAMPLES_FIELD_NUMBER = 4;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload longitudeSamples_;
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
         */
        public boolean hasLongitudeSamples() {
          return longitudeSamples_ != null;
        }
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getLongitudeSamples() {
          return longitudeSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : longitudeSamples_;
        }
        /**
         * <pre>
         * A list of longitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getLongitudeSamplesOrBuilder() {
          return getLongitudeSamples();
        }

        public static final int ALTITUDE_SAMPLES_FIELD_NUMBER = 5;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload altitudeSamples_;
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
         */
        public boolean hasAltitudeSamples() {
          return altitudeSamples_ != null;
        }
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAltitudeSamples() {
          return altitudeSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : altitudeSamples_;
        }
        /**
         * <pre>
         * A list of altitude samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAltitudeSamplesOrBuilder() {
          return getAltitudeSamples();
        }

        public static final int SPEED_SAMPLES_FIELD_NUMBER = 6;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload speedSamples_;
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
         */
        public boolean hasSpeedSamples() {
          return speedSamples_ != null;
        }
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSpeedSamples() {
          return speedSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : speedSamples_;
        }
        /**
         * <pre>
         * A list of speed samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSpeedSamplesOrBuilder() {
          return getSpeedSamples();
        }

        public static final int BEARING_SAMPLES_FIELD_NUMBER = 7;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload bearingSamples_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
         */
        public boolean hasBearingSamples() {
          return bearingSamples_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBearingSamples() {
          return bearingSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : bearingSamples_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBearingSamplesOrBuilder() {
          return getBearingSamples();
        }

        public static final int HORIZONTAL_ACCURACY_SAMPLES_FIELD_NUMBER = 8;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload horizontalAccuracySamples_;
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
         */
        public boolean hasHorizontalAccuracySamples() {
          return horizontalAccuracySamples_ != null;
        }
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getHorizontalAccuracySamples() {
          return horizontalAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : horizontalAccuracySamples_;
        }
        /**
         * <pre>
         * A list of accuracy samples
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getHorizontalAccuracySamplesOrBuilder() {
          return getHorizontalAccuracySamples();
        }

        public static final int VERTICAL_ACCURACY_SAMPLES_FIELD_NUMBER = 9;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload verticalAccuracySamples_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
         */
        public boolean hasVerticalAccuracySamples() {
          return verticalAccuracySamples_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getVerticalAccuracySamples() {
          return verticalAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : verticalAccuracySamples_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getVerticalAccuracySamplesOrBuilder() {
          return getVerticalAccuracySamples();
        }

        public static final int SPEED_ACCURACY_SAMPLES_FIELD_NUMBER = 10;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload speedAccuracySamples_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
         */
        public boolean hasSpeedAccuracySamples() {
          return speedAccuracySamples_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSpeedAccuracySamples() {
          return speedAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : speedAccuracySamples_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSpeedAccuracySamplesOrBuilder() {
          return getSpeedAccuracySamples();
        }

        public static final int BEARING_ACCURACY_SAMPLES_FIELD_NUMBER = 11;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload bearingAccuracySamples_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
         */
        public boolean hasBearingAccuracySamples() {
          return bearingAccuracySamples_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBearingAccuracySamples() {
          return bearingAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : bearingAccuracySamples_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBearingAccuracySamplesOrBuilder() {
          return getBearingAccuracySamples();
        }

        public static final int LOCATION_PERMISSIONS_GRANTED_FIELD_NUMBER = 12;
        private boolean locationPermissionsGranted_;
        /**
         * <pre>
         * Have location permissions been granted by the user?
         * </pre>
         *
         * <code>bool location_permissions_granted = 12;</code>
         */
        public boolean getLocationPermissionsGranted() {
          return locationPermissionsGranted_;
        }

        public static final int LOCATION_SERVICES_REQUESTED_FIELD_NUMBER = 13;
        private boolean locationServicesRequested_;
        /**
         * <pre>
         * Has location services been requested by the user?
         * </pre>
         *
         * <code>bool location_services_requested = 13;</code>
         */
        public boolean getLocationServicesRequested() {
          return locationServicesRequested_;
        }

        public static final int LOCATION_SERVICES_ENABLED_FIELD_NUMBER = 14;
        private boolean locationServicesEnabled_;
        /**
         * <pre>
         * Are location services enabled and working?
         * </pre>
         *
         * <code>bool location_services_enabled = 14;</code>
         */
        public boolean getLocationServicesEnabled() {
          return locationServicesEnabled_;
        }

        public static final int LOCATION_PROVIDER_FIELD_NUMBER = 15;
        private int locationProvider_;
        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
         */
        public int getLocationProviderValue() {
          return locationProvider_;
        }
        /**
         * <pre>
         * Location provider enumeration
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider getLocationProvider() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.valueOf(locationProvider_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.UNRECOGNIZED : result;
        }

        public static final int METADATA_FIELD_NUMBER = 26;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 26;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (timestamps_ != null) {
            output.writeMessage(2, getTimestamps());
          }
          if (latitudeSamples_ != null) {
            output.writeMessage(3, getLatitudeSamples());
          }
          if (longitudeSamples_ != null) {
            output.writeMessage(4, getLongitudeSamples());
          }
          if (altitudeSamples_ != null) {
            output.writeMessage(5, getAltitudeSamples());
          }
          if (speedSamples_ != null) {
            output.writeMessage(6, getSpeedSamples());
          }
          if (bearingSamples_ != null) {
            output.writeMessage(7, getBearingSamples());
          }
          if (horizontalAccuracySamples_ != null) {
            output.writeMessage(8, getHorizontalAccuracySamples());
          }
          if (verticalAccuracySamples_ != null) {
            output.writeMessage(9, getVerticalAccuracySamples());
          }
          if (speedAccuracySamples_ != null) {
            output.writeMessage(10, getSpeedAccuracySamples());
          }
          if (bearingAccuracySamples_ != null) {
            output.writeMessage(11, getBearingAccuracySamples());
          }
          if (locationPermissionsGranted_ != false) {
            output.writeBool(12, locationPermissionsGranted_);
          }
          if (locationServicesRequested_ != false) {
            output.writeBool(13, locationServicesRequested_);
          }
          if (locationServicesEnabled_ != false) {
            output.writeBool(14, locationServicesEnabled_);
          }
          if (locationProvider_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.NONE.getNumber()) {
            output.writeEnum(15, locationProvider_);
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              26);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (timestamps_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getTimestamps());
          }
          if (latitudeSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getLatitudeSamples());
          }
          if (longitudeSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getLongitudeSamples());
          }
          if (altitudeSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getAltitudeSamples());
          }
          if (speedSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getSpeedSamples());
          }
          if (bearingSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getBearingSamples());
          }
          if (horizontalAccuracySamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getHorizontalAccuracySamples());
          }
          if (verticalAccuracySamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getVerticalAccuracySamples());
          }
          if (speedAccuracySamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getSpeedAccuracySamples());
          }
          if (bearingAccuracySamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getBearingAccuracySamples());
          }
          if (locationPermissionsGranted_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(12, locationPermissionsGranted_);
          }
          if (locationServicesRequested_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(13, locationServicesRequested_);
          }
          if (locationServicesEnabled_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(14, locationServicesEnabled_);
          }
          if (locationProvider_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.NONE.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(15, locationProvider_);
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(26, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (hasTimestamps() == other.hasTimestamps());
          if (hasTimestamps()) {
            result = result && getTimestamps()
                .equals(other.getTimestamps());
          }
          result = result && (hasLatitudeSamples() == other.hasLatitudeSamples());
          if (hasLatitudeSamples()) {
            result = result && getLatitudeSamples()
                .equals(other.getLatitudeSamples());
          }
          result = result && (hasLongitudeSamples() == other.hasLongitudeSamples());
          if (hasLongitudeSamples()) {
            result = result && getLongitudeSamples()
                .equals(other.getLongitudeSamples());
          }
          result = result && (hasAltitudeSamples() == other.hasAltitudeSamples());
          if (hasAltitudeSamples()) {
            result = result && getAltitudeSamples()
                .equals(other.getAltitudeSamples());
          }
          result = result && (hasSpeedSamples() == other.hasSpeedSamples());
          if (hasSpeedSamples()) {
            result = result && getSpeedSamples()
                .equals(other.getSpeedSamples());
          }
          result = result && (hasBearingSamples() == other.hasBearingSamples());
          if (hasBearingSamples()) {
            result = result && getBearingSamples()
                .equals(other.getBearingSamples());
          }
          result = result && (hasHorizontalAccuracySamples() == other.hasHorizontalAccuracySamples());
          if (hasHorizontalAccuracySamples()) {
            result = result && getHorizontalAccuracySamples()
                .equals(other.getHorizontalAccuracySamples());
          }
          result = result && (hasVerticalAccuracySamples() == other.hasVerticalAccuracySamples());
          if (hasVerticalAccuracySamples()) {
            result = result && getVerticalAccuracySamples()
                .equals(other.getVerticalAccuracySamples());
          }
          result = result && (hasSpeedAccuracySamples() == other.hasSpeedAccuracySamples());
          if (hasSpeedAccuracySamples()) {
            result = result && getSpeedAccuracySamples()
                .equals(other.getSpeedAccuracySamples());
          }
          result = result && (hasBearingAccuracySamples() == other.hasBearingAccuracySamples());
          if (hasBearingAccuracySamples()) {
            result = result && getBearingAccuracySamples()
                .equals(other.getBearingAccuracySamples());
          }
          result = result && (getLocationPermissionsGranted()
              == other.getLocationPermissionsGranted());
          result = result && (getLocationServicesRequested()
              == other.getLocationServicesRequested());
          result = result && (getLocationServicesEnabled()
              == other.getLocationServicesEnabled());
          result = result && locationProvider_ == other.locationProvider_;
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          if (hasTimestamps()) {
            hash = (37 * hash) + TIMESTAMPS_FIELD_NUMBER;
            hash = (53 * hash) + getTimestamps().hashCode();
          }
          if (hasLatitudeSamples()) {
            hash = (37 * hash) + LATITUDE_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getLatitudeSamples().hashCode();
          }
          if (hasLongitudeSamples()) {
            hash = (37 * hash) + LONGITUDE_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getLongitudeSamples().hashCode();
          }
          if (hasAltitudeSamples()) {
            hash = (37 * hash) + ALTITUDE_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getAltitudeSamples().hashCode();
          }
          if (hasSpeedSamples()) {
            hash = (37 * hash) + SPEED_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSpeedSamples().hashCode();
          }
          if (hasBearingSamples()) {
            hash = (37 * hash) + BEARING_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getBearingSamples().hashCode();
          }
          if (hasHorizontalAccuracySamples()) {
            hash = (37 * hash) + HORIZONTAL_ACCURACY_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getHorizontalAccuracySamples().hashCode();
          }
          if (hasVerticalAccuracySamples()) {
            hash = (37 * hash) + VERTICAL_ACCURACY_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getVerticalAccuracySamples().hashCode();
          }
          if (hasSpeedAccuracySamples()) {
            hash = (37 * hash) + SPEED_ACCURACY_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSpeedAccuracySamples().hashCode();
          }
          if (hasBearingAccuracySamples()) {
            hash = (37 * hash) + BEARING_ACCURACY_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getBearingAccuracySamples().hashCode();
          }
          hash = (37 * hash) + LOCATION_PERMISSIONS_GRANTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLocationPermissionsGranted());
          hash = (37 * hash) + LOCATION_SERVICES_REQUESTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLocationServicesRequested());
          hash = (37 * hash) + LOCATION_SERVICES_ENABLED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLocationServicesEnabled());
          hash = (37 * hash) + LOCATION_PROVIDER_FIELD_NUMBER;
          hash = (53 * hash) + locationProvider_;
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 26:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 26:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            if (timestampsBuilder_ == null) {
              timestamps_ = null;
            } else {
              timestamps_ = null;
              timestampsBuilder_ = null;
            }
            if (latitudeSamplesBuilder_ == null) {
              latitudeSamples_ = null;
            } else {
              latitudeSamples_ = null;
              latitudeSamplesBuilder_ = null;
            }
            if (longitudeSamplesBuilder_ == null) {
              longitudeSamples_ = null;
            } else {
              longitudeSamples_ = null;
              longitudeSamplesBuilder_ = null;
            }
            if (altitudeSamplesBuilder_ == null) {
              altitudeSamples_ = null;
            } else {
              altitudeSamples_ = null;
              altitudeSamplesBuilder_ = null;
            }
            if (speedSamplesBuilder_ == null) {
              speedSamples_ = null;
            } else {
              speedSamples_ = null;
              speedSamplesBuilder_ = null;
            }
            if (bearingSamplesBuilder_ == null) {
              bearingSamples_ = null;
            } else {
              bearingSamples_ = null;
              bearingSamplesBuilder_ = null;
            }
            if (horizontalAccuracySamplesBuilder_ == null) {
              horizontalAccuracySamples_ = null;
            } else {
              horizontalAccuracySamples_ = null;
              horizontalAccuracySamplesBuilder_ = null;
            }
            if (verticalAccuracySamplesBuilder_ == null) {
              verticalAccuracySamples_ = null;
            } else {
              verticalAccuracySamples_ = null;
              verticalAccuracySamplesBuilder_ = null;
            }
            if (speedAccuracySamplesBuilder_ == null) {
              speedAccuracySamples_ = null;
            } else {
              speedAccuracySamples_ = null;
              speedAccuracySamplesBuilder_ = null;
            }
            if (bearingAccuracySamplesBuilder_ == null) {
              bearingAccuracySamples_ = null;
            } else {
              bearingAccuracySamples_ = null;
              bearingAccuracySamplesBuilder_ = null;
            }
            locationPermissionsGranted_ = false;

            locationServicesRequested_ = false;

            locationServicesEnabled_ = false;

            locationProvider_ = 0;

            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            if (timestampsBuilder_ == null) {
              result.timestamps_ = timestamps_;
            } else {
              result.timestamps_ = timestampsBuilder_.build();
            }
            if (latitudeSamplesBuilder_ == null) {
              result.latitudeSamples_ = latitudeSamples_;
            } else {
              result.latitudeSamples_ = latitudeSamplesBuilder_.build();
            }
            if (longitudeSamplesBuilder_ == null) {
              result.longitudeSamples_ = longitudeSamples_;
            } else {
              result.longitudeSamples_ = longitudeSamplesBuilder_.build();
            }
            if (altitudeSamplesBuilder_ == null) {
              result.altitudeSamples_ = altitudeSamples_;
            } else {
              result.altitudeSamples_ = altitudeSamplesBuilder_.build();
            }
            if (speedSamplesBuilder_ == null) {
              result.speedSamples_ = speedSamples_;
            } else {
              result.speedSamples_ = speedSamplesBuilder_.build();
            }
            if (bearingSamplesBuilder_ == null) {
              result.bearingSamples_ = bearingSamples_;
            } else {
              result.bearingSamples_ = bearingSamplesBuilder_.build();
            }
            if (horizontalAccuracySamplesBuilder_ == null) {
              result.horizontalAccuracySamples_ = horizontalAccuracySamples_;
            } else {
              result.horizontalAccuracySamples_ = horizontalAccuracySamplesBuilder_.build();
            }
            if (verticalAccuracySamplesBuilder_ == null) {
              result.verticalAccuracySamples_ = verticalAccuracySamples_;
            } else {
              result.verticalAccuracySamples_ = verticalAccuracySamplesBuilder_.build();
            }
            if (speedAccuracySamplesBuilder_ == null) {
              result.speedAccuracySamples_ = speedAccuracySamples_;
            } else {
              result.speedAccuracySamples_ = speedAccuracySamplesBuilder_.build();
            }
            if (bearingAccuracySamplesBuilder_ == null) {
              result.bearingAccuracySamples_ = bearingAccuracySamples_;
            } else {
              result.bearingAccuracySamples_ = bearingAccuracySamplesBuilder_.build();
            }
            result.locationPermissionsGranted_ = locationPermissionsGranted_;
            result.locationServicesRequested_ = locationServicesRequested_;
            result.locationServicesEnabled_ = locationServicesEnabled_;
            result.locationProvider_ = locationProvider_;
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.hasTimestamps()) {
              mergeTimestamps(other.getTimestamps());
            }
            if (other.hasLatitudeSamples()) {
              mergeLatitudeSamples(other.getLatitudeSamples());
            }
            if (other.hasLongitudeSamples()) {
              mergeLongitudeSamples(other.getLongitudeSamples());
            }
            if (other.hasAltitudeSamples()) {
              mergeAltitudeSamples(other.getAltitudeSamples());
            }
            if (other.hasSpeedSamples()) {
              mergeSpeedSamples(other.getSpeedSamples());
            }
            if (other.hasBearingSamples()) {
              mergeBearingSamples(other.getBearingSamples());
            }
            if (other.hasHorizontalAccuracySamples()) {
              mergeHorizontalAccuracySamples(other.getHorizontalAccuracySamples());
            }
            if (other.hasVerticalAccuracySamples()) {
              mergeVerticalAccuracySamples(other.getVerticalAccuracySamples());
            }
            if (other.hasSpeedAccuracySamples()) {
              mergeSpeedAccuracySamples(other.getSpeedAccuracySamples());
            }
            if (other.hasBearingAccuracySamples()) {
              mergeBearingAccuracySamples(other.getBearingAccuracySamples());
            }
            if (other.getLocationPermissionsGranted() != false) {
              setLocationPermissionsGranted(other.getLocationPermissionsGranted());
            }
            if (other.getLocationServicesRequested() != false) {
              setLocationServicesRequested(other.getLocationServicesRequested());
            }
            if (other.getLocationServicesEnabled() != false) {
              setLocationServicesEnabled(other.getLocationServicesEnabled());
            }
            if (other.locationProvider_ != 0) {
              setLocationProviderValue(other.getLocationProviderValue());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload timestamps_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> timestampsBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public boolean hasTimestamps() {
            return timestampsBuilder_ != null || timestamps_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps() {
            if (timestampsBuilder_ == null) {
              return timestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
            } else {
              return timestampsBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder setTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (timestampsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              timestamps_ = value;
              onChanged();
            } else {
              timestampsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder setTimestamps(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (timestampsBuilder_ == null) {
              timestamps_ = builderForValue.build();
              onChanged();
            } else {
              timestampsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder mergeTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (timestampsBuilder_ == null) {
              if (timestamps_ != null) {
                timestamps_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(timestamps_).mergeFrom(value).buildPartial();
              } else {
                timestamps_ = value;
              }
              onChanged();
            } else {
              timestampsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder clearTimestamps() {
            if (timestampsBuilder_ == null) {
              timestamps_ = null;
              onChanged();
            } else {
              timestamps_ = null;
              timestampsBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getTimestampsBuilder() {
            
            onChanged();
            return getTimestampsFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder() {
            if (timestampsBuilder_ != null) {
              return timestampsBuilder_.getMessageOrBuilder();
            } else {
              return timestamps_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getTimestampsFieldBuilder() {
            if (timestampsBuilder_ == null) {
              timestampsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getTimestamps(),
                      getParentForChildren(),
                      isClean());
              timestamps_ = null;
            }
            return timestampsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload latitudeSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> latitudeSamplesBuilder_;
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public boolean hasLatitudeSamples() {
            return latitudeSamplesBuilder_ != null || latitudeSamples_ != null;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getLatitudeSamples() {
            if (latitudeSamplesBuilder_ == null) {
              return latitudeSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : latitudeSamples_;
            } else {
              return latitudeSamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public Builder setLatitudeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (latitudeSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              latitudeSamples_ = value;
              onChanged();
            } else {
              latitudeSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public Builder setLatitudeSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (latitudeSamplesBuilder_ == null) {
              latitudeSamples_ = builderForValue.build();
              onChanged();
            } else {
              latitudeSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public Builder mergeLatitudeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (latitudeSamplesBuilder_ == null) {
              if (latitudeSamples_ != null) {
                latitudeSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(latitudeSamples_).mergeFrom(value).buildPartial();
              } else {
                latitudeSamples_ = value;
              }
              onChanged();
            } else {
              latitudeSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public Builder clearLatitudeSamples() {
            if (latitudeSamplesBuilder_ == null) {
              latitudeSamples_ = null;
              onChanged();
            } else {
              latitudeSamples_ = null;
              latitudeSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getLatitudeSamplesBuilder() {
            
            onChanged();
            return getLatitudeSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getLatitudeSamplesOrBuilder() {
            if (latitudeSamplesBuilder_ != null) {
              return latitudeSamplesBuilder_.getMessageOrBuilder();
            } else {
              return latitudeSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : latitudeSamples_;
            }
          }
          /**
           * <pre>
           * A list of latitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload latitude_samples = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getLatitudeSamplesFieldBuilder() {
            if (latitudeSamplesBuilder_ == null) {
              latitudeSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getLatitudeSamples(),
                      getParentForChildren(),
                      isClean());
              latitudeSamples_ = null;
            }
            return latitudeSamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload longitudeSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> longitudeSamplesBuilder_;
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public boolean hasLongitudeSamples() {
            return longitudeSamplesBuilder_ != null || longitudeSamples_ != null;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getLongitudeSamples() {
            if (longitudeSamplesBuilder_ == null) {
              return longitudeSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : longitudeSamples_;
            } else {
              return longitudeSamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public Builder setLongitudeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (longitudeSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              longitudeSamples_ = value;
              onChanged();
            } else {
              longitudeSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public Builder setLongitudeSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (longitudeSamplesBuilder_ == null) {
              longitudeSamples_ = builderForValue.build();
              onChanged();
            } else {
              longitudeSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public Builder mergeLongitudeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (longitudeSamplesBuilder_ == null) {
              if (longitudeSamples_ != null) {
                longitudeSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(longitudeSamples_).mergeFrom(value).buildPartial();
              } else {
                longitudeSamples_ = value;
              }
              onChanged();
            } else {
              longitudeSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public Builder clearLongitudeSamples() {
            if (longitudeSamplesBuilder_ == null) {
              longitudeSamples_ = null;
              onChanged();
            } else {
              longitudeSamples_ = null;
              longitudeSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getLongitudeSamplesBuilder() {
            
            onChanged();
            return getLongitudeSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getLongitudeSamplesOrBuilder() {
            if (longitudeSamplesBuilder_ != null) {
              return longitudeSamplesBuilder_.getMessageOrBuilder();
            } else {
              return longitudeSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : longitudeSamples_;
            }
          }
          /**
           * <pre>
           * A list of longitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload longitude_samples = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getLongitudeSamplesFieldBuilder() {
            if (longitudeSamplesBuilder_ == null) {
              longitudeSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getLongitudeSamples(),
                      getParentForChildren(),
                      isClean());
              longitudeSamples_ = null;
            }
            return longitudeSamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload altitudeSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> altitudeSamplesBuilder_;
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public boolean hasAltitudeSamples() {
            return altitudeSamplesBuilder_ != null || altitudeSamples_ != null;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getAltitudeSamples() {
            if (altitudeSamplesBuilder_ == null) {
              return altitudeSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : altitudeSamples_;
            } else {
              return altitudeSamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public Builder setAltitudeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (altitudeSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              altitudeSamples_ = value;
              onChanged();
            } else {
              altitudeSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public Builder setAltitudeSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (altitudeSamplesBuilder_ == null) {
              altitudeSamples_ = builderForValue.build();
              onChanged();
            } else {
              altitudeSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public Builder mergeAltitudeSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (altitudeSamplesBuilder_ == null) {
              if (altitudeSamples_ != null) {
                altitudeSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(altitudeSamples_).mergeFrom(value).buildPartial();
              } else {
                altitudeSamples_ = value;
              }
              onChanged();
            } else {
              altitudeSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public Builder clearAltitudeSamples() {
            if (altitudeSamplesBuilder_ == null) {
              altitudeSamples_ = null;
              onChanged();
            } else {
              altitudeSamples_ = null;
              altitudeSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getAltitudeSamplesBuilder() {
            
            onChanged();
            return getAltitudeSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getAltitudeSamplesOrBuilder() {
            if (altitudeSamplesBuilder_ != null) {
              return altitudeSamplesBuilder_.getMessageOrBuilder();
            } else {
              return altitudeSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : altitudeSamples_;
            }
          }
          /**
           * <pre>
           * A list of altitude samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload altitude_samples = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getAltitudeSamplesFieldBuilder() {
            if (altitudeSamplesBuilder_ == null) {
              altitudeSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getAltitudeSamples(),
                      getParentForChildren(),
                      isClean());
              altitudeSamples_ = null;
            }
            return altitudeSamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload speedSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> speedSamplesBuilder_;
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public boolean hasSpeedSamples() {
            return speedSamplesBuilder_ != null || speedSamples_ != null;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSpeedSamples() {
            if (speedSamplesBuilder_ == null) {
              return speedSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : speedSamples_;
            } else {
              return speedSamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public Builder setSpeedSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (speedSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              speedSamples_ = value;
              onChanged();
            } else {
              speedSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public Builder setSpeedSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (speedSamplesBuilder_ == null) {
              speedSamples_ = builderForValue.build();
              onChanged();
            } else {
              speedSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public Builder mergeSpeedSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (speedSamplesBuilder_ == null) {
              if (speedSamples_ != null) {
                speedSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(speedSamples_).mergeFrom(value).buildPartial();
              } else {
                speedSamples_ = value;
              }
              onChanged();
            } else {
              speedSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public Builder clearSpeedSamples() {
            if (speedSamplesBuilder_ == null) {
              speedSamples_ = null;
              onChanged();
            } else {
              speedSamples_ = null;
              speedSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getSpeedSamplesBuilder() {
            
            onChanged();
            return getSpeedSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSpeedSamplesOrBuilder() {
            if (speedSamplesBuilder_ != null) {
              return speedSamplesBuilder_.getMessageOrBuilder();
            } else {
              return speedSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : speedSamples_;
            }
          }
          /**
           * <pre>
           * A list of speed samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_samples = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getSpeedSamplesFieldBuilder() {
            if (speedSamplesBuilder_ == null) {
              speedSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getSpeedSamples(),
                      getParentForChildren(),
                      isClean());
              speedSamples_ = null;
            }
            return speedSamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload bearingSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> bearingSamplesBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public boolean hasBearingSamples() {
            return bearingSamplesBuilder_ != null || bearingSamples_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBearingSamples() {
            if (bearingSamplesBuilder_ == null) {
              return bearingSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : bearingSamples_;
            } else {
              return bearingSamplesBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public Builder setBearingSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (bearingSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              bearingSamples_ = value;
              onChanged();
            } else {
              bearingSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public Builder setBearingSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (bearingSamplesBuilder_ == null) {
              bearingSamples_ = builderForValue.build();
              onChanged();
            } else {
              bearingSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public Builder mergeBearingSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (bearingSamplesBuilder_ == null) {
              if (bearingSamples_ != null) {
                bearingSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(bearingSamples_).mergeFrom(value).buildPartial();
              } else {
                bearingSamples_ = value;
              }
              onChanged();
            } else {
              bearingSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public Builder clearBearingSamples() {
            if (bearingSamplesBuilder_ == null) {
              bearingSamples_ = null;
              onChanged();
            } else {
              bearingSamples_ = null;
              bearingSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getBearingSamplesBuilder() {
            
            onChanged();
            return getBearingSamplesFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBearingSamplesOrBuilder() {
            if (bearingSamplesBuilder_ != null) {
              return bearingSamplesBuilder_.getMessageOrBuilder();
            } else {
              return bearingSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : bearingSamples_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_samples = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getBearingSamplesFieldBuilder() {
            if (bearingSamplesBuilder_ == null) {
              bearingSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getBearingSamples(),
                      getParentForChildren(),
                      isClean());
              bearingSamples_ = null;
            }
            return bearingSamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload horizontalAccuracySamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> horizontalAccuracySamplesBuilder_;
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public boolean hasHorizontalAccuracySamples() {
            return horizontalAccuracySamplesBuilder_ != null || horizontalAccuracySamples_ != null;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getHorizontalAccuracySamples() {
            if (horizontalAccuracySamplesBuilder_ == null) {
              return horizontalAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : horizontalAccuracySamples_;
            } else {
              return horizontalAccuracySamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public Builder setHorizontalAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (horizontalAccuracySamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              horizontalAccuracySamples_ = value;
              onChanged();
            } else {
              horizontalAccuracySamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public Builder setHorizontalAccuracySamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (horizontalAccuracySamplesBuilder_ == null) {
              horizontalAccuracySamples_ = builderForValue.build();
              onChanged();
            } else {
              horizontalAccuracySamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public Builder mergeHorizontalAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (horizontalAccuracySamplesBuilder_ == null) {
              if (horizontalAccuracySamples_ != null) {
                horizontalAccuracySamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(horizontalAccuracySamples_).mergeFrom(value).buildPartial();
              } else {
                horizontalAccuracySamples_ = value;
              }
              onChanged();
            } else {
              horizontalAccuracySamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public Builder clearHorizontalAccuracySamples() {
            if (horizontalAccuracySamplesBuilder_ == null) {
              horizontalAccuracySamples_ = null;
              onChanged();
            } else {
              horizontalAccuracySamples_ = null;
              horizontalAccuracySamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getHorizontalAccuracySamplesBuilder() {
            
            onChanged();
            return getHorizontalAccuracySamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getHorizontalAccuracySamplesOrBuilder() {
            if (horizontalAccuracySamplesBuilder_ != null) {
              return horizontalAccuracySamplesBuilder_.getMessageOrBuilder();
            } else {
              return horizontalAccuracySamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : horizontalAccuracySamples_;
            }
          }
          /**
           * <pre>
           * A list of accuracy samples
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload horizontal_accuracy_samples = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getHorizontalAccuracySamplesFieldBuilder() {
            if (horizontalAccuracySamplesBuilder_ == null) {
              horizontalAccuracySamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getHorizontalAccuracySamples(),
                      getParentForChildren(),
                      isClean());
              horizontalAccuracySamples_ = null;
            }
            return horizontalAccuracySamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload verticalAccuracySamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> verticalAccuracySamplesBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public boolean hasVerticalAccuracySamples() {
            return verticalAccuracySamplesBuilder_ != null || verticalAccuracySamples_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getVerticalAccuracySamples() {
            if (verticalAccuracySamplesBuilder_ == null) {
              return verticalAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : verticalAccuracySamples_;
            } else {
              return verticalAccuracySamplesBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public Builder setVerticalAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (verticalAccuracySamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              verticalAccuracySamples_ = value;
              onChanged();
            } else {
              verticalAccuracySamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public Builder setVerticalAccuracySamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (verticalAccuracySamplesBuilder_ == null) {
              verticalAccuracySamples_ = builderForValue.build();
              onChanged();
            } else {
              verticalAccuracySamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public Builder mergeVerticalAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (verticalAccuracySamplesBuilder_ == null) {
              if (verticalAccuracySamples_ != null) {
                verticalAccuracySamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(verticalAccuracySamples_).mergeFrom(value).buildPartial();
              } else {
                verticalAccuracySamples_ = value;
              }
              onChanged();
            } else {
              verticalAccuracySamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public Builder clearVerticalAccuracySamples() {
            if (verticalAccuracySamplesBuilder_ == null) {
              verticalAccuracySamples_ = null;
              onChanged();
            } else {
              verticalAccuracySamples_ = null;
              verticalAccuracySamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getVerticalAccuracySamplesBuilder() {
            
            onChanged();
            return getVerticalAccuracySamplesFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getVerticalAccuracySamplesOrBuilder() {
            if (verticalAccuracySamplesBuilder_ != null) {
              return verticalAccuracySamplesBuilder_.getMessageOrBuilder();
            } else {
              return verticalAccuracySamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : verticalAccuracySamples_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload vertical_accuracy_samples = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getVerticalAccuracySamplesFieldBuilder() {
            if (verticalAccuracySamplesBuilder_ == null) {
              verticalAccuracySamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getVerticalAccuracySamples(),
                      getParentForChildren(),
                      isClean());
              verticalAccuracySamples_ = null;
            }
            return verticalAccuracySamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload speedAccuracySamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> speedAccuracySamplesBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public boolean hasSpeedAccuracySamples() {
            return speedAccuracySamplesBuilder_ != null || speedAccuracySamples_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getSpeedAccuracySamples() {
            if (speedAccuracySamplesBuilder_ == null) {
              return speedAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : speedAccuracySamples_;
            } else {
              return speedAccuracySamplesBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public Builder setSpeedAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (speedAccuracySamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              speedAccuracySamples_ = value;
              onChanged();
            } else {
              speedAccuracySamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public Builder setSpeedAccuracySamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (speedAccuracySamplesBuilder_ == null) {
              speedAccuracySamples_ = builderForValue.build();
              onChanged();
            } else {
              speedAccuracySamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public Builder mergeSpeedAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (speedAccuracySamplesBuilder_ == null) {
              if (speedAccuracySamples_ != null) {
                speedAccuracySamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(speedAccuracySamples_).mergeFrom(value).buildPartial();
              } else {
                speedAccuracySamples_ = value;
              }
              onChanged();
            } else {
              speedAccuracySamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public Builder clearSpeedAccuracySamples() {
            if (speedAccuracySamplesBuilder_ == null) {
              speedAccuracySamples_ = null;
              onChanged();
            } else {
              speedAccuracySamples_ = null;
              speedAccuracySamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getSpeedAccuracySamplesBuilder() {
            
            onChanged();
            return getSpeedAccuracySamplesFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getSpeedAccuracySamplesOrBuilder() {
            if (speedAccuracySamplesBuilder_ != null) {
              return speedAccuracySamplesBuilder_.getMessageOrBuilder();
            } else {
              return speedAccuracySamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : speedAccuracySamples_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload speed_accuracy_samples = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getSpeedAccuracySamplesFieldBuilder() {
            if (speedAccuracySamplesBuilder_ == null) {
              speedAccuracySamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getSpeedAccuracySamples(),
                      getParentForChildren(),
                      isClean());
              speedAccuracySamples_ = null;
            }
            return speedAccuracySamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload bearingAccuracySamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> bearingAccuracySamplesBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public boolean hasBearingAccuracySamples() {
            return bearingAccuracySamplesBuilder_ != null || bearingAccuracySamples_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getBearingAccuracySamples() {
            if (bearingAccuracySamplesBuilder_ == null) {
              return bearingAccuracySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : bearingAccuracySamples_;
            } else {
              return bearingAccuracySamplesBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public Builder setBearingAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (bearingAccuracySamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              bearingAccuracySamples_ = value;
              onChanged();
            } else {
              bearingAccuracySamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public Builder setBearingAccuracySamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (bearingAccuracySamplesBuilder_ == null) {
              bearingAccuracySamples_ = builderForValue.build();
              onChanged();
            } else {
              bearingAccuracySamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public Builder mergeBearingAccuracySamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (bearingAccuracySamplesBuilder_ == null) {
              if (bearingAccuracySamples_ != null) {
                bearingAccuracySamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(bearingAccuracySamples_).mergeFrom(value).buildPartial();
              } else {
                bearingAccuracySamples_ = value;
              }
              onChanged();
            } else {
              bearingAccuracySamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public Builder clearBearingAccuracySamples() {
            if (bearingAccuracySamplesBuilder_ == null) {
              bearingAccuracySamples_ = null;
              onChanged();
            } else {
              bearingAccuracySamples_ = null;
              bearingAccuracySamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getBearingAccuracySamplesBuilder() {
            
            onChanged();
            return getBearingAccuracySamplesFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getBearingAccuracySamplesOrBuilder() {
            if (bearingAccuracySamplesBuilder_ != null) {
              return bearingAccuracySamplesBuilder_.getMessageOrBuilder();
            } else {
              return bearingAccuracySamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : bearingAccuracySamples_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload bearing_accuracy_samples = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getBearingAccuracySamplesFieldBuilder() {
            if (bearingAccuracySamplesBuilder_ == null) {
              bearingAccuracySamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getBearingAccuracySamples(),
                      getParentForChildren(),
                      isClean());
              bearingAccuracySamples_ = null;
            }
            return bearingAccuracySamplesBuilder_;
          }

          private boolean locationPermissionsGranted_ ;
          /**
           * <pre>
           * Have location permissions been granted by the user?
           * </pre>
           *
           * <code>bool location_permissions_granted = 12;</code>
           */
          public boolean getLocationPermissionsGranted() {
            return locationPermissionsGranted_;
          }
          /**
           * <pre>
           * Have location permissions been granted by the user?
           * </pre>
           *
           * <code>bool location_permissions_granted = 12;</code>
           */
          public Builder setLocationPermissionsGranted(boolean value) {
            
            locationPermissionsGranted_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Have location permissions been granted by the user?
           * </pre>
           *
           * <code>bool location_permissions_granted = 12;</code>
           */
          public Builder clearLocationPermissionsGranted() {
            
            locationPermissionsGranted_ = false;
            onChanged();
            return this;
          }

          private boolean locationServicesRequested_ ;
          /**
           * <pre>
           * Has location services been requested by the user?
           * </pre>
           *
           * <code>bool location_services_requested = 13;</code>
           */
          public boolean getLocationServicesRequested() {
            return locationServicesRequested_;
          }
          /**
           * <pre>
           * Has location services been requested by the user?
           * </pre>
           *
           * <code>bool location_services_requested = 13;</code>
           */
          public Builder setLocationServicesRequested(boolean value) {
            
            locationServicesRequested_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Has location services been requested by the user?
           * </pre>
           *
           * <code>bool location_services_requested = 13;</code>
           */
          public Builder clearLocationServicesRequested() {
            
            locationServicesRequested_ = false;
            onChanged();
            return this;
          }

          private boolean locationServicesEnabled_ ;
          /**
           * <pre>
           * Are location services enabled and working?
           * </pre>
           *
           * <code>bool location_services_enabled = 14;</code>
           */
          public boolean getLocationServicesEnabled() {
            return locationServicesEnabled_;
          }
          /**
           * <pre>
           * Are location services enabled and working?
           * </pre>
           *
           * <code>bool location_services_enabled = 14;</code>
           */
          public Builder setLocationServicesEnabled(boolean value) {
            
            locationServicesEnabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Are location services enabled and working?
           * </pre>
           *
           * <code>bool location_services_enabled = 14;</code>
           */
          public Builder clearLocationServicesEnabled() {
            
            locationServicesEnabled_ = false;
            onChanged();
            return this;
          }

          private int locationProvider_ = 0;
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
           */
          public int getLocationProviderValue() {
            return locationProvider_;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
           */
          public Builder setLocationProviderValue(int value) {
            locationProvider_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider getLocationProvider() {
            @SuppressWarnings("deprecation")
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.valueOf(locationProvider_);
            return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
           */
          public Builder setLocationProvider(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            locationProvider_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Location provider enumeration
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel.LocationProvider location_provider = 15;</code>
           */
          public Builder clearLocationProvider() {
            
            locationProvider_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 26;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<LocationChannel>
            PARSER = new com.google.protobuf.AbstractParser<LocationChannel>() {
          @java.lang.Override
          public LocationChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new LocationChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<LocationChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<LocationChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface XyzChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        boolean hasTimestamps();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps();
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder();

        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
         */
        boolean hasXSamples();
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getXSamples();
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getXSamplesOrBuilder();

        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
         */
        boolean hasYSamples();
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getYSamples();
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getYSamplesOrBuilder();

        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
         */
        boolean hasZSamples();
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getZSamples();
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getZSamplesOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel}
       */
      public  static final class XyzChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
          XyzChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use XyzChannel.newBuilder() to construct.
        private XyzChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private XyzChannel() {
          sensorDescription_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private XyzChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 18: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (timestamps_ != null) {
                    subBuilder = timestamps_.toBuilder();
                  }
                  timestamps_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(timestamps_);
                    timestamps_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (xSamples_ != null) {
                    subBuilder = xSamples_.toBuilder();
                  }
                  xSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(xSamples_);
                    xSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (ySamples_ != null) {
                    subBuilder = ySamples_.toBuilder();
                  }
                  ySamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(ySamples_);
                    ySamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder subBuilder = null;
                  if (zSamples_ != null) {
                    subBuilder = zSamples_.toBuilder();
                  }
                  zSamples_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(zSamples_);
                    zSamples_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000020;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 11:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TIMESTAMPS_FIELD_NUMBER = 2;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload timestamps_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public boolean hasTimestamps() {
          return timestamps_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps() {
          return timestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder() {
          return getTimestamps();
        }

        public static final int X_SAMPLES_FIELD_NUMBER = 4;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload xSamples_;
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
         */
        public boolean hasXSamples() {
          return xSamples_ != null;
        }
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getXSamples() {
          return xSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : xSamples_;
        }
        /**
         * <pre>
         * A list of samples for the X-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getXSamplesOrBuilder() {
          return getXSamples();
        }

        public static final int Y_SAMPLES_FIELD_NUMBER = 5;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload ySamples_;
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
         */
        public boolean hasYSamples() {
          return ySamples_ != null;
        }
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getYSamples() {
          return ySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : ySamples_;
        }
        /**
         * <pre>
         * A list of samples for the Y-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getYSamplesOrBuilder() {
          return getYSamples();
        }

        public static final int Z_SAMPLES_FIELD_NUMBER = 6;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload zSamples_;
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
         */
        public boolean hasZSamples() {
          return zSamples_ != null;
        }
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getZSamples() {
          return zSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : zSamples_;
        }
        /**
         * <pre>
         * A list of samples for the Z-channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getZSamplesOrBuilder() {
          return getZSamples();
        }

        public static final int METADATA_FIELD_NUMBER = 11;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 11;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (timestamps_ != null) {
            output.writeMessage(2, getTimestamps());
          }
          if (xSamples_ != null) {
            output.writeMessage(4, getXSamples());
          }
          if (ySamples_ != null) {
            output.writeMessage(5, getYSamples());
          }
          if (zSamples_ != null) {
            output.writeMessage(6, getZSamples());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              11);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (timestamps_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getTimestamps());
          }
          if (xSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getXSamples());
          }
          if (ySamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getYSamples());
          }
          if (zSamples_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getZSamples());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(11, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (hasTimestamps() == other.hasTimestamps());
          if (hasTimestamps()) {
            result = result && getTimestamps()
                .equals(other.getTimestamps());
          }
          result = result && (hasXSamples() == other.hasXSamples());
          if (hasXSamples()) {
            result = result && getXSamples()
                .equals(other.getXSamples());
          }
          result = result && (hasYSamples() == other.hasYSamples());
          if (hasYSamples()) {
            result = result && getYSamples()
                .equals(other.getYSamples());
          }
          result = result && (hasZSamples() == other.hasZSamples());
          if (hasZSamples()) {
            result = result && getZSamples()
                .equals(other.getZSamples());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          if (hasTimestamps()) {
            hash = (37 * hash) + TIMESTAMPS_FIELD_NUMBER;
            hash = (53 * hash) + getTimestamps().hashCode();
          }
          if (hasXSamples()) {
            hash = (37 * hash) + X_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getXSamples().hashCode();
          }
          if (hasYSamples()) {
            hash = (37 * hash) + Y_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getYSamples().hashCode();
          }
          if (hasZSamples()) {
            hash = (37 * hash) + Z_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getZSamples().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 11:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 11:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            if (timestampsBuilder_ == null) {
              timestamps_ = null;
            } else {
              timestamps_ = null;
              timestampsBuilder_ = null;
            }
            if (xSamplesBuilder_ == null) {
              xSamples_ = null;
            } else {
              xSamples_ = null;
              xSamplesBuilder_ = null;
            }
            if (ySamplesBuilder_ == null) {
              ySamples_ = null;
            } else {
              ySamples_ = null;
              ySamplesBuilder_ = null;
            }
            if (zSamplesBuilder_ == null) {
              zSamples_ = null;
            } else {
              zSamples_ = null;
              zSamplesBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            if (timestampsBuilder_ == null) {
              result.timestamps_ = timestamps_;
            } else {
              result.timestamps_ = timestampsBuilder_.build();
            }
            if (xSamplesBuilder_ == null) {
              result.xSamples_ = xSamples_;
            } else {
              result.xSamples_ = xSamplesBuilder_.build();
            }
            if (ySamplesBuilder_ == null) {
              result.ySamples_ = ySamples_;
            } else {
              result.ySamples_ = ySamplesBuilder_.build();
            }
            if (zSamplesBuilder_ == null) {
              result.zSamples_ = zSamples_;
            } else {
              result.zSamples_ = zSamplesBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.hasTimestamps()) {
              mergeTimestamps(other.getTimestamps());
            }
            if (other.hasXSamples()) {
              mergeXSamples(other.getXSamples());
            }
            if (other.hasYSamples()) {
              mergeYSamples(other.getYSamples());
            }
            if (other.hasZSamples()) {
              mergeZSamples(other.getZSamples());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload timestamps_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> timestampsBuilder_;
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public boolean hasTimestamps() {
            return timestampsBuilder_ != null || timestamps_ != null;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getTimestamps() {
            if (timestampsBuilder_ == null) {
              return timestamps_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
            } else {
              return timestampsBuilder_.getMessage();
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder setTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (timestampsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              timestamps_ = value;
              onChanged();
            } else {
              timestampsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder setTimestamps(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (timestampsBuilder_ == null) {
              timestamps_ = builderForValue.build();
              onChanged();
            } else {
              timestampsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder mergeTimestamps(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (timestampsBuilder_ == null) {
              if (timestamps_ != null) {
                timestamps_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(timestamps_).mergeFrom(value).buildPartial();
              } else {
                timestamps_ = value;
              }
              onChanged();
            } else {
              timestampsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public Builder clearTimestamps() {
            if (timestampsBuilder_ == null) {
              timestamps_ = null;
              onChanged();
            } else {
              timestamps_ = null;
              timestampsBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getTimestampsBuilder() {
            
            onChanged();
            return getTimestampsFieldBuilder().getBuilder();
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getTimestampsOrBuilder() {
            if (timestampsBuilder_ != null) {
              return timestampsBuilder_.getMessageOrBuilder();
            } else {
              return timestamps_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : timestamps_;
            }
          }
          /**
           * <code>.redvox_api1000.RedvoxPacket1000.Payload timestamps = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getTimestampsFieldBuilder() {
            if (timestampsBuilder_ == null) {
              timestampsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getTimestamps(),
                      getParentForChildren(),
                      isClean());
              timestamps_ = null;
            }
            return timestampsBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload xSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> xSamplesBuilder_;
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public boolean hasXSamples() {
            return xSamplesBuilder_ != null || xSamples_ != null;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getXSamples() {
            if (xSamplesBuilder_ == null) {
              return xSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : xSamples_;
            } else {
              return xSamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public Builder setXSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (xSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              xSamples_ = value;
              onChanged();
            } else {
              xSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public Builder setXSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (xSamplesBuilder_ == null) {
              xSamples_ = builderForValue.build();
              onChanged();
            } else {
              xSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public Builder mergeXSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (xSamplesBuilder_ == null) {
              if (xSamples_ != null) {
                xSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(xSamples_).mergeFrom(value).buildPartial();
              } else {
                xSamples_ = value;
              }
              onChanged();
            } else {
              xSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public Builder clearXSamples() {
            if (xSamplesBuilder_ == null) {
              xSamples_ = null;
              onChanged();
            } else {
              xSamples_ = null;
              xSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getXSamplesBuilder() {
            
            onChanged();
            return getXSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getXSamplesOrBuilder() {
            if (xSamplesBuilder_ != null) {
              return xSamplesBuilder_.getMessageOrBuilder();
            } else {
              return xSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : xSamples_;
            }
          }
          /**
           * <pre>
           * A list of samples for the X-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload x_samples = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getXSamplesFieldBuilder() {
            if (xSamplesBuilder_ == null) {
              xSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getXSamples(),
                      getParentForChildren(),
                      isClean());
              xSamples_ = null;
            }
            return xSamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload ySamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> ySamplesBuilder_;
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public boolean hasYSamples() {
            return ySamplesBuilder_ != null || ySamples_ != null;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getYSamples() {
            if (ySamplesBuilder_ == null) {
              return ySamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : ySamples_;
            } else {
              return ySamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public Builder setYSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (ySamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ySamples_ = value;
              onChanged();
            } else {
              ySamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public Builder setYSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (ySamplesBuilder_ == null) {
              ySamples_ = builderForValue.build();
              onChanged();
            } else {
              ySamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public Builder mergeYSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (ySamplesBuilder_ == null) {
              if (ySamples_ != null) {
                ySamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(ySamples_).mergeFrom(value).buildPartial();
              } else {
                ySamples_ = value;
              }
              onChanged();
            } else {
              ySamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public Builder clearYSamples() {
            if (ySamplesBuilder_ == null) {
              ySamples_ = null;
              onChanged();
            } else {
              ySamples_ = null;
              ySamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getYSamplesBuilder() {
            
            onChanged();
            return getYSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getYSamplesOrBuilder() {
            if (ySamplesBuilder_ != null) {
              return ySamplesBuilder_.getMessageOrBuilder();
            } else {
              return ySamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : ySamples_;
            }
          }
          /**
           * <pre>
           * A list of samples for the Y-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload y_samples = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getYSamplesFieldBuilder() {
            if (ySamplesBuilder_ == null) {
              ySamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getYSamples(),
                      getParentForChildren(),
                      isClean());
              ySamples_ = null;
            }
            return ySamplesBuilder_;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload zSamples_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> zSamplesBuilder_;
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public boolean hasZSamples() {
            return zSamplesBuilder_ != null || zSamples_ != null;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getZSamples() {
            if (zSamplesBuilder_ == null) {
              return zSamples_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : zSamples_;
            } else {
              return zSamplesBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public Builder setZSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (zSamplesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              zSamples_ = value;
              onChanged();
            } else {
              zSamplesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public Builder setZSamples(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder builderForValue) {
            if (zSamplesBuilder_ == null) {
              zSamples_ = builderForValue.build();
              onChanged();
            } else {
              zSamplesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public Builder mergeZSamples(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload value) {
            if (zSamplesBuilder_ == null) {
              if (zSamples_ != null) {
                zSamples_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder(zSamples_).mergeFrom(value).buildPartial();
              } else {
                zSamples_ = value;
              }
              onChanged();
            } else {
              zSamplesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public Builder clearZSamples() {
            if (zSamplesBuilder_ == null) {
              zSamples_ = null;
              onChanged();
            } else {
              zSamples_ = null;
              zSamplesBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder getZSamplesBuilder() {
            
            onChanged();
            return getZSamplesFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder getZSamplesOrBuilder() {
            if (zSamplesBuilder_ != null) {
              return zSamplesBuilder_.getMessageOrBuilder();
            } else {
              return zSamples_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance() : zSamples_;
            }
          }
          /**
           * <pre>
           * A list of samples for the Z-channel
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.Payload z_samples = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder> 
              getZSamplesFieldBuilder() {
            if (zSamplesBuilder_ == null) {
              zSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder>(
                      getZSamples(),
                      getParentForChildren(),
                      isClean());
              zSamples_ = null;
            }
            return zSamplesBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 11;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<XyzChannel>
            PARSER = new com.google.protobuf.AbstractParser<XyzChannel>() {
          @java.lang.Override
          public XyzChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new XyzChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<XyzChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<XyzChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ImageChannelOrBuilder extends
          // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        java.lang.String getSensorDescription();
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        com.google.protobuf.ByteString
            getSensorDescriptionBytes();

        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        double getMeanSampleRateHz();

        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        java.util.List<java.lang.Double> getSampleTsUsList();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        int getSampleTsUsCount();
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        double getSampleTsUs(int index);

        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getSamplesList();
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        int getSamplesCount();
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        com.google.protobuf.ByteString getSamples(int index);

        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        boolean hasSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics();
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder();

        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        int getMetadataCount();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        boolean containsMetadata(
            java.lang.String key);
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.String>
        getMetadata();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */
        java.util.Map<java.lang.String, java.lang.String>
        getMetadataMap();
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue);
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        java.lang.String getMetadataOrThrow(
            java.lang.String key);
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel}
       */
      public  static final class ImageChannel extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
          ImageChannelOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ImageChannel.newBuilder() to construct.
        private ImageChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ImageChannel() {
          sensorDescription_ = "";
          meanSampleRateHz_ = 0D;
          sampleTsUs_ = java.util.Collections.emptyList();
          samples_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ImageChannel(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  sensorDescription_ = s;
                  break;
                }
                case 17: {

                  meanSampleRateHz_ = input.readDouble();
                  break;
                }
                case 25: {
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  sampleTsUs_.add(input.readDouble());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                    sampleTsUs_ = new java.util.ArrayList<java.lang.Double>();
                    mutable_bitField0_ |= 0x00000004;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    sampleTsUs_.add(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    samples_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  samples_.add(input.readBytes());
                  break;
                }
                case 42: {
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                  if (sampleRateStatistics_ != null) {
                    subBuilder = sampleRateStatistics_.toBuilder();
                  }
                  sampleRateStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sampleRateStatistics_);
                    sampleRateStatistics_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    metadata_ = com.google.protobuf.MapField.newMapField(
                        MetadataDefaultEntryHolder.defaultEntry);
                    mutable_bitField0_ |= 0x00000020;
                  }
                  com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                  metadata__ = input.readMessage(
                      MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  metadata_.getMutableMap().put(
                      metadata__.getKey(), metadata__.getValue());
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        @java.lang.Override
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 6:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder.class);
        }

        private int bitField0_;
        public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 1;
        private volatile java.lang.Object sensorDescription_;
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public java.lang.String getSensorDescription() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            sensorDescription_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name or description of the sensor
         * </pre>
         *
         * <code>string sensor_description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSensorDescriptionBytes() {
          java.lang.Object ref = sensorDescription_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sensorDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER = 2;
        private double meanSampleRateHz_;
        /**
         * <pre>
         * The mean sample rate in Hz
         * </pre>
         *
         * <code>double mean_sample_rate_hz = 2;</code>
         */
        public double getMeanSampleRateHz() {
          return meanSampleRateHz_;
        }

        public static final int SAMPLE_TS_US_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Double> sampleTsUs_;
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public java.util.List<java.lang.Double>
            getSampleTsUsList() {
          return sampleTsUs_;
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public int getSampleTsUsCount() {
          return sampleTsUs_.size();
        }
        /**
         * <pre>
         * A list of timestamps, one for each sample
         * </pre>
         *
         * <code>repeated double sample_ts_us = 3;</code>
         */
        public double getSampleTsUs(int index) {
          return sampleTsUs_.get(index);
        }
        private int sampleTsUsMemoizedSerializedSize = -1;

        public static final int SAMPLES_FIELD_NUMBER = 4;
        private java.util.List<com.google.protobuf.ByteString> samples_;
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
            getSamplesList() {
          return samples_;
        }
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        public int getSamplesCount() {
          return samples_.size();
        }
        /**
         * <pre>
         * A list of bytes each representing a single image
         * </pre>
         *
         * <code>repeated bytes samples = 4;</code>
         */
        public com.google.protobuf.ByteString getSamples(int index) {
          return samples_.get(index);
        }

        public static final int SAMPLE_RATE_STATISTICS_FIELD_NUMBER = 5;
        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_;
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public boolean hasSampleRateStatistics() {
          return sampleRateStatistics_ != null;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
          return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
        }
        /**
         * <pre>
         * Statistics for sample timestamps
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
          return getSampleRateStatistics();
        }

        public static final int METADATA_FIELD_NUMBER = 6;
        private static final class MetadataDefaultEntryHolder {
          static final com.google.protobuf.MapEntry<
              java.lang.String, java.lang.String> defaultEntry =
                  com.google.protobuf.MapEntry
                  .<java.lang.String, java.lang.String>newDefaultInstance(
                      io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor, 
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "",
                      com.google.protobuf.WireFormat.FieldType.STRING,
                      "");
        }
        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 6;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (!getSensorDescriptionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            output.writeDouble(2, meanSampleRateHz_);
          }
          if (getSampleTsUsList().size() > 0) {
            output.writeUInt32NoTag(26);
            output.writeUInt32NoTag(sampleTsUsMemoizedSerializedSize);
          }
          for (int i = 0; i < sampleTsUs_.size(); i++) {
            output.writeDoubleNoTag(sampleTsUs_.get(i));
          }
          for (int i = 0; i < samples_.size(); i++) {
            output.writeBytes(4, samples_.get(i));
          }
          if (sampleRateStatistics_ != null) {
            output.writeMessage(5, getSampleRateStatistics());
          }
          com.google.protobuf.GeneratedMessageV3
            .serializeStringMapTo(
              output,
              internalGetMetadata(),
              MetadataDefaultEntryHolder.defaultEntry,
              6);
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getSensorDescriptionBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sensorDescription_);
          }
          if (meanSampleRateHz_ != 0D) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, meanSampleRateHz_);
          }
          {
            int dataSize = 0;
            dataSize = 8 * getSampleTsUsList().size();
            size += dataSize;
            if (!getSampleTsUsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            sampleTsUsMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            for (int i = 0; i < samples_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(samples_.get(i));
            }
            size += dataSize;
            size += 1 * getSamplesList().size();
          }
          if (sampleRateStatistics_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getSampleRateStatistics());
          }
          for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
               : internalGetMetadata().getMap().entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
                .setKey(entry.getKey())
                .setValue(entry.getValue())
                .build();
            size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, metadata__);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel)) {
            return super.equals(obj);
          }
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel) obj;

          boolean result = true;
          result = result && getSensorDescription()
              .equals(other.getSensorDescription());
          result = result && (
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz())
              == java.lang.Double.doubleToLongBits(
                  other.getMeanSampleRateHz()));
          result = result && getSampleTsUsList()
              .equals(other.getSampleTsUsList());
          result = result && getSamplesList()
              .equals(other.getSamplesList());
          result = result && (hasSampleRateStatistics() == other.hasSampleRateStatistics());
          if (hasSampleRateStatistics()) {
            result = result && getSampleRateStatistics()
                .equals(other.getSampleRateStatistics());
          }
          result = result && internalGetMetadata().equals(
              other.internalGetMetadata());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSensorDescription().hashCode();
          hash = (37 * hash) + MEAN_SAMPLE_RATE_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getMeanSampleRateHz()));
          if (getSampleTsUsCount() > 0) {
            hash = (37 * hash) + SAMPLE_TS_US_FIELD_NUMBER;
            hash = (53 * hash) + getSampleTsUsList().hashCode();
          }
          if (getSamplesCount() > 0) {
            hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getSamplesList().hashCode();
          }
          if (hasSampleRateStatistics()) {
            hash = (37 * hash) + SAMPLE_RATE_STATISTICS_FIELD_NUMBER;
            hash = (53 * hash) + getSampleRateStatistics().hashCode();
          }
          if (!internalGetMetadata().getMap().isEmpty()) {
            hash = (37 * hash) + METADATA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetMetadata().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
          }

          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMapField(
              int number) {
            switch (number) {
              case 6:
                return internalGetMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @SuppressWarnings({"rawtypes"})
          protected com.google.protobuf.MapField internalGetMutableMapField(
              int number) {
            switch (number) {
              case 6:
                return internalGetMutableMetadata();
              default:
                throw new RuntimeException(
                    "Invalid map field number: " + number);
            }
          }
          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder.class);
          }

          // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sensorDescription_ = "";

            meanSampleRateHz_ = 0D;

            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }
            internalGetMutableMetadata().clear();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getDefaultInstanceForType() {
            return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance();
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel build() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel buildPartial() {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            result.sensorDescription_ = sensorDescription_;
            result.meanSampleRateHz_ = meanSampleRateHz_;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = java.util.Collections.unmodifiableList(sampleTsUs_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.sampleTsUs_ = sampleTsUs_;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.samples_ = samples_;
            if (sampleRateStatisticsBuilder_ == null) {
              result.sampleRateStatistics_ = sampleRateStatistics_;
            } else {
              result.sampleRateStatistics_ = sampleRateStatisticsBuilder_.build();
            }
            result.metadata_ = internalGetMetadata();
            result.metadata_.makeImmutable();
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel) {
              return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel other) {
            if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance()) return this;
            if (!other.getSensorDescription().isEmpty()) {
              sensorDescription_ = other.sensorDescription_;
              onChanged();
            }
            if (other.getMeanSampleRateHz() != 0D) {
              setMeanSampleRateHz(other.getMeanSampleRateHz());
            }
            if (!other.sampleTsUs_.isEmpty()) {
              if (sampleTsUs_.isEmpty()) {
                sampleTsUs_ = other.sampleTsUs_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSampleTsUsIsMutable();
                sampleTsUs_.addAll(other.sampleTsUs_);
              }
              onChanged();
            }
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
            if (other.hasSampleRateStatistics()) {
              mergeSampleRateStatistics(other.getSampleRateStatistics());
            }
            internalGetMutableMetadata().mergeFrom(
                other.internalGetMetadata());
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sensorDescription_ = "";
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public java.lang.String getSensorDescription() {
            java.lang.Object ref = sensorDescription_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              sensorDescription_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public com.google.protobuf.ByteString
              getSensorDescriptionBytes() {
            java.lang.Object ref = sensorDescription_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sensorDescription_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescription(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            sensorDescription_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder clearSensorDescription() {
            
            sensorDescription_ = getDefaultInstance().getSensorDescription();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name or description of the sensor
           * </pre>
           *
           * <code>string sensor_description = 1;</code>
           */
          public Builder setSensorDescriptionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            sensorDescription_ = value;
            onChanged();
            return this;
          }

          private double meanSampleRateHz_ ;
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public double getMeanSampleRateHz() {
            return meanSampleRateHz_;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder setMeanSampleRateHz(double value) {
            
            meanSampleRateHz_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The mean sample rate in Hz
           * </pre>
           *
           * <code>double mean_sample_rate_hz = 2;</code>
           */
          public Builder clearMeanSampleRateHz() {
            
            meanSampleRateHz_ = 0D;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Double> sampleTsUs_ = java.util.Collections.emptyList();
          private void ensureSampleTsUsIsMutable() {
            if (!((bitField0_ & 0x00000004) == 0x00000004)) {
              sampleTsUs_ = new java.util.ArrayList<java.lang.Double>(sampleTsUs_);
              bitField0_ |= 0x00000004;
             }
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public java.util.List<java.lang.Double>
              getSampleTsUsList() {
            return java.util.Collections.unmodifiableList(sampleTsUs_);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public int getSampleTsUsCount() {
            return sampleTsUs_.size();
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public double getSampleTsUs(int index) {
            return sampleTsUs_.get(index);
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder setSampleTsUs(
              int index, double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addSampleTsUs(double value) {
            ensureSampleTsUsIsMutable();
            sampleTsUs_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder addAllSampleTsUs(
              java.lang.Iterable<? extends java.lang.Double> values) {
            ensureSampleTsUsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sampleTsUs_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of timestamps, one for each sample
           * </pre>
           *
           * <code>repeated double sample_ts_us = 3;</code>
           */
          public Builder clearSampleTsUs() {
            sampleTsUs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private java.util.List<com.google.protobuf.ByteString> samples_ = java.util.Collections.emptyList();
          private void ensureSamplesIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              samples_ = new java.util.ArrayList<com.google.protobuf.ByteString>(samples_);
              bitField0_ |= 0x00000008;
             }
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public java.util.List<com.google.protobuf.ByteString>
              getSamplesList() {
            return java.util.Collections.unmodifiableList(samples_);
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public int getSamplesCount() {
            return samples_.size();
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public com.google.protobuf.ByteString getSamples(int index) {
            return samples_.get(index);
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder setSamples(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder addSamples(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder addAllSamples(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A list of bytes each representing a single image
           * </pre>
           *
           * <code>repeated bytes samples = 4;</code>
           */
          public Builder clearSamples() {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }

          private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics sampleRateStatistics_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> sampleRateStatisticsBuilder_;
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public boolean hasSampleRateStatistics() {
            return sampleRateStatisticsBuilder_ != null || sampleRateStatistics_ != null;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              return sampleRateStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            } else {
              return sampleRateStatisticsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder setSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              sampleRateStatistics_ = value;
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder setSampleRateStatistics(
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = builderForValue.build();
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder mergeSampleRateStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
            if (sampleRateStatisticsBuilder_ == null) {
              if (sampleRateStatistics_ != null) {
                sampleRateStatistics_ =
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(sampleRateStatistics_).mergeFrom(value).buildPartial();
              } else {
                sampleRateStatistics_ = value;
              }
              onChanged();
            } else {
              sampleRateStatisticsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public Builder clearSampleRateStatistics() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatistics_ = null;
              onChanged();
            } else {
              sampleRateStatistics_ = null;
              sampleRateStatisticsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getSampleRateStatisticsBuilder() {
            
            onChanged();
            return getSampleRateStatisticsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getSampleRateStatisticsOrBuilder() {
            if (sampleRateStatisticsBuilder_ != null) {
              return sampleRateStatisticsBuilder_.getMessageOrBuilder();
            } else {
              return sampleRateStatistics_ == null ?
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : sampleRateStatistics_;
            }
          }
          /**
           * <pre>
           * Statistics for sample timestamps
           * </pre>
           *
           * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics sample_rate_statistics = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
              getSampleRateStatisticsFieldBuilder() {
            if (sampleRateStatisticsBuilder_ == null) {
              sampleRateStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                      getSampleRateStatistics(),
                      getParentForChildren(),
                      isClean());
              sampleRateStatistics_ = null;
            }
            return sampleRateStatisticsBuilder_;
          }

          private com.google.protobuf.MapField<
              java.lang.String, java.lang.String> metadata_;
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMetadata() {
            if (metadata_ == null) {
              return com.google.protobuf.MapField.emptyMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            return metadata_;
          }
          private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMetadata() {
            onChanged();;
            if (metadata_ == null) {
              metadata_ = com.google.protobuf.MapField.newMapField(
                  MetadataDefaultEntryHolder.defaultEntry);
            }
            if (!metadata_.isMutable()) {
              metadata_ = metadata_.copy();
            }
            return metadata_;
          }

          public int getMetadataCount() {
            return internalGetMetadata().getMap().size();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public boolean containsMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetMetadata().getMap().containsKey(key);
          }
          /**
           * Use {@link #getMetadataMap()} instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
            return getMetadataMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
            return internalGetMetadata().getMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.lang.String getMetadataOrDefault(
              java.lang.String key,
              java.lang.String defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public java.lang.String getMetadataOrThrow(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.String> map =
                internalGetMetadata().getMap();
            if (!map.containsKey(key)) {
              throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
          }

          public Builder clearMetadata() {
            internalGetMutableMetadata().getMutableMap()
                .clear();
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public Builder removeMetadata(
              java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .remove(key);
            return this;
          }
          /**
           * Use alternate mutation accessors instead.
           */
          @java.lang.Deprecated
          public java.util.Map<java.lang.String, java.lang.String>
          getMutableMetadata() {
            return internalGetMutableMetadata().getMutableMap();
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */
          public Builder putMetadata(
              java.lang.String key,
              java.lang.String value) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            if (value == null) { throw new java.lang.NullPointerException(); }
            internalGetMutableMetadata().getMutableMap()
                .put(key, value);
            return this;
          }
          /**
           * <pre>
           * A map from string to string for including untyped metadata
           * </pre>
           *
           * <code>map&lt;string, string&gt; metadata = 6;</code>
           */

          public Builder putAllMetadata(
              java.util.Map<java.lang.String, java.lang.String> values) {
            internalGetMutableMetadata().getMutableMap()
                .putAll(values);
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
        }

        // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel)
        private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel();
        }

        public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ImageChannel>
            PARSER = new com.google.protobuf.AbstractParser<ImageChannel>() {
          @java.lang.Override
          public ImageChannel parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ImageChannel(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ImageChannel> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ImageChannel> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int AUDIO_CHANNEL_FIELD_NUMBER = 1;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel audioChannel_;
      /**
       * <pre>
       * The audio channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
       */
      public boolean hasAudioChannel() {
        return audioChannel_ != null;
      }
      /**
       * <pre>
       * The audio channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel getAudioChannel() {
        return audioChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.getDefaultInstance() : audioChannel_;
      }
      /**
       * <pre>
       * The audio channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder getAudioChannelOrBuilder() {
        return getAudioChannel();
      }

      public static final int BAROMETER_CHANNEL_FIELD_NUMBER = 2;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel barometerChannel_;
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      public boolean hasBarometerChannel() {
        return barometerChannel_ != null;
      }
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getBarometerChannel() {
        return barometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : barometerChannel_;
      }
      /**
       * <pre>
       * The barometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getBarometerChannelOrBuilder() {
        return getBarometerChannel();
      }

      public static final int LOCATION_CHANNEL_FIELD_NUMBER = 3;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel locationChannel_;
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      public boolean hasLocationChannel() {
        return locationChannel_ != null;
      }
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getLocationChannel() {
        return locationChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance() : locationChannel_;
      }
      /**
       * <pre>
       * The location channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder getLocationChannelOrBuilder() {
        return getLocationChannel();
      }

      public static final int ACCELEROMETER_CHANNEL_FIELD_NUMBER = 4;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometerChannel_;
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      public boolean hasAccelerometerChannel() {
        return accelerometerChannel_ != null;
      }
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getAccelerometerChannel() {
        return accelerometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : accelerometerChannel_;
      }
      /**
       * <pre>
       * The accelerometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getAccelerometerChannelOrBuilder() {
        return getAccelerometerChannel();
      }

      public static final int GYROSCOPE_CHANNEL_FIELD_NUMBER = 5;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscopeChannel_;
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      public boolean hasGyroscopeChannel() {
        return gyroscopeChannel_ != null;
      }
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getGyroscopeChannel() {
        return gyroscopeChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : gyroscopeChannel_;
      }
      /**
       * <pre>
       * The gyroscope channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getGyroscopeChannelOrBuilder() {
        return getGyroscopeChannel();
      }

      public static final int MAGNETOMETER_CHANNEL_FIELD_NUMBER = 6;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometerChannel_;
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      public boolean hasMagnetometerChannel() {
        return magnetometerChannel_ != null;
      }
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getMagnetometerChannel() {
        return magnetometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : magnetometerChannel_;
      }
      /**
       * <pre>
       * The magnetometer channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getMagnetometerChannelOrBuilder() {
        return getMagnetometerChannel();
      }

      public static final int LIGHT_CHANNEL_FIELD_NUMBER = 7;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel lightChannel_;
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      public boolean hasLightChannel() {
        return lightChannel_ != null;
      }
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getLightChannel() {
        return lightChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : lightChannel_;
      }
      /**
       * <pre>
       * The light channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getLightChannelOrBuilder() {
        return getLightChannel();
      }

      public static final int INFRARED_CHANNEL_FIELD_NUMBER = 8;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel infraredChannel_;
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      public boolean hasInfraredChannel() {
        return infraredChannel_ != null;
      }
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getInfraredChannel() {
        return infraredChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : infraredChannel_;
      }
      /**
       * <pre>
       * The infrared channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getInfraredChannelOrBuilder() {
        return getInfraredChannel();
      }

      public static final int IMAGE_CHANNEL_FIELD_NUMBER = 9;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel imageChannel_;
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      public boolean hasImageChannel() {
        return imageChannel_ != null;
      }
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getImageChannel() {
        return imageChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance() : imageChannel_;
      }
      /**
       * <pre>
       * The image channel
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder getImageChannelOrBuilder() {
        return getImageChannel();
      }

      public static final int METADATA_FIELD_NUMBER = 10;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 10;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (audioChannel_ != null) {
          output.writeMessage(1, getAudioChannel());
        }
        if (barometerChannel_ != null) {
          output.writeMessage(2, getBarometerChannel());
        }
        if (locationChannel_ != null) {
          output.writeMessage(3, getLocationChannel());
        }
        if (accelerometerChannel_ != null) {
          output.writeMessage(4, getAccelerometerChannel());
        }
        if (gyroscopeChannel_ != null) {
          output.writeMessage(5, getGyroscopeChannel());
        }
        if (magnetometerChannel_ != null) {
          output.writeMessage(6, getMagnetometerChannel());
        }
        if (lightChannel_ != null) {
          output.writeMessage(7, getLightChannel());
        }
        if (infraredChannel_ != null) {
          output.writeMessage(8, getInfraredChannel());
        }
        if (imageChannel_ != null) {
          output.writeMessage(9, getImageChannel());
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            10);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (audioChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getAudioChannel());
        }
        if (barometerChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getBarometerChannel());
        }
        if (locationChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLocationChannel());
        }
        if (accelerometerChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getAccelerometerChannel());
        }
        if (gyroscopeChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getGyroscopeChannel());
        }
        if (magnetometerChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getMagnetometerChannel());
        }
        if (lightChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getLightChannel());
        }
        if (infraredChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, getInfraredChannel());
        }
        if (imageChannel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, getImageChannel());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels) obj;

        boolean result = true;
        result = result && (hasAudioChannel() == other.hasAudioChannel());
        if (hasAudioChannel()) {
          result = result && getAudioChannel()
              .equals(other.getAudioChannel());
        }
        result = result && (hasBarometerChannel() == other.hasBarometerChannel());
        if (hasBarometerChannel()) {
          result = result && getBarometerChannel()
              .equals(other.getBarometerChannel());
        }
        result = result && (hasLocationChannel() == other.hasLocationChannel());
        if (hasLocationChannel()) {
          result = result && getLocationChannel()
              .equals(other.getLocationChannel());
        }
        result = result && (hasAccelerometerChannel() == other.hasAccelerometerChannel());
        if (hasAccelerometerChannel()) {
          result = result && getAccelerometerChannel()
              .equals(other.getAccelerometerChannel());
        }
        result = result && (hasGyroscopeChannel() == other.hasGyroscopeChannel());
        if (hasGyroscopeChannel()) {
          result = result && getGyroscopeChannel()
              .equals(other.getGyroscopeChannel());
        }
        result = result && (hasMagnetometerChannel() == other.hasMagnetometerChannel());
        if (hasMagnetometerChannel()) {
          result = result && getMagnetometerChannel()
              .equals(other.getMagnetometerChannel());
        }
        result = result && (hasLightChannel() == other.hasLightChannel());
        if (hasLightChannel()) {
          result = result && getLightChannel()
              .equals(other.getLightChannel());
        }
        result = result && (hasInfraredChannel() == other.hasInfraredChannel());
        if (hasInfraredChannel()) {
          result = result && getInfraredChannel()
              .equals(other.getInfraredChannel());
        }
        result = result && (hasImageChannel() == other.hasImageChannel());
        if (hasImageChannel()) {
          result = result && getImageChannel()
              .equals(other.getImageChannel());
        }
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAudioChannel()) {
          hash = (37 * hash) + AUDIO_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getAudioChannel().hashCode();
        }
        if (hasBarometerChannel()) {
          hash = (37 * hash) + BAROMETER_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getBarometerChannel().hashCode();
        }
        if (hasLocationChannel()) {
          hash = (37 * hash) + LOCATION_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getLocationChannel().hashCode();
        }
        if (hasAccelerometerChannel()) {
          hash = (37 * hash) + ACCELEROMETER_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getAccelerometerChannel().hashCode();
        }
        if (hasGyroscopeChannel()) {
          hash = (37 * hash) + GYROSCOPE_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getGyroscopeChannel().hashCode();
        }
        if (hasMagnetometerChannel()) {
          hash = (37 * hash) + MAGNETOMETER_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getMagnetometerChannel().hashCode();
        }
        if (hasLightChannel()) {
          hash = (37 * hash) + LIGHT_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getLightChannel().hashCode();
        }
        if (hasInfraredChannel()) {
          hash = (37 * hash) + INFRARED_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getInfraredChannel().hashCode();
        }
        if (hasImageChannel()) {
          hash = (37 * hash) + IMAGE_CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getImageChannel().hashCode();
        }
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SensorChannels}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SensorChannels)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 10:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 10:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (audioChannelBuilder_ == null) {
            audioChannel_ = null;
          } else {
            audioChannel_ = null;
            audioChannelBuilder_ = null;
          }
          if (barometerChannelBuilder_ == null) {
            barometerChannel_ = null;
          } else {
            barometerChannel_ = null;
            barometerChannelBuilder_ = null;
          }
          if (locationChannelBuilder_ == null) {
            locationChannel_ = null;
          } else {
            locationChannel_ = null;
            locationChannelBuilder_ = null;
          }
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannel_ = null;
          } else {
            accelerometerChannel_ = null;
            accelerometerChannelBuilder_ = null;
          }
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannel_ = null;
          } else {
            gyroscopeChannel_ = null;
            gyroscopeChannelBuilder_ = null;
          }
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannel_ = null;
          } else {
            magnetometerChannel_ = null;
            magnetometerChannelBuilder_ = null;
          }
          if (lightChannelBuilder_ == null) {
            lightChannel_ = null;
          } else {
            lightChannel_ = null;
            lightChannelBuilder_ = null;
          }
          if (infraredChannelBuilder_ == null) {
            infraredChannel_ = null;
          } else {
            infraredChannel_ = null;
            infraredChannelBuilder_ = null;
          }
          if (imageChannelBuilder_ == null) {
            imageChannel_ = null;
          } else {
            imageChannel_ = null;
            imageChannelBuilder_ = null;
          }
          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (audioChannelBuilder_ == null) {
            result.audioChannel_ = audioChannel_;
          } else {
            result.audioChannel_ = audioChannelBuilder_.build();
          }
          if (barometerChannelBuilder_ == null) {
            result.barometerChannel_ = barometerChannel_;
          } else {
            result.barometerChannel_ = barometerChannelBuilder_.build();
          }
          if (locationChannelBuilder_ == null) {
            result.locationChannel_ = locationChannel_;
          } else {
            result.locationChannel_ = locationChannelBuilder_.build();
          }
          if (accelerometerChannelBuilder_ == null) {
            result.accelerometerChannel_ = accelerometerChannel_;
          } else {
            result.accelerometerChannel_ = accelerometerChannelBuilder_.build();
          }
          if (gyroscopeChannelBuilder_ == null) {
            result.gyroscopeChannel_ = gyroscopeChannel_;
          } else {
            result.gyroscopeChannel_ = gyroscopeChannelBuilder_.build();
          }
          if (magnetometerChannelBuilder_ == null) {
            result.magnetometerChannel_ = magnetometerChannel_;
          } else {
            result.magnetometerChannel_ = magnetometerChannelBuilder_.build();
          }
          if (lightChannelBuilder_ == null) {
            result.lightChannel_ = lightChannel_;
          } else {
            result.lightChannel_ = lightChannelBuilder_.build();
          }
          if (infraredChannelBuilder_ == null) {
            result.infraredChannel_ = infraredChannel_;
          } else {
            result.infraredChannel_ = infraredChannelBuilder_.build();
          }
          if (imageChannelBuilder_ == null) {
            result.imageChannel_ = imageChannel_;
          } else {
            result.imageChannel_ = imageChannelBuilder_.build();
          }
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance()) return this;
          if (other.hasAudioChannel()) {
            mergeAudioChannel(other.getAudioChannel());
          }
          if (other.hasBarometerChannel()) {
            mergeBarometerChannel(other.getBarometerChannel());
          }
          if (other.hasLocationChannel()) {
            mergeLocationChannel(other.getLocationChannel());
          }
          if (other.hasAccelerometerChannel()) {
            mergeAccelerometerChannel(other.getAccelerometerChannel());
          }
          if (other.hasGyroscopeChannel()) {
            mergeGyroscopeChannel(other.getGyroscopeChannel());
          }
          if (other.hasMagnetometerChannel()) {
            mergeMagnetometerChannel(other.getMagnetometerChannel());
          }
          if (other.hasLightChannel()) {
            mergeLightChannel(other.getLightChannel());
          }
          if (other.hasInfraredChannel()) {
            mergeInfraredChannel(other.getInfraredChannel());
          }
          if (other.hasImageChannel()) {
            mergeImageChannel(other.getImageChannel());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel audioChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder> audioChannelBuilder_;
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public boolean hasAudioChannel() {
          return audioChannelBuilder_ != null || audioChannel_ != null;
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel getAudioChannel() {
          if (audioChannelBuilder_ == null) {
            return audioChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.getDefaultInstance() : audioChannel_;
          } else {
            return audioChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public Builder setAudioChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel value) {
          if (audioChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            audioChannel_ = value;
            onChanged();
          } else {
            audioChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public Builder setAudioChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder builderForValue) {
          if (audioChannelBuilder_ == null) {
            audioChannel_ = builderForValue.build();
            onChanged();
          } else {
            audioChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public Builder mergeAudioChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel value) {
          if (audioChannelBuilder_ == null) {
            if (audioChannel_ != null) {
              audioChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.newBuilder(audioChannel_).mergeFrom(value).buildPartial();
            } else {
              audioChannel_ = value;
            }
            onChanged();
          } else {
            audioChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public Builder clearAudioChannel() {
          if (audioChannelBuilder_ == null) {
            audioChannel_ = null;
            onChanged();
          } else {
            audioChannel_ = null;
            audioChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder getAudioChannelBuilder() {
          
          onChanged();
          return getAudioChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder getAudioChannelOrBuilder() {
          if (audioChannelBuilder_ != null) {
            return audioChannelBuilder_.getMessageOrBuilder();
          } else {
            return audioChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.getDefaultInstance() : audioChannel_;
          }
        }
        /**
         * <pre>
         * The audio channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.AudioChannel audio_channel = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder> 
            getAudioChannelFieldBuilder() {
          if (audioChannelBuilder_ == null) {
            audioChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.AudioChannelOrBuilder>(
                    getAudioChannel(),
                    getParentForChildren(),
                    isClean());
            audioChannel_ = null;
          }
          return audioChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel barometerChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> barometerChannelBuilder_;
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public boolean hasBarometerChannel() {
          return barometerChannelBuilder_ != null || barometerChannel_ != null;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getBarometerChannel() {
          if (barometerChannelBuilder_ == null) {
            return barometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : barometerChannel_;
          } else {
            return barometerChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder setBarometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (barometerChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            barometerChannel_ = value;
            onChanged();
          } else {
            barometerChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder setBarometerChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder builderForValue) {
          if (barometerChannelBuilder_ == null) {
            barometerChannel_ = builderForValue.build();
            onChanged();
          } else {
            barometerChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder mergeBarometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (barometerChannelBuilder_ == null) {
            if (barometerChannel_ != null) {
              barometerChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder(barometerChannel_).mergeFrom(value).buildPartial();
            } else {
              barometerChannel_ = value;
            }
            onChanged();
          } else {
            barometerChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public Builder clearBarometerChannel() {
          if (barometerChannelBuilder_ == null) {
            barometerChannel_ = null;
            onChanged();
          } else {
            barometerChannel_ = null;
            barometerChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder getBarometerChannelBuilder() {
          
          onChanged();
          return getBarometerChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getBarometerChannelOrBuilder() {
          if (barometerChannelBuilder_ != null) {
            return barometerChannelBuilder_.getMessageOrBuilder();
          } else {
            return barometerChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : barometerChannel_;
          }
        }
        /**
         * <pre>
         * The barometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel barometer_channel = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> 
            getBarometerChannelFieldBuilder() {
          if (barometerChannelBuilder_ == null) {
            barometerChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder>(
                    getBarometerChannel(),
                    getParentForChildren(),
                    isClean());
            barometerChannel_ = null;
          }
          return barometerChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel locationChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder> locationChannelBuilder_;
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public boolean hasLocationChannel() {
          return locationChannelBuilder_ != null || locationChannel_ != null;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel getLocationChannel() {
          if (locationChannelBuilder_ == null) {
            return locationChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance() : locationChannel_;
          } else {
            return locationChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder setLocationChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel value) {
          if (locationChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            locationChannel_ = value;
            onChanged();
          } else {
            locationChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder setLocationChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder builderForValue) {
          if (locationChannelBuilder_ == null) {
            locationChannel_ = builderForValue.build();
            onChanged();
          } else {
            locationChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder mergeLocationChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel value) {
          if (locationChannelBuilder_ == null) {
            if (locationChannel_ != null) {
              locationChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.newBuilder(locationChannel_).mergeFrom(value).buildPartial();
            } else {
              locationChannel_ = value;
            }
            onChanged();
          } else {
            locationChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public Builder clearLocationChannel() {
          if (locationChannelBuilder_ == null) {
            locationChannel_ = null;
            onChanged();
          } else {
            locationChannel_ = null;
            locationChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder getLocationChannelBuilder() {
          
          onChanged();
          return getLocationChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder getLocationChannelOrBuilder() {
          if (locationChannelBuilder_ != null) {
            return locationChannelBuilder_.getMessageOrBuilder();
          } else {
            return locationChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.getDefaultInstance() : locationChannel_;
          }
        }
        /**
         * <pre>
         * The location channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.LocationChannel location_channel = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder> 
            getLocationChannelFieldBuilder() {
          if (locationChannelBuilder_ == null) {
            locationChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.LocationChannelOrBuilder>(
                    getLocationChannel(),
                    getParentForChildren(),
                    isClean());
            locationChannel_ = null;
          }
          return locationChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometerChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> accelerometerChannelBuilder_;
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public boolean hasAccelerometerChannel() {
          return accelerometerChannelBuilder_ != null || accelerometerChannel_ != null;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getAccelerometerChannel() {
          if (accelerometerChannelBuilder_ == null) {
            return accelerometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : accelerometerChannel_;
          } else {
            return accelerometerChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder setAccelerometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (accelerometerChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            accelerometerChannel_ = value;
            onChanged();
          } else {
            accelerometerChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder setAccelerometerChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder builderForValue) {
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannel_ = builderForValue.build();
            onChanged();
          } else {
            accelerometerChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder mergeAccelerometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (accelerometerChannelBuilder_ == null) {
            if (accelerometerChannel_ != null) {
              accelerometerChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder(accelerometerChannel_).mergeFrom(value).buildPartial();
            } else {
              accelerometerChannel_ = value;
            }
            onChanged();
          } else {
            accelerometerChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public Builder clearAccelerometerChannel() {
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannel_ = null;
            onChanged();
          } else {
            accelerometerChannel_ = null;
            accelerometerChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder getAccelerometerChannelBuilder() {
          
          onChanged();
          return getAccelerometerChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getAccelerometerChannelOrBuilder() {
          if (accelerometerChannelBuilder_ != null) {
            return accelerometerChannelBuilder_.getMessageOrBuilder();
          } else {
            return accelerometerChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : accelerometerChannel_;
          }
        }
        /**
         * <pre>
         * The accelerometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel accelerometer_channel = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> 
            getAccelerometerChannelFieldBuilder() {
          if (accelerometerChannelBuilder_ == null) {
            accelerometerChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder>(
                    getAccelerometerChannel(),
                    getParentForChildren(),
                    isClean());
            accelerometerChannel_ = null;
          }
          return accelerometerChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscopeChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> gyroscopeChannelBuilder_;
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public boolean hasGyroscopeChannel() {
          return gyroscopeChannelBuilder_ != null || gyroscopeChannel_ != null;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getGyroscopeChannel() {
          if (gyroscopeChannelBuilder_ == null) {
            return gyroscopeChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : gyroscopeChannel_;
          } else {
            return gyroscopeChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder setGyroscopeChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (gyroscopeChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            gyroscopeChannel_ = value;
            onChanged();
          } else {
            gyroscopeChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder setGyroscopeChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder builderForValue) {
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannel_ = builderForValue.build();
            onChanged();
          } else {
            gyroscopeChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder mergeGyroscopeChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (gyroscopeChannelBuilder_ == null) {
            if (gyroscopeChannel_ != null) {
              gyroscopeChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder(gyroscopeChannel_).mergeFrom(value).buildPartial();
            } else {
              gyroscopeChannel_ = value;
            }
            onChanged();
          } else {
            gyroscopeChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public Builder clearGyroscopeChannel() {
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannel_ = null;
            onChanged();
          } else {
            gyroscopeChannel_ = null;
            gyroscopeChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder getGyroscopeChannelBuilder() {
          
          onChanged();
          return getGyroscopeChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getGyroscopeChannelOrBuilder() {
          if (gyroscopeChannelBuilder_ != null) {
            return gyroscopeChannelBuilder_.getMessageOrBuilder();
          } else {
            return gyroscopeChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : gyroscopeChannel_;
          }
        }
        /**
         * <pre>
         * The gyroscope channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel gyroscope_channel = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> 
            getGyroscopeChannelFieldBuilder() {
          if (gyroscopeChannelBuilder_ == null) {
            gyroscopeChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder>(
                    getGyroscopeChannel(),
                    getParentForChildren(),
                    isClean());
            gyroscopeChannel_ = null;
          }
          return gyroscopeChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometerChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> magnetometerChannelBuilder_;
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public boolean hasMagnetometerChannel() {
          return magnetometerChannelBuilder_ != null || magnetometerChannel_ != null;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel getMagnetometerChannel() {
          if (magnetometerChannelBuilder_ == null) {
            return magnetometerChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : magnetometerChannel_;
          } else {
            return magnetometerChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder setMagnetometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (magnetometerChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            magnetometerChannel_ = value;
            onChanged();
          } else {
            magnetometerChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder setMagnetometerChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder builderForValue) {
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannel_ = builderForValue.build();
            onChanged();
          } else {
            magnetometerChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder mergeMagnetometerChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel value) {
          if (magnetometerChannelBuilder_ == null) {
            if (magnetometerChannel_ != null) {
              magnetometerChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.newBuilder(magnetometerChannel_).mergeFrom(value).buildPartial();
            } else {
              magnetometerChannel_ = value;
            }
            onChanged();
          } else {
            magnetometerChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public Builder clearMagnetometerChannel() {
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannel_ = null;
            onChanged();
          } else {
            magnetometerChannel_ = null;
            magnetometerChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder getMagnetometerChannelBuilder() {
          
          onChanged();
          return getMagnetometerChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder getMagnetometerChannelOrBuilder() {
          if (magnetometerChannelBuilder_ != null) {
            return magnetometerChannelBuilder_.getMessageOrBuilder();
          } else {
            return magnetometerChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.getDefaultInstance() : magnetometerChannel_;
          }
        }
        /**
         * <pre>
         * The magnetometer channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.XyzChannel magnetometer_channel = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder> 
            getMagnetometerChannelFieldBuilder() {
          if (magnetometerChannelBuilder_ == null) {
            magnetometerChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.XyzChannelOrBuilder>(
                    getMagnetometerChannel(),
                    getParentForChildren(),
                    isClean());
            magnetometerChannel_ = null;
          }
          return magnetometerChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel lightChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> lightChannelBuilder_;
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public boolean hasLightChannel() {
          return lightChannelBuilder_ != null || lightChannel_ != null;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getLightChannel() {
          if (lightChannelBuilder_ == null) {
            return lightChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : lightChannel_;
          } else {
            return lightChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder setLightChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (lightChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lightChannel_ = value;
            onChanged();
          } else {
            lightChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder setLightChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder builderForValue) {
          if (lightChannelBuilder_ == null) {
            lightChannel_ = builderForValue.build();
            onChanged();
          } else {
            lightChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder mergeLightChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (lightChannelBuilder_ == null) {
            if (lightChannel_ != null) {
              lightChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder(lightChannel_).mergeFrom(value).buildPartial();
            } else {
              lightChannel_ = value;
            }
            onChanged();
          } else {
            lightChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public Builder clearLightChannel() {
          if (lightChannelBuilder_ == null) {
            lightChannel_ = null;
            onChanged();
          } else {
            lightChannel_ = null;
            lightChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder getLightChannelBuilder() {
          
          onChanged();
          return getLightChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getLightChannelOrBuilder() {
          if (lightChannelBuilder_ != null) {
            return lightChannelBuilder_.getMessageOrBuilder();
          } else {
            return lightChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : lightChannel_;
          }
        }
        /**
         * <pre>
         * The light channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel light_channel = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> 
            getLightChannelFieldBuilder() {
          if (lightChannelBuilder_ == null) {
            lightChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder>(
                    getLightChannel(),
                    getParentForChildren(),
                    isClean());
            lightChannel_ = null;
          }
          return lightChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel infraredChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> infraredChannelBuilder_;
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public boolean hasInfraredChannel() {
          return infraredChannelBuilder_ != null || infraredChannel_ != null;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel getInfraredChannel() {
          if (infraredChannelBuilder_ == null) {
            return infraredChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : infraredChannel_;
          } else {
            return infraredChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder setInfraredChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (infraredChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            infraredChannel_ = value;
            onChanged();
          } else {
            infraredChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder setInfraredChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder builderForValue) {
          if (infraredChannelBuilder_ == null) {
            infraredChannel_ = builderForValue.build();
            onChanged();
          } else {
            infraredChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder mergeInfraredChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel value) {
          if (infraredChannelBuilder_ == null) {
            if (infraredChannel_ != null) {
              infraredChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.newBuilder(infraredChannel_).mergeFrom(value).buildPartial();
            } else {
              infraredChannel_ = value;
            }
            onChanged();
          } else {
            infraredChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public Builder clearInfraredChannel() {
          if (infraredChannelBuilder_ == null) {
            infraredChannel_ = null;
            onChanged();
          } else {
            infraredChannel_ = null;
            infraredChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder getInfraredChannelBuilder() {
          
          onChanged();
          return getInfraredChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder getInfraredChannelOrBuilder() {
          if (infraredChannelBuilder_ != null) {
            return infraredChannelBuilder_.getMessageOrBuilder();
          } else {
            return infraredChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.getDefaultInstance() : infraredChannel_;
          }
        }
        /**
         * <pre>
         * The infrared channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.SingleChannel infrared_channel = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder> 
            getInfraredChannelFieldBuilder() {
          if (infraredChannelBuilder_ == null) {
            infraredChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.SingleChannelOrBuilder>(
                    getInfraredChannel(),
                    getParentForChildren(),
                    isClean());
            infraredChannel_ = null;
          }
          return infraredChannelBuilder_;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel imageChannel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder> imageChannelBuilder_;
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public boolean hasImageChannel() {
          return imageChannelBuilder_ != null || imageChannel_ != null;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel getImageChannel() {
          if (imageChannelBuilder_ == null) {
            return imageChannel_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance() : imageChannel_;
          } else {
            return imageChannelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder setImageChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel value) {
          if (imageChannelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            imageChannel_ = value;
            onChanged();
          } else {
            imageChannelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder setImageChannel(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder builderForValue) {
          if (imageChannelBuilder_ == null) {
            imageChannel_ = builderForValue.build();
            onChanged();
          } else {
            imageChannelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder mergeImageChannel(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel value) {
          if (imageChannelBuilder_ == null) {
            if (imageChannel_ != null) {
              imageChannel_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.newBuilder(imageChannel_).mergeFrom(value).buildPartial();
            } else {
              imageChannel_ = value;
            }
            onChanged();
          } else {
            imageChannelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public Builder clearImageChannel() {
          if (imageChannelBuilder_ == null) {
            imageChannel_ = null;
            onChanged();
          } else {
            imageChannel_ = null;
            imageChannelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder getImageChannelBuilder() {
          
          onChanged();
          return getImageChannelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder getImageChannelOrBuilder() {
          if (imageChannelBuilder_ != null) {
            return imageChannelBuilder_.getMessageOrBuilder();
          } else {
            return imageChannel_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.getDefaultInstance() : imageChannel_;
          }
        }
        /**
         * <pre>
         * The image channel
         * </pre>
         *
         * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels.ImageChannel image_channel = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder> 
            getImageChannelFieldBuilder() {
          if (imageChannelBuilder_ == null) {
            imageChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannel.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.ImageChannelOrBuilder>(
                    getImageChannel(),
                    getParentForChildren(),
                    isClean());
            imageChannel_ = null;
          }
          return imageChannelBuilder_;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 10;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SensorChannels)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SensorChannels)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SensorChannels>
          PARSER = new com.google.protobuf.AbstractParser<SensorChannels>() {
        @java.lang.Override
        public SensorChannels parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorChannels(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SensorChannels> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SensorChannels> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PayloadOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.Payload)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
       */
      int getUnitValue();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit();

      /**
       * <code>repeated double values = 2;</code>
       */
      java.util.List<java.lang.Double> getValuesList();
      /**
       * <code>repeated double values = 2;</code>
       */
      int getValuesCount();
      /**
       * <code>repeated double values = 2;</code>
       */
      double getValues(int index);

      /**
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
       */
      boolean hasValueStatistics();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getValueStatistics();
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
       */
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getValueStatisticsOrBuilder();

      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      int getMetadataCount();
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.Payload}
     */
    public  static final class Payload extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.Payload)
        PayloadOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Payload.newBuilder() to construct.
      private Payload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Payload() {
        unit_ = 0;
        values_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Payload(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                unit_ = rawValue;
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  values_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                values_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  values_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  values_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 26: {
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder subBuilder = null;
                if (valueStatistics_ != null) {
                  subBuilder = valueStatistics_.toBuilder();
                }
                valueStatistics_ = input.readMessage(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueStatistics_);
                  valueStatistics_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000008;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = java.util.Collections.unmodifiableList(values_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_Payload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder.class);
      }

      private int bitField0_;
      public static final int UNIT_FIELD_NUMBER = 1;
      private int unit_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
       */
      public int getUnitValue() {
        return unit_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.valueOf(unit_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.UNRECOGNIZED : result;
      }

      public static final int VALUES_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> values_;
      /**
       * <code>repeated double values = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getValuesList() {
        return values_;
      }
      /**
       * <code>repeated double values = 2;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated double values = 2;</code>
       */
      public double getValues(int index) {
        return values_.get(index);
      }
      private int valuesMemoizedSerializedSize = -1;

      public static final int VALUE_STATISTICS_FIELD_NUMBER = 3;
      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics valueStatistics_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
       */
      public boolean hasValueStatistics() {
        return valueStatistics_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getValueStatistics() {
        return valueStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : valueStatistics_;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getValueStatisticsOrBuilder() {
        return getValueStatistics();
      }

      public static final int METADATA_FIELD_NUMBER = 4;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_Payload_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; metadata = 4;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (unit_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.METERS_PER_SECOND_SQUARED.getNumber()) {
          output.writeEnum(1, unit_);
        }
        if (getValuesList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(valuesMemoizedSerializedSize);
        }
        for (int i = 0; i < values_.size(); i++) {
          output.writeDoubleNoTag(values_.get(i));
        }
        if (valueStatistics_ != null) {
          output.writeMessage(3, getValueStatistics());
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            4);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (unit_ != io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.METERS_PER_SECOND_SQUARED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, unit_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getValuesList().size();
          size += dataSize;
          if (!getValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          valuesMemoizedSerializedSize = dataSize;
        }
        if (valueStatistics_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getValueStatistics());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload) obj;

        boolean result = true;
        result = result && unit_ == other.unit_;
        result = result && getValuesList()
            .equals(other.getValuesList());
        result = result && (hasValueStatistics() == other.hasValueStatistics());
        if (hasValueStatistics()) {
          result = result && getValueStatistics()
              .equals(other.getValueStatistics());
        }
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + UNIT_FIELD_NUMBER;
        hash = (53 * hash) + unit_;
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        if (hasValueStatistics()) {
          hash = (37 * hash) + VALUE_STATISTICS_FIELD_NUMBER;
          hash = (53 * hash) + getValueStatistics().hashCode();
        }
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.Payload}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.Payload)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PayloadOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 4:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_Payload_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          unit_ = 0;

          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          if (valueStatisticsBuilder_ == null) {
            valueStatistics_ = null;
          } else {
            valueStatistics_ = null;
            valueStatisticsBuilder_ = null;
          }
          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.unit_ = unit_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.values_ = values_;
          if (valueStatisticsBuilder_ == null) {
            result.valueStatistics_ = valueStatistics_;
          } else {
            result.valueStatistics_ = valueStatisticsBuilder_.build();
          }
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload.getDefaultInstance()) return this;
          if (other.unit_ != 0) {
            setUnitValue(other.getUnitValue());
          }
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
          if (other.hasValueStatistics()) {
            mergeValueStatistics(other.getValueStatistics());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int unit_ = 0;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
         */
        public int getUnitValue() {
          return unit_;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
         */
        public Builder setUnitValue(int value) {
          unit_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit getUnit() {
          @SuppressWarnings("deprecation")
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit result = io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.valueOf(unit_);
          return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit.UNRECOGNIZED : result;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
         */
        public Builder setUnit(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Unit value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          unit_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.Unit unit = 1;</code>
         */
        public Builder clearUnit() {
          
          unit_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> values_ = java.util.Collections.emptyList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = new java.util.ArrayList<java.lang.Double>(values_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public java.util.List<java.lang.Double>
            getValuesList() {
          return java.util.Collections.unmodifiableList(values_);
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public int getValuesCount() {
          return values_.size();
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public double getValues(int index) {
          return values_.get(index);
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public Builder setValues(
            int index, double value) {
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public Builder addValues(double value) {
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double values = 2;</code>
         */
        public Builder clearValues() {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics valueStatistics_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> valueStatisticsBuilder_;
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public boolean hasValueStatistics() {
          return valueStatisticsBuilder_ != null || valueStatistics_ != null;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getValueStatistics() {
          if (valueStatisticsBuilder_ == null) {
            return valueStatistics_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : valueStatistics_;
          } else {
            return valueStatisticsBuilder_.getMessage();
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public Builder setValueStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (valueStatisticsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueStatistics_ = value;
            onChanged();
          } else {
            valueStatisticsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public Builder setValueStatistics(
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder builderForValue) {
          if (valueStatisticsBuilder_ == null) {
            valueStatistics_ = builderForValue.build();
            onChanged();
          } else {
            valueStatisticsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public Builder mergeValueStatistics(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics value) {
          if (valueStatisticsBuilder_ == null) {
            if (valueStatistics_ != null) {
              valueStatistics_ =
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder(valueStatistics_).mergeFrom(value).buildPartial();
            } else {
              valueStatistics_ = value;
            }
            onChanged();
          } else {
            valueStatisticsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public Builder clearValueStatistics() {
          if (valueStatisticsBuilder_ == null) {
            valueStatistics_ = null;
            onChanged();
          } else {
            valueStatistics_ = null;
            valueStatisticsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder getValueStatisticsBuilder() {
          
          onChanged();
          return getValueStatisticsFieldBuilder().getBuilder();
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder getValueStatisticsOrBuilder() {
          if (valueStatisticsBuilder_ != null) {
            return valueStatisticsBuilder_.getMessageOrBuilder();
          } else {
            return valueStatistics_ == null ?
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance() : valueStatistics_;
          }
        }
        /**
         * <code>.redvox_api1000.RedvoxPacket1000.SummaryStatistics value_statistics = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder> 
            getValueStatisticsFieldBuilder() {
          if (valueStatisticsBuilder_ == null) {
            valueStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder>(
                    getValueStatistics(),
                    getParentForChildren(),
                    isClean());
            valueStatistics_ = null;
          }
          return valueStatisticsBuilder_;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <code>map&lt;string, string&gt; metadata = 4;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.Payload)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.Payload)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Payload>
          PARSER = new com.google.protobuf.AbstractParser<Payload>() {
        @java.lang.Override
        public Payload parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Payload(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Payload> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Payload> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Payload getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SummaryStatisticsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The total count of values included in the statistics
       * </pre>
       *
       * <code>double count = 1;</code>
       */
      double getCount();

      /**
       * <pre>
       * The mean of the values
       * </pre>
       *
       * <code>double mean = 2;</code>
       */
      double getMean();

      /**
       * <pre>
       * The median of the values
       * </pre>
       *
       * <code>double median = 3;</code>
       */
      double getMedian();

      /**
       * <pre>
       * The mode of the values
       * </pre>
       *
       * <code>double mode = 4;</code>
       */
      double getMode();

      /**
       * <pre>
       * The variance of the values
       * </pre>
       *
       * <code>double variance = 5;</code>
       */
      double getVariance();

      /**
       * <pre>
       * The minimum value
       * </pre>
       *
       * <code>double min = 6;</code>
       */
      double getMin();

      /**
       * <pre>
       * The maximum value
       * </pre>
       *
       * <code>double max = 7;</code>
       */
      double getMax();

      /**
       * <pre>
       * The range of the values
       * </pre>
       *
       * <code>double range = 8;</code>
       */
      double getRange();

      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */
      int getMetadataCount();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */
      boolean containsMetadata(
          java.lang.String key);
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.String>
      getMetadata();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */
      java.util.Map<java.lang.String, java.lang.String>
      getMetadataMap();
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue);
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      java.lang.String getMetadataOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SummaryStatistics}
     */
    public  static final class SummaryStatistics extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
        SummaryStatisticsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SummaryStatistics.newBuilder() to construct.
      private SummaryStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SummaryStatistics() {
        count_ = 0D;
        mean_ = 0D;
        median_ = 0D;
        mode_ = 0D;
        variance_ = 0D;
        min_ = 0D;
        max_ = 0D;
        range_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SummaryStatistics(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {

                count_ = input.readDouble();
                break;
              }
              case 17: {

                mean_ = input.readDouble();
                break;
              }
              case 25: {

                median_ = input.readDouble();
                break;
              }
              case 33: {

                mode_ = input.readDouble();
                break;
              }
              case 41: {

                variance_ = input.readDouble();
                break;
              }
              case 49: {

                min_ = input.readDouble();
                break;
              }
              case 57: {

                max_ = input.readDouble();
                break;
              }
              case 65: {

                range_ = input.readDouble();
                break;
              }
              case 74: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  metadata_ = com.google.protobuf.MapField.newMapField(
                      MetadataDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000100;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                metadata__ = input.readMessage(
                    MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                metadata_.getMutableMap().put(
                    metadata__.getKey(), metadata__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder.class);
      }

      private int bitField0_;
      public static final int COUNT_FIELD_NUMBER = 1;
      private double count_;
      /**
       * <pre>
       * The total count of values included in the statistics
       * </pre>
       *
       * <code>double count = 1;</code>
       */
      public double getCount() {
        return count_;
      }

      public static final int MEAN_FIELD_NUMBER = 2;
      private double mean_;
      /**
       * <pre>
       * The mean of the values
       * </pre>
       *
       * <code>double mean = 2;</code>
       */
      public double getMean() {
        return mean_;
      }

      public static final int MEDIAN_FIELD_NUMBER = 3;
      private double median_;
      /**
       * <pre>
       * The median of the values
       * </pre>
       *
       * <code>double median = 3;</code>
       */
      public double getMedian() {
        return median_;
      }

      public static final int MODE_FIELD_NUMBER = 4;
      private double mode_;
      /**
       * <pre>
       * The mode of the values
       * </pre>
       *
       * <code>double mode = 4;</code>
       */
      public double getMode() {
        return mode_;
      }

      public static final int VARIANCE_FIELD_NUMBER = 5;
      private double variance_;
      /**
       * <pre>
       * The variance of the values
       * </pre>
       *
       * <code>double variance = 5;</code>
       */
      public double getVariance() {
        return variance_;
      }

      public static final int MIN_FIELD_NUMBER = 6;
      private double min_;
      /**
       * <pre>
       * The minimum value
       * </pre>
       *
       * <code>double min = 6;</code>
       */
      public double getMin() {
        return min_;
      }

      public static final int MAX_FIELD_NUMBER = 7;
      private double max_;
      /**
       * <pre>
       * The maximum value
       * </pre>
       *
       * <code>double max = 7;</code>
       */
      public double getMax() {
        return max_;
      }

      public static final int RANGE_FIELD_NUMBER = 8;
      private double range_;
      /**
       * <pre>
       * The range of the values
       * </pre>
       *
       * <code>double range = 8;</code>
       */
      public double getRange() {
        return range_;
      }

      public static final int METADATA_FIELD_NUMBER = 9;
      private static final class MetadataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.String> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.String>newDefaultInstance(
                    io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 9;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (count_ != 0D) {
          output.writeDouble(1, count_);
        }
        if (mean_ != 0D) {
          output.writeDouble(2, mean_);
        }
        if (median_ != 0D) {
          output.writeDouble(3, median_);
        }
        if (mode_ != 0D) {
          output.writeDouble(4, mode_);
        }
        if (variance_ != 0D) {
          output.writeDouble(5, variance_);
        }
        if (min_ != 0D) {
          output.writeDouble(6, min_);
        }
        if (max_ != 0D) {
          output.writeDouble(7, max_);
        }
        if (range_ != 0D) {
          output.writeDouble(8, range_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetMetadata(),
            MetadataDefaultEntryHolder.defaultEntry,
            9);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (count_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, count_);
        }
        if (mean_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, mean_);
        }
        if (median_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, median_);
        }
        if (mode_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, mode_);
        }
        if (variance_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, variance_);
        }
        if (min_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, min_);
        }
        if (max_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, max_);
        }
        if (range_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, range_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
             : internalGetMetadata().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
          metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, metadata__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics) obj;

        boolean result = true;
        result = result && (
            java.lang.Double.doubleToLongBits(getCount())
            == java.lang.Double.doubleToLongBits(
                other.getCount()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMean())
            == java.lang.Double.doubleToLongBits(
                other.getMean()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMedian())
            == java.lang.Double.doubleToLongBits(
                other.getMedian()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMode())
            == java.lang.Double.doubleToLongBits(
                other.getMode()));
        result = result && (
            java.lang.Double.doubleToLongBits(getVariance())
            == java.lang.Double.doubleToLongBits(
                other.getVariance()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMin())
            == java.lang.Double.doubleToLongBits(
                other.getMin()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMax())
            == java.lang.Double.doubleToLongBits(
                other.getMax()));
        result = result && (
            java.lang.Double.doubleToLongBits(getRange())
            == java.lang.Double.doubleToLongBits(
                other.getRange()));
        result = result && internalGetMetadata().equals(
            other.internalGetMetadata());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCount()));
        hash = (37 * hash) + MEAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMean()));
        hash = (37 * hash) + MEDIAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMedian()));
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMode()));
        hash = (37 * hash) + VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVariance()));
        hash = (37 * hash) + MIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMin()));
        hash = (37 * hash) + MAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMax()));
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRange()));
        if (!internalGetMetadata().getMap().isEmpty()) {
          hash = (37 * hash) + METADATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetMetadata().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.RedvoxPacket1000.SummaryStatistics}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatisticsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 9:
              return internalGetMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 9:
              return internalGetMutableMetadata();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          count_ = 0D;

          mean_ = 0D;

          median_ = 0D;

          mode_ = 0D;

          variance_ = 0D;

          min_ = 0D;

          max_ = 0D;

          range_ = 0D;

          internalGetMutableMetadata().clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics build() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.count_ = count_;
          result.mean_ = mean_;
          result.median_ = median_;
          result.mode_ = mode_;
          result.variance_ = variance_;
          result.min_ = min_;
          result.max_ = max_;
          result.range_ = range_;
          result.metadata_ = internalGetMetadata();
          result.metadata_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics.getDefaultInstance()) return this;
          if (other.getCount() != 0D) {
            setCount(other.getCount());
          }
          if (other.getMean() != 0D) {
            setMean(other.getMean());
          }
          if (other.getMedian() != 0D) {
            setMedian(other.getMedian());
          }
          if (other.getMode() != 0D) {
            setMode(other.getMode());
          }
          if (other.getVariance() != 0D) {
            setVariance(other.getVariance());
          }
          if (other.getMin() != 0D) {
            setMin(other.getMin());
          }
          if (other.getMax() != 0D) {
            setMax(other.getMax());
          }
          if (other.getRange() != 0D) {
            setRange(other.getRange());
          }
          internalGetMutableMetadata().mergeFrom(
              other.internalGetMetadata());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double count_ ;
        /**
         * <pre>
         * The total count of values included in the statistics
         * </pre>
         *
         * <code>double count = 1;</code>
         */
        public double getCount() {
          return count_;
        }
        /**
         * <pre>
         * The total count of values included in the statistics
         * </pre>
         *
         * <code>double count = 1;</code>
         */
        public Builder setCount(double value) {
          
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The total count of values included in the statistics
         * </pre>
         *
         * <code>double count = 1;</code>
         */
        public Builder clearCount() {
          
          count_ = 0D;
          onChanged();
          return this;
        }

        private double mean_ ;
        /**
         * <pre>
         * The mean of the values
         * </pre>
         *
         * <code>double mean = 2;</code>
         */
        public double getMean() {
          return mean_;
        }
        /**
         * <pre>
         * The mean of the values
         * </pre>
         *
         * <code>double mean = 2;</code>
         */
        public Builder setMean(double value) {
          
          mean_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The mean of the values
         * </pre>
         *
         * <code>double mean = 2;</code>
         */
        public Builder clearMean() {
          
          mean_ = 0D;
          onChanged();
          return this;
        }

        private double median_ ;
        /**
         * <pre>
         * The median of the values
         * </pre>
         *
         * <code>double median = 3;</code>
         */
        public double getMedian() {
          return median_;
        }
        /**
         * <pre>
         * The median of the values
         * </pre>
         *
         * <code>double median = 3;</code>
         */
        public Builder setMedian(double value) {
          
          median_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The median of the values
         * </pre>
         *
         * <code>double median = 3;</code>
         */
        public Builder clearMedian() {
          
          median_ = 0D;
          onChanged();
          return this;
        }

        private double mode_ ;
        /**
         * <pre>
         * The mode of the values
         * </pre>
         *
         * <code>double mode = 4;</code>
         */
        public double getMode() {
          return mode_;
        }
        /**
         * <pre>
         * The mode of the values
         * </pre>
         *
         * <code>double mode = 4;</code>
         */
        public Builder setMode(double value) {
          
          mode_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The mode of the values
         * </pre>
         *
         * <code>double mode = 4;</code>
         */
        public Builder clearMode() {
          
          mode_ = 0D;
          onChanged();
          return this;
        }

        private double variance_ ;
        /**
         * <pre>
         * The variance of the values
         * </pre>
         *
         * <code>double variance = 5;</code>
         */
        public double getVariance() {
          return variance_;
        }
        /**
         * <pre>
         * The variance of the values
         * </pre>
         *
         * <code>double variance = 5;</code>
         */
        public Builder setVariance(double value) {
          
          variance_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The variance of the values
         * </pre>
         *
         * <code>double variance = 5;</code>
         */
        public Builder clearVariance() {
          
          variance_ = 0D;
          onChanged();
          return this;
        }

        private double min_ ;
        /**
         * <pre>
         * The minimum value
         * </pre>
         *
         * <code>double min = 6;</code>
         */
        public double getMin() {
          return min_;
        }
        /**
         * <pre>
         * The minimum value
         * </pre>
         *
         * <code>double min = 6;</code>
         */
        public Builder setMin(double value) {
          
          min_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The minimum value
         * </pre>
         *
         * <code>double min = 6;</code>
         */
        public Builder clearMin() {
          
          min_ = 0D;
          onChanged();
          return this;
        }

        private double max_ ;
        /**
         * <pre>
         * The maximum value
         * </pre>
         *
         * <code>double max = 7;</code>
         */
        public double getMax() {
          return max_;
        }
        /**
         * <pre>
         * The maximum value
         * </pre>
         *
         * <code>double max = 7;</code>
         */
        public Builder setMax(double value) {
          
          max_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The maximum value
         * </pre>
         *
         * <code>double max = 7;</code>
         */
        public Builder clearMax() {
          
          max_ = 0D;
          onChanged();
          return this;
        }

        private double range_ ;
        /**
         * <pre>
         * The range of the values
         * </pre>
         *
         * <code>double range = 8;</code>
         */
        public double getRange() {
          return range_;
        }
        /**
         * <pre>
         * The range of the values
         * </pre>
         *
         * <code>double range = 8;</code>
         */
        public Builder setRange(double value) {
          
          range_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The range of the values
         * </pre>
         *
         * <code>double range = 8;</code>
         */
        public Builder clearRange() {
          
          range_ = 0D;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.String> metadata_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
          if (metadata_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          return metadata_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
          onChanged();;
          if (metadata_ == null) {
            metadata_ = com.google.protobuf.MapField.newMapField(
                MetadataDefaultEntryHolder.defaultEntry);
          }
          if (!metadata_.isMutable()) {
            metadata_ = metadata_.copy();
          }
          return metadata_;
        }

        public int getMetadataCount() {
          return internalGetMetadata().getMap().size();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public boolean containsMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetMetadata().getMap().containsKey(key);
        }
        /**
         * Use {@link #getMetadataMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
          return getMetadataMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
          return internalGetMetadata().getMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public java.lang.String getMetadataOrDefault(
            java.lang.String key,
            java.lang.String defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public java.lang.String getMetadataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.String> map =
              internalGetMetadata().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearMetadata() {
          internalGetMutableMetadata().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public Builder removeMetadata(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
          return internalGetMutableMetadata().getMutableMap();
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */
        public Builder putMetadata(
            java.lang.String key,
            java.lang.String value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableMetadata().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A map from string to string for including untyped metadata
         * </pre>
         *
         * <code>map&lt;string, string&gt; metadata = 9;</code>
         */

        public Builder putAllMetadata(
            java.util.Map<java.lang.String, java.lang.String> values) {
          internalGetMutableMetadata().getMutableMap()
              .putAll(values);
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000.SummaryStatistics)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SummaryStatistics>
          PARSER = new com.google.protobuf.AbstractParser<SummaryStatistics>() {
        @java.lang.Override
        public SummaryStatistics parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SummaryStatistics(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SummaryStatistics> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SummaryStatistics> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SummaryStatistics getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int API_FIELD_NUMBER = 1;
    private double api_;
    /**
     * <pre>
     * Top level packet fields
     * </pre>
     *
     * <code>double api = 1;</code>
     */
    public double getApi() {
      return api_;
    }

    public static final int USER_INFORMATION_FIELD_NUMBER = 2;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation userInformation_;
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    public boolean hasUserInformation() {
      return userInformation_ != null;
    }
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getUserInformation() {
      return userInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance() : userInformation_;
    }
    /**
     * <pre>
     * User information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder getUserInformationOrBuilder() {
      return getUserInformation();
    }

    public static final int STATION_INFORMATION_FIELD_NUMBER = 3;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation stationInformation_;
    /**
     * <pre>
     * Station information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
     */
    public boolean hasStationInformation() {
      return stationInformation_ != null;
    }
    /**
     * <pre>
     * Station information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation getStationInformation() {
      return stationInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDefaultInstance() : stationInformation_;
    }
    /**
     * <pre>
     * Station information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder getStationInformationOrBuilder() {
      return getStationInformation();
    }

    public static final int PACKET_INFORMATION_FIELD_NUMBER = 4;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation packetInformation_;
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    public boolean hasPacketInformation() {
      return packetInformation_ != null;
    }
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getPacketInformation() {
      return packetInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance() : packetInformation_;
    }
    /**
     * <pre>
     * Packet information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder getPacketInformationOrBuilder() {
      return getPacketInformation();
    }

    public static final int TIMING_INFORMATION_FIELD_NUMBER = 5;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation timingInformation_;
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    public boolean hasTimingInformation() {
      return timingInformation_ != null;
    }
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getTimingInformation() {
      return timingInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance() : timingInformation_;
    }
    /**
     * <pre>
     * Timing information
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder getTimingInformationOrBuilder() {
      return getTimingInformation();
    }

    public static final int SERVER_INFORMATION_FIELD_NUMBER = 6;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation serverInformation_;
    /**
     * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
     */
    public boolean hasServerInformation() {
      return serverInformation_ != null;
    }
    /**
     * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation getServerInformation() {
      return serverInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.getDefaultInstance() : serverInformation_;
    }
    /**
     * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder getServerInformationOrBuilder() {
      return getServerInformation();
    }

    public static final int SENSOR_CHANNELS_FIELD_NUMBER = 7;
    private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels sensorChannels_;
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
     */
    public boolean hasSensorChannels() {
      return sensorChannels_ != null;
    }
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getSensorChannels() {
      return sensorChannels_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance() : sensorChannels_;
    }
    /**
     * <pre>
     * Sensor channels
     * </pre>
     *
     * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder getSensorChannelsOrBuilder() {
      return getSensorChannels();
    }

    public static final int METADATA_FIELD_NUMBER = 8;
    private static final class MetadataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metadata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMetadata() {
      if (metadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      return metadata_;
    }

    public int getMetadataCount() {
      return internalGetMetadata().getMap().size();
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */

    public boolean containsMetadata(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
      return internalGetMetadata().getMap();
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */

    public java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map from string to string for including untyped metadata
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 8;</code>
     */

    public java.lang.String getMetadataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (api_ != 0D) {
        output.writeDouble(1, api_);
      }
      if (userInformation_ != null) {
        output.writeMessage(2, getUserInformation());
      }
      if (stationInformation_ != null) {
        output.writeMessage(3, getStationInformation());
      }
      if (packetInformation_ != null) {
        output.writeMessage(4, getPacketInformation());
      }
      if (timingInformation_ != null) {
        output.writeMessage(5, getTimingInformation());
      }
      if (serverInformation_ != null) {
        output.writeMessage(6, getServerInformation());
      }
      if (sensorChannels_ != null) {
        output.writeMessage(7, getSensorChannels());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetadata(),
          MetadataDefaultEntryHolder.defaultEntry,
          8);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (api_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, api_);
      }
      if (userInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserInformation());
      }
      if (stationInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStationInformation());
      }
      if (packetInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPacketInformation());
      }
      if (timingInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTimingInformation());
      }
      if (serverInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getServerInformation());
      }
      if (sensorChannels_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSensorChannels());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMetadata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, metadata__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 other = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getApi())
          == java.lang.Double.doubleToLongBits(
              other.getApi()));
      result = result && (hasUserInformation() == other.hasUserInformation());
      if (hasUserInformation()) {
        result = result && getUserInformation()
            .equals(other.getUserInformation());
      }
      result = result && (hasStationInformation() == other.hasStationInformation());
      if (hasStationInformation()) {
        result = result && getStationInformation()
            .equals(other.getStationInformation());
      }
      result = result && (hasPacketInformation() == other.hasPacketInformation());
      if (hasPacketInformation()) {
        result = result && getPacketInformation()
            .equals(other.getPacketInformation());
      }
      result = result && (hasTimingInformation() == other.hasTimingInformation());
      if (hasTimingInformation()) {
        result = result && getTimingInformation()
            .equals(other.getTimingInformation());
      }
      result = result && (hasServerInformation() == other.hasServerInformation());
      if (hasServerInformation()) {
        result = result && getServerInformation()
            .equals(other.getServerInformation());
      }
      result = result && (hasSensorChannels() == other.hasSensorChannels());
      if (hasSensorChannels()) {
        result = result && getSensorChannels()
            .equals(other.getSensorChannels());
      }
      result = result && internalGetMetadata().equals(
          other.internalGetMetadata());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + API_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getApi()));
      if (hasUserInformation()) {
        hash = (37 * hash) + USER_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getUserInformation().hashCode();
      }
      if (hasStationInformation()) {
        hash = (37 * hash) + STATION_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getStationInformation().hashCode();
      }
      if (hasPacketInformation()) {
        hash = (37 * hash) + PACKET_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getPacketInformation().hashCode();
      }
      if (hasTimingInformation()) {
        hash = (37 * hash) + TIMING_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getTimingInformation().hashCode();
      }
      if (hasServerInformation()) {
        hash = (37 * hash) + SERVER_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getServerInformation().hashCode();
      }
      if (hasSensorChannels()) {
        hash = (37 * hash) + SENSOR_CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getSensorChannels().hashCode();
      }
      if (!internalGetMetadata().getMap().isEmpty()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetadata().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code redvox_api1000.RedvoxPacket1000}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.RedvoxPacket1000)
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 8:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 8:
            return internalGetMutableMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.class, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        api_ = 0D;

        if (userInformationBuilder_ == null) {
          userInformation_ = null;
        } else {
          userInformation_ = null;
          userInformationBuilder_ = null;
        }
        if (stationInformationBuilder_ == null) {
          stationInformation_ = null;
        } else {
          stationInformation_ = null;
          stationInformationBuilder_ = null;
        }
        if (packetInformationBuilder_ == null) {
          packetInformation_ = null;
        } else {
          packetInformation_ = null;
          packetInformationBuilder_ = null;
        }
        if (timingInformationBuilder_ == null) {
          timingInformation_ = null;
        } else {
          timingInformation_ = null;
          timingInformationBuilder_ = null;
        }
        if (serverInformationBuilder_ == null) {
          serverInformation_ = null;
        } else {
          serverInformation_ = null;
          serverInformationBuilder_ = null;
        }
        if (sensorChannelsBuilder_ == null) {
          sensorChannels_ = null;
        } else {
          sensorChannels_ = null;
          sensorChannelsBuilder_ = null;
        }
        internalGetMutableMetadata().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 build() {
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 result = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.api_ = api_;
        if (userInformationBuilder_ == null) {
          result.userInformation_ = userInformation_;
        } else {
          result.userInformation_ = userInformationBuilder_.build();
        }
        if (stationInformationBuilder_ == null) {
          result.stationInformation_ = stationInformation_;
        } else {
          result.stationInformation_ = stationInformationBuilder_.build();
        }
        if (packetInformationBuilder_ == null) {
          result.packetInformation_ = packetInformation_;
        } else {
          result.packetInformation_ = packetInformationBuilder_.build();
        }
        if (timingInformationBuilder_ == null) {
          result.timingInformation_ = timingInformation_;
        } else {
          result.timingInformation_ = timingInformationBuilder_.build();
        }
        if (serverInformationBuilder_ == null) {
          result.serverInformation_ = serverInformation_;
        } else {
          result.serverInformation_ = serverInformationBuilder_.build();
        }
        if (sensorChannelsBuilder_ == null) {
          result.sensorChannels_ = sensorChannels_;
        } else {
          result.sensorChannels_ = sensorChannelsBuilder_.build();
        }
        result.metadata_ = internalGetMetadata();
        result.metadata_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.getDefaultInstance()) return this;
        if (other.getApi() != 0D) {
          setApi(other.getApi());
        }
        if (other.hasUserInformation()) {
          mergeUserInformation(other.getUserInformation());
        }
        if (other.hasStationInformation()) {
          mergeStationInformation(other.getStationInformation());
        }
        if (other.hasPacketInformation()) {
          mergePacketInformation(other.getPacketInformation());
        }
        if (other.hasTimingInformation()) {
          mergeTimingInformation(other.getTimingInformation());
        }
        if (other.hasServerInformation()) {
          mergeServerInformation(other.getServerInformation());
        }
        if (other.hasSensorChannels()) {
          mergeSensorChannels(other.getSensorChannels());
        }
        internalGetMutableMetadata().mergeFrom(
            other.internalGetMetadata());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double api_ ;
      /**
       * <pre>
       * Top level packet fields
       * </pre>
       *
       * <code>double api = 1;</code>
       */
      public double getApi() {
        return api_;
      }
      /**
       * <pre>
       * Top level packet fields
       * </pre>
       *
       * <code>double api = 1;</code>
       */
      public Builder setApi(double value) {
        
        api_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Top level packet fields
       * </pre>
       *
       * <code>double api = 1;</code>
       */
      public Builder clearApi() {
        
        api_ = 0D;
        onChanged();
        return this;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation userInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder> userInformationBuilder_;
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public boolean hasUserInformation() {
        return userInformationBuilder_ != null || userInformation_ != null;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation getUserInformation() {
        if (userInformationBuilder_ == null) {
          return userInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance() : userInformation_;
        } else {
          return userInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder setUserInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation value) {
        if (userInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userInformation_ = value;
          onChanged();
        } else {
          userInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder setUserInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder builderForValue) {
        if (userInformationBuilder_ == null) {
          userInformation_ = builderForValue.build();
          onChanged();
        } else {
          userInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder mergeUserInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation value) {
        if (userInformationBuilder_ == null) {
          if (userInformation_ != null) {
            userInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.newBuilder(userInformation_).mergeFrom(value).buildPartial();
          } else {
            userInformation_ = value;
          }
          onChanged();
        } else {
          userInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public Builder clearUserInformation() {
        if (userInformationBuilder_ == null) {
          userInformation_ = null;
          onChanged();
        } else {
          userInformation_ = null;
          userInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder getUserInformationBuilder() {
        
        onChanged();
        return getUserInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder getUserInformationOrBuilder() {
        if (userInformationBuilder_ != null) {
          return userInformationBuilder_.getMessageOrBuilder();
        } else {
          return userInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.getDefaultInstance() : userInformation_;
        }
      }
      /**
       * <pre>
       * User information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.UserInformation user_information = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder> 
          getUserInformationFieldBuilder() {
        if (userInformationBuilder_ == null) {
          userInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.UserInformationOrBuilder>(
                  getUserInformation(),
                  getParentForChildren(),
                  isClean());
          userInformation_ = null;
        }
        return userInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation stationInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder> stationInformationBuilder_;
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public boolean hasStationInformation() {
        return stationInformationBuilder_ != null || stationInformation_ != null;
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation getStationInformation() {
        if (stationInformationBuilder_ == null) {
          return stationInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDefaultInstance() : stationInformation_;
        } else {
          return stationInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public Builder setStationInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation value) {
        if (stationInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stationInformation_ = value;
          onChanged();
        } else {
          stationInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public Builder setStationInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder builderForValue) {
        if (stationInformationBuilder_ == null) {
          stationInformation_ = builderForValue.build();
          onChanged();
        } else {
          stationInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public Builder mergeStationInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation value) {
        if (stationInformationBuilder_ == null) {
          if (stationInformation_ != null) {
            stationInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.newBuilder(stationInformation_).mergeFrom(value).buildPartial();
          } else {
            stationInformation_ = value;
          }
          onChanged();
        } else {
          stationInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public Builder clearStationInformation() {
        if (stationInformationBuilder_ == null) {
          stationInformation_ = null;
          onChanged();
        } else {
          stationInformation_ = null;
          stationInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder getStationInformationBuilder() {
        
        onChanged();
        return getStationInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder getStationInformationOrBuilder() {
        if (stationInformationBuilder_ != null) {
          return stationInformationBuilder_.getMessageOrBuilder();
        } else {
          return stationInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.getDefaultInstance() : stationInformation_;
        }
      }
      /**
       * <pre>
       * Station information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.StationInformation station_information = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder> 
          getStationInformationFieldBuilder() {
        if (stationInformationBuilder_ == null) {
          stationInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.StationInformationOrBuilder>(
                  getStationInformation(),
                  getParentForChildren(),
                  isClean());
          stationInformation_ = null;
        }
        return stationInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation packetInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder> packetInformationBuilder_;
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public boolean hasPacketInformation() {
        return packetInformationBuilder_ != null || packetInformation_ != null;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation getPacketInformation() {
        if (packetInformationBuilder_ == null) {
          return packetInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance() : packetInformation_;
        } else {
          return packetInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder setPacketInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation value) {
        if (packetInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packetInformation_ = value;
          onChanged();
        } else {
          packetInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder setPacketInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder builderForValue) {
        if (packetInformationBuilder_ == null) {
          packetInformation_ = builderForValue.build();
          onChanged();
        } else {
          packetInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder mergePacketInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation value) {
        if (packetInformationBuilder_ == null) {
          if (packetInformation_ != null) {
            packetInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.newBuilder(packetInformation_).mergeFrom(value).buildPartial();
          } else {
            packetInformation_ = value;
          }
          onChanged();
        } else {
          packetInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public Builder clearPacketInformation() {
        if (packetInformationBuilder_ == null) {
          packetInformation_ = null;
          onChanged();
        } else {
          packetInformation_ = null;
          packetInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder getPacketInformationBuilder() {
        
        onChanged();
        return getPacketInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder getPacketInformationOrBuilder() {
        if (packetInformationBuilder_ != null) {
          return packetInformationBuilder_.getMessageOrBuilder();
        } else {
          return packetInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.getDefaultInstance() : packetInformation_;
        }
      }
      /**
       * <pre>
       * Packet information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.PacketInformation packet_information = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder> 
          getPacketInformationFieldBuilder() {
        if (packetInformationBuilder_ == null) {
          packetInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.PacketInformationOrBuilder>(
                  getPacketInformation(),
                  getParentForChildren(),
                  isClean());
          packetInformation_ = null;
        }
        return packetInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation timingInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder> timingInformationBuilder_;
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public boolean hasTimingInformation() {
        return timingInformationBuilder_ != null || timingInformation_ != null;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation getTimingInformation() {
        if (timingInformationBuilder_ == null) {
          return timingInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance() : timingInformation_;
        } else {
          return timingInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder setTimingInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation value) {
        if (timingInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timingInformation_ = value;
          onChanged();
        } else {
          timingInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder setTimingInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder builderForValue) {
        if (timingInformationBuilder_ == null) {
          timingInformation_ = builderForValue.build();
          onChanged();
        } else {
          timingInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder mergeTimingInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation value) {
        if (timingInformationBuilder_ == null) {
          if (timingInformation_ != null) {
            timingInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.newBuilder(timingInformation_).mergeFrom(value).buildPartial();
          } else {
            timingInformation_ = value;
          }
          onChanged();
        } else {
          timingInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public Builder clearTimingInformation() {
        if (timingInformationBuilder_ == null) {
          timingInformation_ = null;
          onChanged();
        } else {
          timingInformation_ = null;
          timingInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder getTimingInformationBuilder() {
        
        onChanged();
        return getTimingInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder getTimingInformationOrBuilder() {
        if (timingInformationBuilder_ != null) {
          return timingInformationBuilder_.getMessageOrBuilder();
        } else {
          return timingInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.getDefaultInstance() : timingInformation_;
        }
      }
      /**
       * <pre>
       * Timing information
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.TimingInformation timing_information = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder> 
          getTimingInformationFieldBuilder() {
        if (timingInformationBuilder_ == null) {
          timingInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.TimingInformationOrBuilder>(
                  getTimingInformation(),
                  getParentForChildren(),
                  isClean());
          timingInformation_ = null;
        }
        return timingInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation serverInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder> serverInformationBuilder_;
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public boolean hasServerInformation() {
        return serverInformationBuilder_ != null || serverInformation_ != null;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation getServerInformation() {
        if (serverInformationBuilder_ == null) {
          return serverInformation_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.getDefaultInstance() : serverInformation_;
        } else {
          return serverInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public Builder setServerInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation value) {
        if (serverInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverInformation_ = value;
          onChanged();
        } else {
          serverInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public Builder setServerInformation(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder builderForValue) {
        if (serverInformationBuilder_ == null) {
          serverInformation_ = builderForValue.build();
          onChanged();
        } else {
          serverInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public Builder mergeServerInformation(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation value) {
        if (serverInformationBuilder_ == null) {
          if (serverInformation_ != null) {
            serverInformation_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.newBuilder(serverInformation_).mergeFrom(value).buildPartial();
          } else {
            serverInformation_ = value;
          }
          onChanged();
        } else {
          serverInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public Builder clearServerInformation() {
        if (serverInformationBuilder_ == null) {
          serverInformation_ = null;
          onChanged();
        } else {
          serverInformation_ = null;
          serverInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder getServerInformationBuilder() {
        
        onChanged();
        return getServerInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder getServerInformationOrBuilder() {
        if (serverInformationBuilder_ != null) {
          return serverInformationBuilder_.getMessageOrBuilder();
        } else {
          return serverInformation_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.getDefaultInstance() : serverInformation_;
        }
      }
      /**
       * <code>.redvox_api1000.RedvoxPacket1000.ServerInformation server_information = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder> 
          getServerInformationFieldBuilder() {
        if (serverInformationBuilder_ == null) {
          serverInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformation.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.ServerInformationOrBuilder>(
                  getServerInformation(),
                  getParentForChildren(),
                  isClean());
          serverInformation_ = null;
        }
        return serverInformationBuilder_;
      }

      private io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels sensorChannels_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder> sensorChannelsBuilder_;
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public boolean hasSensorChannels() {
        return sensorChannelsBuilder_ != null || sensorChannels_ != null;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels getSensorChannels() {
        if (sensorChannelsBuilder_ == null) {
          return sensorChannels_ == null ? io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance() : sensorChannels_;
        } else {
          return sensorChannelsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public Builder setSensorChannels(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels value) {
        if (sensorChannelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensorChannels_ = value;
          onChanged();
        } else {
          sensorChannelsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public Builder setSensorChannels(
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder builderForValue) {
        if (sensorChannelsBuilder_ == null) {
          sensorChannels_ = builderForValue.build();
          onChanged();
        } else {
          sensorChannelsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public Builder mergeSensorChannels(io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels value) {
        if (sensorChannelsBuilder_ == null) {
          if (sensorChannels_ != null) {
            sensorChannels_ =
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.newBuilder(sensorChannels_).mergeFrom(value).buildPartial();
          } else {
            sensorChannels_ = value;
          }
          onChanged();
        } else {
          sensorChannelsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public Builder clearSensorChannels() {
        if (sensorChannelsBuilder_ == null) {
          sensorChannels_ = null;
          onChanged();
        } else {
          sensorChannels_ = null;
          sensorChannelsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder getSensorChannelsBuilder() {
        
        onChanged();
        return getSensorChannelsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder getSensorChannelsOrBuilder() {
        if (sensorChannelsBuilder_ != null) {
          return sensorChannelsBuilder_.getMessageOrBuilder();
        } else {
          return sensorChannels_ == null ?
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.getDefaultInstance() : sensorChannels_;
        }
      }
      /**
       * <pre>
       * Sensor channels
       * </pre>
       *
       * <code>.redvox_api1000.RedvoxPacket1000.SensorChannels sensor_channels = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder> 
          getSensorChannelsFieldBuilder() {
        if (sensorChannelsBuilder_ == null) {
          sensorChannelsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannels.Builder, io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000.SensorChannelsOrBuilder>(
                  getSensorChannels(),
                  getParentForChildren(),
                  isClean());
          sensorChannels_ = null;
        }
        return sensorChannelsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMetadata() {
        onChanged();;
        if (metadata_ == null) {
          metadata_ = com.google.protobuf.MapField.newMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        if (!metadata_.isMutable()) {
          metadata_ = metadata_.copy();
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */

      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetadata() {
        internalGetMutableMetadata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */

      public Builder removeMetadata(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetadata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMetadata() {
        return internalGetMutableMetadata().getMutableMap();
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */
      public Builder putMetadata(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetadata().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * A map from string to string for including untyped metadata
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 8;</code>
       */

      public Builder putAllMetadata(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMetadata().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.RedvoxPacket1000)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.RedvoxPacket1000)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedvoxPacket1000>
        PARSER = new com.google.protobuf.AbstractParser<RedvoxPacket1000>() {
      @java.lang.Override
      public RedvoxPacket1000 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RedvoxPacket1000(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedvoxPacket1000> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedvoxPacket1000> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.RedvoxPacket1000 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptedRedvoxPacket1000OrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.EncryptedRedvoxPacket1000)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * redvox encrypt(compress(EncryptedRedvoxPacket1000.Header))
     * </pre>
     *
     * <code>bytes header = 1;</code>
     */
    com.google.protobuf.ByteString getHeader();

    /**
     * <pre>
     * user encrypt(compress(RedvoxPacketApi1000))
     * </pre>
     *
     * <code>bytes packet = 2;</code>
     */
    com.google.protobuf.ByteString getPacket();
  }
  /**
   * <pre>
   * Message type for providing E2E encryption.
   * The header is encrypted via RedVox keys.
   * The body is encrypted via user keys.
   * Each payload consists of bytes from the following transformations
   *   Serialization: Object -&gt; serialize to bytes -&gt; LZ4 frame compress -&gt; encrypt -&gt; payload bytes
   *   Deserialization: Payload bytes -&gt; decrypt -&gt; LZ4 frame decompress -&gt; deserialize from bytes -&gt; object
   * </pre>
   *
   * Protobuf type {@code redvox_api1000.EncryptedRedvoxPacket1000}
   */
  public  static final class EncryptedRedvoxPacket1000 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.EncryptedRedvoxPacket1000)
      EncryptedRedvoxPacket1000OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptedRedvoxPacket1000.newBuilder() to construct.
    private EncryptedRedvoxPacket1000(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptedRedvoxPacket1000() {
      header_ = com.google.protobuf.ByteString.EMPTY;
      packet_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptedRedvoxPacket1000(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              header_ = input.readBytes();
              break;
            }
            case 18: {

              packet_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.class, io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Builder.class);
    }

    public interface HeaderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:redvox_api1000.EncryptedRedvoxPacket1000.Header)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string station_id = 1;</code>
       */
      java.lang.String getStationId();
      /**
       * <code>string station_id = 1;</code>
       */
      com.google.protobuf.ByteString
          getStationIdBytes();

      /**
       * <code>string station_uuid = 2;</code>
       */
      java.lang.String getStationUuid();
      /**
       * <code>string station_uuid = 2;</code>
       */
      com.google.protobuf.ByteString
          getStationUuidBytes();

      /**
       * <code>string auth_token = 3;</code>
       */
      java.lang.String getAuthToken();
      /**
       * <code>string auth_token = 3;</code>
       */
      com.google.protobuf.ByteString
          getAuthTokenBytes();

      /**
       * <code>string auth_email = 4;</code>
       */
      java.lang.String getAuthEmail();
      /**
       * <code>string auth_email = 4;</code>
       */
      com.google.protobuf.ByteString
          getAuthEmailBytes();
    }
    /**
     * Protobuf type {@code redvox_api1000.EncryptedRedvoxPacket1000.Header}
     */
    public  static final class Header extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:redvox_api1000.EncryptedRedvoxPacket1000.Header)
        HeaderOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Header.newBuilder() to construct.
      private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Header() {
        stationId_ = "";
        stationUuid_ = "";
        authToken_ = "";
        authEmail_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Header(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                stationId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                stationUuid_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                authToken_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                authEmail_ = s;
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.class, io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.Builder.class);
      }

      public static final int STATION_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object stationId_;
      /**
       * <code>string station_id = 1;</code>
       */
      public java.lang.String getStationId() {
        java.lang.Object ref = stationId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stationId_ = s;
          return s;
        }
      }
      /**
       * <code>string station_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStationIdBytes() {
        java.lang.Object ref = stationId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STATION_UUID_FIELD_NUMBER = 2;
      private volatile java.lang.Object stationUuid_;
      /**
       * <code>string station_uuid = 2;</code>
       */
      public java.lang.String getStationUuid() {
        java.lang.Object ref = stationUuid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stationUuid_ = s;
          return s;
        }
      }
      /**
       * <code>string station_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStationUuidBytes() {
        java.lang.Object ref = stationUuid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stationUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTH_TOKEN_FIELD_NUMBER = 3;
      private volatile java.lang.Object authToken_;
      /**
       * <code>string auth_token = 3;</code>
       */
      public java.lang.String getAuthToken() {
        java.lang.Object ref = authToken_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authToken_ = s;
          return s;
        }
      }
      /**
       * <code>string auth_token = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAuthTokenBytes() {
        java.lang.Object ref = authToken_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTH_EMAIL_FIELD_NUMBER = 4;
      private volatile java.lang.Object authEmail_;
      /**
       * <code>string auth_email = 4;</code>
       */
      public java.lang.String getAuthEmail() {
        java.lang.Object ref = authEmail_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authEmail_ = s;
          return s;
        }
      }
      /**
       * <code>string auth_email = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAuthEmailBytes() {
        java.lang.Object ref = authEmail_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authEmail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getStationIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stationId_);
        }
        if (!getStationUuidBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stationUuid_);
        }
        if (!getAuthTokenBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, authToken_);
        }
        if (!getAuthEmailBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, authEmail_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getStationIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stationId_);
        }
        if (!getStationUuidBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stationUuid_);
        }
        if (!getAuthTokenBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, authToken_);
        }
        if (!getAuthEmailBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, authEmail_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header)) {
          return super.equals(obj);
        }
        io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header other = (io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header) obj;

        boolean result = true;
        result = result && getStationId()
            .equals(other.getStationId());
        result = result && getStationUuid()
            .equals(other.getStationUuid());
        result = result && getAuthToken()
            .equals(other.getAuthToken());
        result = result && getAuthEmail()
            .equals(other.getAuthEmail());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + STATION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getStationId().hashCode();
        hash = (37 * hash) + STATION_UUID_FIELD_NUMBER;
        hash = (53 * hash) + getStationUuid().hashCode();
        hash = (37 * hash) + AUTH_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getAuthToken().hashCode();
        hash = (37 * hash) + AUTH_EMAIL_FIELD_NUMBER;
        hash = (53 * hash) + getAuthEmail().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code redvox_api1000.EncryptedRedvoxPacket1000.Header}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:redvox_api1000.EncryptedRedvoxPacket1000.Header)
          io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.HeaderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.class, io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.Builder.class);
        }

        // Construct using io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          stationId_ = "";

          stationUuid_ = "";

          authToken_ = "";

          authEmail_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_descriptor;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header getDefaultInstanceForType() {
          return io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.getDefaultInstance();
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header build() {
          io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header buildPartial() {
          io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header result = new io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header(this);
          result.stationId_ = stationId_;
          result.stationUuid_ = stationUuid_;
          result.authToken_ = authToken_;
          result.authEmail_ = authEmail_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header) {
            return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header other) {
          if (other == io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header.getDefaultInstance()) return this;
          if (!other.getStationId().isEmpty()) {
            stationId_ = other.stationId_;
            onChanged();
          }
          if (!other.getStationUuid().isEmpty()) {
            stationUuid_ = other.stationUuid_;
            onChanged();
          }
          if (!other.getAuthToken().isEmpty()) {
            authToken_ = other.authToken_;
            onChanged();
          }
          if (!other.getAuthEmail().isEmpty()) {
            authEmail_ = other.authEmail_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object stationId_ = "";
        /**
         * <code>string station_id = 1;</code>
         */
        public java.lang.String getStationId() {
          java.lang.Object ref = stationId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            stationId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string station_id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getStationIdBytes() {
          java.lang.Object ref = stationId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stationId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string station_id = 1;</code>
         */
        public Builder setStationId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          stationId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string station_id = 1;</code>
         */
        public Builder clearStationId() {
          
          stationId_ = getDefaultInstance().getStationId();
          onChanged();
          return this;
        }
        /**
         * <code>string station_id = 1;</code>
         */
        public Builder setStationIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          stationId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object stationUuid_ = "";
        /**
         * <code>string station_uuid = 2;</code>
         */
        public java.lang.String getStationUuid() {
          java.lang.Object ref = stationUuid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            stationUuid_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string station_uuid = 2;</code>
         */
        public com.google.protobuf.ByteString
            getStationUuidBytes() {
          java.lang.Object ref = stationUuid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stationUuid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string station_uuid = 2;</code>
         */
        public Builder setStationUuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          stationUuid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string station_uuid = 2;</code>
         */
        public Builder clearStationUuid() {
          
          stationUuid_ = getDefaultInstance().getStationUuid();
          onChanged();
          return this;
        }
        /**
         * <code>string station_uuid = 2;</code>
         */
        public Builder setStationUuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          stationUuid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object authToken_ = "";
        /**
         * <code>string auth_token = 3;</code>
         */
        public java.lang.String getAuthToken() {
          java.lang.Object ref = authToken_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authToken_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string auth_token = 3;</code>
         */
        public com.google.protobuf.ByteString
            getAuthTokenBytes() {
          java.lang.Object ref = authToken_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authToken_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string auth_token = 3;</code>
         */
        public Builder setAuthToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authToken_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string auth_token = 3;</code>
         */
        public Builder clearAuthToken() {
          
          authToken_ = getDefaultInstance().getAuthToken();
          onChanged();
          return this;
        }
        /**
         * <code>string auth_token = 3;</code>
         */
        public Builder setAuthTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authToken_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object authEmail_ = "";
        /**
         * <code>string auth_email = 4;</code>
         */
        public java.lang.String getAuthEmail() {
          java.lang.Object ref = authEmail_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            authEmail_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string auth_email = 4;</code>
         */
        public com.google.protobuf.ByteString
            getAuthEmailBytes() {
          java.lang.Object ref = authEmail_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            authEmail_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string auth_email = 4;</code>
         */
        public Builder setAuthEmail(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          authEmail_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string auth_email = 4;</code>
         */
        public Builder clearAuthEmail() {
          
          authEmail_ = getDefaultInstance().getAuthEmail();
          onChanged();
          return this;
        }
        /**
         * <code>string auth_email = 4;</code>
         */
        public Builder setAuthEmailBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          authEmail_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:redvox_api1000.EncryptedRedvoxPacket1000.Header)
      }

      // @@protoc_insertion_point(class_scope:redvox_api1000.EncryptedRedvoxPacket1000.Header)
      private static final io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header();
      }

      public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Header>
          PARSER = new com.google.protobuf.AbstractParser<Header>() {
        @java.lang.Override
        public Header parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Header(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Header> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Header> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Header getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString header_;
    /**
     * <pre>
     * redvox encrypt(compress(EncryptedRedvoxPacket1000.Header))
     * </pre>
     *
     * <code>bytes header = 1;</code>
     */
    public com.google.protobuf.ByteString getHeader() {
      return header_;
    }

    public static final int PACKET_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString packet_;
    /**
     * <pre>
     * user encrypt(compress(RedvoxPacketApi1000))
     * </pre>
     *
     * <code>bytes packet = 2;</code>
     */
    public com.google.protobuf.ByteString getPacket() {
      return packet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!header_.isEmpty()) {
        output.writeBytes(1, header_);
      }
      if (!packet_.isEmpty()) {
        output.writeBytes(2, packet_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!header_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, header_);
      }
      if (!packet_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, packet_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 other = (io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000) obj;

      boolean result = true;
      result = result && getHeader()
          .equals(other.getHeader());
      result = result && getPacket()
          .equals(other.getPacket());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getHeader().hashCode();
      hash = (37 * hash) + PACKET_FIELD_NUMBER;
      hash = (53 * hash) + getPacket().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message type for providing E2E encryption.
     * The header is encrypted via RedVox keys.
     * The body is encrypted via user keys.
     * Each payload consists of bytes from the following transformations
     *   Serialization: Object -&gt; serialize to bytes -&gt; LZ4 frame compress -&gt; encrypt -&gt; payload bytes
     *   Deserialization: Payload bytes -&gt; decrypt -&gt; LZ4 frame decompress -&gt; deserialize from bytes -&gt; object
     * </pre>
     *
     * Protobuf type {@code redvox_api1000.EncryptedRedvoxPacket1000}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.EncryptedRedvoxPacket1000)
        io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.class, io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        header_ = com.google.protobuf.ByteString.EMPTY;

        packet_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 build() {
        io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 result = new io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000(this);
        result.header_ = header_;
        result.packet_ = packet_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000.getDefaultInstance()) return this;
        if (other.getHeader() != com.google.protobuf.ByteString.EMPTY) {
          setHeader(other.getHeader());
        }
        if (other.getPacket() != com.google.protobuf.ByteString.EMPTY) {
          setPacket(other.getPacket());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString header_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * redvox encrypt(compress(EncryptedRedvoxPacket1000.Header))
       * </pre>
       *
       * <code>bytes header = 1;</code>
       */
      public com.google.protobuf.ByteString getHeader() {
        return header_;
      }
      /**
       * <pre>
       * redvox encrypt(compress(EncryptedRedvoxPacket1000.Header))
       * </pre>
       *
       * <code>bytes header = 1;</code>
       */
      public Builder setHeader(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        header_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * redvox encrypt(compress(EncryptedRedvoxPacket1000.Header))
       * </pre>
       *
       * <code>bytes header = 1;</code>
       */
      public Builder clearHeader() {
        
        header_ = getDefaultInstance().getHeader();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString packet_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * user encrypt(compress(RedvoxPacketApi1000))
       * </pre>
       *
       * <code>bytes packet = 2;</code>
       */
      public com.google.protobuf.ByteString getPacket() {
        return packet_;
      }
      /**
       * <pre>
       * user encrypt(compress(RedvoxPacketApi1000))
       * </pre>
       *
       * <code>bytes packet = 2;</code>
       */
      public Builder setPacket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        packet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user encrypt(compress(RedvoxPacketApi1000))
       * </pre>
       *
       * <code>bytes packet = 2;</code>
       */
      public Builder clearPacket() {
        
        packet_ = getDefaultInstance().getPacket();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.EncryptedRedvoxPacket1000)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.EncryptedRedvoxPacket1000)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncryptedRedvoxPacket1000>
        PARSER = new com.google.protobuf.AbstractParser<EncryptedRedvoxPacket1000>() {
      @java.lang.Override
      public EncryptedRedvoxPacket1000 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptedRedvoxPacket1000(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptedRedvoxPacket1000> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptedRedvoxPacket1000> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.EncryptedRedvoxPacket1000 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcquisitionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.AcquisitionRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The compressed packet to send.
     * </pre>
     *
     * <code>bytes compressed_redvox_packet_1000 = 1;</code>
     */
    com.google.protobuf.ByteString getCompressedRedvoxPacket1000();

    /**
     * <pre>
     * A checksum of the bytes in field 1.
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    long getChecksum();
  }
  /**
   * <pre>
   * Message for sending RedVox data to a redvox.io data acquisition service.
   * </pre>
   *
   * Protobuf type {@code redvox_api1000.AcquisitionRequest}
   */
  public  static final class AcquisitionRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.AcquisitionRequest)
      AcquisitionRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AcquisitionRequest.newBuilder() to construct.
    private AcquisitionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcquisitionRequest() {
      compressedRedvoxPacket1000_ = com.google.protobuf.ByteString.EMPTY;
      checksum_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AcquisitionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              compressedRedvoxPacket1000_ = input.readBytes();
              break;
            }
            case 16: {

              checksum_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.Builder.class);
    }

    public static final int COMPRESSED_REDVOX_PACKET_1000_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString compressedRedvoxPacket1000_;
    /**
     * <pre>
     * The compressed packet to send.
     * </pre>
     *
     * <code>bytes compressed_redvox_packet_1000 = 1;</code>
     */
    public com.google.protobuf.ByteString getCompressedRedvoxPacket1000() {
      return compressedRedvoxPacket1000_;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 2;
    private long checksum_;
    /**
     * <pre>
     * A checksum of the bytes in field 1.
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    public long getChecksum() {
      return checksum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!compressedRedvoxPacket1000_.isEmpty()) {
        output.writeBytes(1, compressedRedvoxPacket1000_);
      }
      if (checksum_ != 0L) {
        output.writeInt64(2, checksum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!compressedRedvoxPacket1000_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, compressedRedvoxPacket1000_);
      }
      if (checksum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, checksum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest other = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest) obj;

      boolean result = true;
      result = result && getCompressedRedvoxPacket1000()
          .equals(other.getCompressedRedvoxPacket1000());
      result = result && (getChecksum()
          == other.getChecksum());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMPRESSED_REDVOX_PACKET_1000_FIELD_NUMBER;
      hash = (53 * hash) + getCompressedRedvoxPacket1000().hashCode();
      hash = (37 * hash) + CHECKSUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChecksum());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message for sending RedVox data to a redvox.io data acquisition service.
     * </pre>
     *
     * Protobuf type {@code redvox_api1000.AcquisitionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.AcquisitionRequest)
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        compressedRedvoxPacket1000_ = com.google.protobuf.ByteString.EMPTY;

        checksum_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionRequest_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest build() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest result = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest(this);
        result.compressedRedvoxPacket1000_ = compressedRedvoxPacket1000_;
        result.checksum_ = checksum_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest.getDefaultInstance()) return this;
        if (other.getCompressedRedvoxPacket1000() != com.google.protobuf.ByteString.EMPTY) {
          setCompressedRedvoxPacket1000(other.getCompressedRedvoxPacket1000());
        }
        if (other.getChecksum() != 0L) {
          setChecksum(other.getChecksum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString compressedRedvoxPacket1000_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The compressed packet to send.
       * </pre>
       *
       * <code>bytes compressed_redvox_packet_1000 = 1;</code>
       */
      public com.google.protobuf.ByteString getCompressedRedvoxPacket1000() {
        return compressedRedvoxPacket1000_;
      }
      /**
       * <pre>
       * The compressed packet to send.
       * </pre>
       *
       * <code>bytes compressed_redvox_packet_1000 = 1;</code>
       */
      public Builder setCompressedRedvoxPacket1000(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        compressedRedvoxPacket1000_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compressed packet to send.
       * </pre>
       *
       * <code>bytes compressed_redvox_packet_1000 = 1;</code>
       */
      public Builder clearCompressedRedvoxPacket1000() {
        
        compressedRedvoxPacket1000_ = getDefaultInstance().getCompressedRedvoxPacket1000();
        onChanged();
        return this;
      }

      private long checksum_ ;
      /**
       * <pre>
       * A checksum of the bytes in field 1.
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public long getChecksum() {
        return checksum_;
      }
      /**
       * <pre>
       * A checksum of the bytes in field 1.
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder setChecksum(long value) {
        
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A checksum of the bytes in field 1.
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder clearChecksum() {
        
        checksum_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.AcquisitionRequest)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.AcquisitionRequest)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcquisitionRequest>
        PARSER = new com.google.protobuf.AbstractParser<AcquisitionRequest>() {
      @java.lang.Override
      public AcquisitionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AcquisitionRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcquisitionRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AcquisitionRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcquisitionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.AcquisitionResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    int getResponseTypeValue();
    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType getResponseType();

    /**
     * <pre>
     * Checksum computed by server
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    long getChecksum();

    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    java.lang.String getDetails();
    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    com.google.protobuf.ByteString
        getDetailsBytes();

    /**
     * <pre>
     * If set, client to should attempt to resend the file
     * </pre>
     *
     * <code>bool resend = 4;</code>
     */
    boolean getResend();
  }
  /**
   * <pre>
   * Response from data acquisition services.
   * </pre>
   *
   * Protobuf type {@code redvox_api1000.AcquisitionResponse}
   */
  public  static final class AcquisitionResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.AcquisitionResponse)
      AcquisitionResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AcquisitionResponse.newBuilder() to construct.
    private AcquisitionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcquisitionResponse() {
      responseType_ = 0;
      checksum_ = 0L;
      details_ = "";
      resend_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AcquisitionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              responseType_ = rawValue;
              break;
            }
            case 16: {

              checksum_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              details_ = s;
              break;
            }
            case 32: {

              resend_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code redvox_api1000.AcquisitionResponse.ResponseType}
     */
    public enum ResponseType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * No issues with packet
       * </pre>
       *
       * <code>OK = 0;</code>
       */
      OK(0),
      /**
       * <pre>
       * An authentication error has occurred
       * </pre>
       *
       * <code>AUTH_ERROR = 1;</code>
       */
      AUTH_ERROR(1),
      /**
       * <pre>
       * An error with the data decoding or data quality
       * </pre>
       *
       * <code>DATA_ERROR = 2;</code>
       */
      DATA_ERROR(2),
      /**
       * <pre>
       * Any other errors
       * </pre>
       *
       * <code>OTHER_ERROR = 3;</code>
       */
      OTHER_ERROR(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * No issues with packet
       * </pre>
       *
       * <code>OK = 0;</code>
       */
      public static final int OK_VALUE = 0;
      /**
       * <pre>
       * An authentication error has occurred
       * </pre>
       *
       * <code>AUTH_ERROR = 1;</code>
       */
      public static final int AUTH_ERROR_VALUE = 1;
      /**
       * <pre>
       * An error with the data decoding or data quality
       * </pre>
       *
       * <code>DATA_ERROR = 2;</code>
       */
      public static final int DATA_ERROR_VALUE = 2;
      /**
       * <pre>
       * Any other errors
       * </pre>
       *
       * <code>OTHER_ERROR = 3;</code>
       */
      public static final int OTHER_ERROR_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseType valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseType forNumber(int value) {
        switch (value) {
          case 0: return OK;
          case 1: return AUTH_ERROR;
          case 2: return DATA_ERROR;
          case 3: return OTHER_ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseType>() {
              public ResponseType findValueByNumber(int number) {
                return ResponseType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ResponseType[] VALUES = values();

      public static ResponseType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:redvox_api1000.AcquisitionResponse.ResponseType)
    }

    public static final int RESPONSE_TYPE_FIELD_NUMBER = 1;
    private int responseType_;
    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    public int getResponseTypeValue() {
      return responseType_;
    }
    /**
     * <pre>
     * Response type (as above)
     * </pre>
     *
     * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
     */
    public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType getResponseType() {
      @SuppressWarnings("deprecation")
      io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType result = io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.valueOf(responseType_);
      return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.UNRECOGNIZED : result;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 2;
    private long checksum_;
    /**
     * <pre>
     * Checksum computed by server
     * </pre>
     *
     * <code>int64 checksum = 2;</code>
     */
    public long getChecksum() {
      return checksum_;
    }

    public static final int DETAILS_FIELD_NUMBER = 3;
    private volatile java.lang.Object details_;
    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    public java.lang.String getDetails() {
      java.lang.Object ref = details_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        details_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Any other error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDetailsBytes() {
      java.lang.Object ref = details_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        details_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESEND_FIELD_NUMBER = 4;
    private boolean resend_;
    /**
     * <pre>
     * If set, client to should attempt to resend the file
     * </pre>
     *
     * <code>bool resend = 4;</code>
     */
    public boolean getResend() {
      return resend_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseType_ != io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.OK.getNumber()) {
        output.writeEnum(1, responseType_);
      }
      if (checksum_ != 0L) {
        output.writeInt64(2, checksum_);
      }
      if (!getDetailsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, details_);
      }
      if (resend_ != false) {
        output.writeBool(4, resend_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responseType_ != io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, responseType_);
      }
      if (checksum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, checksum_);
      }
      if (!getDetailsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, details_);
      }
      if (resend_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, resend_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse other = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse) obj;

      boolean result = true;
      result = result && responseType_ == other.responseType_;
      result = result && (getChecksum()
          == other.getChecksum());
      result = result && getDetails()
          .equals(other.getDetails());
      result = result && (getResend()
          == other.getResend());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESPONSE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + responseType_;
      hash = (37 * hash) + CHECKSUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChecksum());
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getDetails().hashCode();
      hash = (37 * hash) + RESEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResend());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response from data acquisition services.
     * </pre>
     *
     * Protobuf type {@code redvox_api1000.AcquisitionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.AcquisitionResponse)
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        responseType_ = 0;

        checksum_ = 0L;

        details_ = "";

        resend_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_AcquisitionResponse_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse build() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse result = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse(this);
        result.responseType_ = responseType_;
        result.checksum_ = checksum_;
        result.details_ = details_;
        result.resend_ = resend_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.getDefaultInstance()) return this;
        if (other.responseType_ != 0) {
          setResponseTypeValue(other.getResponseTypeValue());
        }
        if (other.getChecksum() != 0L) {
          setChecksum(other.getChecksum());
        }
        if (!other.getDetails().isEmpty()) {
          details_ = other.details_;
          onChanged();
        }
        if (other.getResend() != false) {
          setResend(other.getResend());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int responseType_ = 0;
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public int getResponseTypeValue() {
        return responseType_;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public Builder setResponseTypeValue(int value) {
        responseType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType getResponseType() {
        @SuppressWarnings("deprecation")
        io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType result = io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.valueOf(responseType_);
        return result == null ? io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public Builder setResponseType(io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse.ResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        responseType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Response type (as above)
       * </pre>
       *
       * <code>.redvox_api1000.AcquisitionResponse.ResponseType response_type = 1;</code>
       */
      public Builder clearResponseType() {
        
        responseType_ = 0;
        onChanged();
        return this;
      }

      private long checksum_ ;
      /**
       * <pre>
       * Checksum computed by server
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public long getChecksum() {
        return checksum_;
      }
      /**
       * <pre>
       * Checksum computed by server
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder setChecksum(long value) {
        
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Checksum computed by server
       * </pre>
       *
       * <code>int64 checksum = 2;</code>
       */
      public Builder clearChecksum() {
        
        checksum_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object details_ = "";
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public java.lang.String getDetails() {
        java.lang.Object ref = details_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          details_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDetailsBytes() {
        java.lang.Object ref = details_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          details_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public Builder setDetails(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        details_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public Builder clearDetails() {
        
        details_ = getDefaultInstance().getDetails();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any other error details
       * </pre>
       *
       * <code>string details = 3;</code>
       */
      public Builder setDetailsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        details_ = value;
        onChanged();
        return this;
      }

      private boolean resend_ ;
      /**
       * <pre>
       * If set, client to should attempt to resend the file
       * </pre>
       *
       * <code>bool resend = 4;</code>
       */
      public boolean getResend() {
        return resend_;
      }
      /**
       * <pre>
       * If set, client to should attempt to resend the file
       * </pre>
       *
       * <code>bool resend = 4;</code>
       */
      public Builder setResend(boolean value) {
        
        resend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, client to should attempt to resend the file
       * </pre>
       *
       * <code>bool resend = 4;</code>
       */
      public Builder clearResend() {
        
        resend_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.AcquisitionResponse)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.AcquisitionResponse)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcquisitionResponse>
        PARSER = new com.google.protobuf.AbstractParser<AcquisitionResponse>() {
      @java.lang.Override
      public AcquisitionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AcquisitionResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcquisitionResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AcquisitionResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.AcquisitionResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SynchRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.SynchRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 seq_id = 1;</code>
     */
    long getSeqId();

    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    int getSubSeqId();
  }
  /**
   * Protobuf type {@code redvox_api1000.SynchRequest}
   */
  public  static final class SynchRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.SynchRequest)
      SynchRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SynchRequest.newBuilder() to construct.
    private SynchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SynchRequest() {
      seqId_ = 0L;
      subSeqId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SynchRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seqId_ = input.readUInt64();
              break;
            }
            case 16: {

              subSeqId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.Builder.class);
    }

    public static final int SEQ_ID_FIELD_NUMBER = 1;
    private long seqId_;
    /**
     * <code>uint64 seq_id = 1;</code>
     */
    public long getSeqId() {
      return seqId_;
    }

    public static final int SUB_SEQ_ID_FIELD_NUMBER = 2;
    private int subSeqId_;
    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    public int getSubSeqId() {
      return subSeqId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seqId_ != 0L) {
        output.writeUInt64(1, seqId_);
      }
      if (subSeqId_ != 0) {
        output.writeUInt32(2, subSeqId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seqId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, seqId_);
      }
      if (subSeqId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subSeqId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest other = (io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest) obj;

      boolean result = true;
      result = result && (getSeqId()
          == other.getSeqId());
      result = result && (getSubSeqId()
          == other.getSubSeqId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeqId());
      hash = (37 * hash) + SUB_SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSubSeqId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code redvox_api1000.SynchRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.SynchRequest)
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqId_ = 0L;

        subSeqId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchRequest_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest build() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest result = new io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest(this);
        result.seqId_ = seqId_;
        result.subSeqId_ = subSeqId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest.getDefaultInstance()) return this;
        if (other.getSeqId() != 0L) {
          setSeqId(other.getSeqId());
        }
        if (other.getSubSeqId() != 0) {
          setSubSeqId(other.getSubSeqId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long seqId_ ;
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public long getSeqId() {
        return seqId_;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder setSeqId(long value) {
        
        seqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder clearSeqId() {
        
        seqId_ = 0L;
        onChanged();
        return this;
      }

      private int subSeqId_ ;
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public int getSubSeqId() {
        return subSeqId_;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder setSubSeqId(int value) {
        
        subSeqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder clearSubSeqId() {
        
        subSeqId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.SynchRequest)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.SynchRequest)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SynchRequest>
        PARSER = new com.google.protobuf.AbstractParser<SynchRequest>() {
      @java.lang.Override
      public SynchRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SynchRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SynchRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SynchRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.SynchRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SynchResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:redvox_api1000.SynchResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 seq_id = 1;</code>
     */
    long getSeqId();

    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    int getSubSeqId();

    /**
     * <code>uint64 recv_ts_us = 3;</code>
     */
    long getRecvTsUs();

    /**
     * <code>uint64 send_ts_us = 4;</code>
     */
    long getSendTsUs();
  }
  /**
   * Protobuf type {@code redvox_api1000.SynchResponse}
   */
  public  static final class SynchResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:redvox_api1000.SynchResponse)
      SynchResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SynchResponse.newBuilder() to construct.
    private SynchResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SynchResponse() {
      seqId_ = 0L;
      subSeqId_ = 0;
      recvTsUs_ = 0L;
      sendTsUs_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SynchResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seqId_ = input.readUInt64();
              break;
            }
            case 16: {

              subSeqId_ = input.readUInt32();
              break;
            }
            case 24: {

              recvTsUs_ = input.readUInt64();
              break;
            }
            case 32: {

              sendTsUs_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.Builder.class);
    }

    public static final int SEQ_ID_FIELD_NUMBER = 1;
    private long seqId_;
    /**
     * <code>uint64 seq_id = 1;</code>
     */
    public long getSeqId() {
      return seqId_;
    }

    public static final int SUB_SEQ_ID_FIELD_NUMBER = 2;
    private int subSeqId_;
    /**
     * <code>uint32 sub_seq_id = 2;</code>
     */
    public int getSubSeqId() {
      return subSeqId_;
    }

    public static final int RECV_TS_US_FIELD_NUMBER = 3;
    private long recvTsUs_;
    /**
     * <code>uint64 recv_ts_us = 3;</code>
     */
    public long getRecvTsUs() {
      return recvTsUs_;
    }

    public static final int SEND_TS_US_FIELD_NUMBER = 4;
    private long sendTsUs_;
    /**
     * <code>uint64 send_ts_us = 4;</code>
     */
    public long getSendTsUs() {
      return sendTsUs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seqId_ != 0L) {
        output.writeUInt64(1, seqId_);
      }
      if (subSeqId_ != 0) {
        output.writeUInt32(2, subSeqId_);
      }
      if (recvTsUs_ != 0L) {
        output.writeUInt64(3, recvTsUs_);
      }
      if (sendTsUs_ != 0L) {
        output.writeUInt64(4, sendTsUs_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seqId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, seqId_);
      }
      if (subSeqId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subSeqId_);
      }
      if (recvTsUs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, recvTsUs_);
      }
      if (sendTsUs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, sendTsUs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse)) {
        return super.equals(obj);
      }
      io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse other = (io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse) obj;

      boolean result = true;
      result = result && (getSeqId()
          == other.getSeqId());
      result = result && (getSubSeqId()
          == other.getSubSeqId());
      result = result && (getRecvTsUs()
          == other.getRecvTsUs());
      result = result && (getSendTsUs()
          == other.getSendTsUs());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeqId());
      hash = (37 * hash) + SUB_SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSubSeqId();
      hash = (37 * hash) + RECV_TS_US_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecvTsUs());
      hash = (37 * hash) + SEND_TS_US_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSendTsUs());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code redvox_api1000.SynchResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:redvox_api1000.SynchResponse)
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.class, io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.Builder.class);
      }

      // Construct using io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seqId_ = 0L;

        subSeqId_ = 0;

        recvTsUs_ = 0L;

        sendTsUs_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.internal_static_redvox_api1000_SynchResponse_descriptor;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse getDefaultInstanceForType() {
        return io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse build() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse buildPartial() {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse result = new io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse(this);
        result.seqId_ = seqId_;
        result.subSeqId_ = subSeqId_;
        result.recvTsUs_ = recvTsUs_;
        result.sendTsUs_ = sendTsUs_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse) {
          return mergeFrom((io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse other) {
        if (other == io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse.getDefaultInstance()) return this;
        if (other.getSeqId() != 0L) {
          setSeqId(other.getSeqId());
        }
        if (other.getSubSeqId() != 0) {
          setSubSeqId(other.getSubSeqId());
        }
        if (other.getRecvTsUs() != 0L) {
          setRecvTsUs(other.getRecvTsUs());
        }
        if (other.getSendTsUs() != 0L) {
          setSendTsUs(other.getSendTsUs());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long seqId_ ;
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public long getSeqId() {
        return seqId_;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder setSeqId(long value) {
        
        seqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 seq_id = 1;</code>
       */
      public Builder clearSeqId() {
        
        seqId_ = 0L;
        onChanged();
        return this;
      }

      private int subSeqId_ ;
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public int getSubSeqId() {
        return subSeqId_;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder setSubSeqId(int value) {
        
        subSeqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sub_seq_id = 2;</code>
       */
      public Builder clearSubSeqId() {
        
        subSeqId_ = 0;
        onChanged();
        return this;
      }

      private long recvTsUs_ ;
      /**
       * <code>uint64 recv_ts_us = 3;</code>
       */
      public long getRecvTsUs() {
        return recvTsUs_;
      }
      /**
       * <code>uint64 recv_ts_us = 3;</code>
       */
      public Builder setRecvTsUs(long value) {
        
        recvTsUs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 recv_ts_us = 3;</code>
       */
      public Builder clearRecvTsUs() {
        
        recvTsUs_ = 0L;
        onChanged();
        return this;
      }

      private long sendTsUs_ ;
      /**
       * <code>uint64 send_ts_us = 4;</code>
       */
      public long getSendTsUs() {
        return sendTsUs_;
      }
      /**
       * <code>uint64 send_ts_us = 4;</code>
       */
      public Builder setSendTsUs(long value) {
        
        sendTsUs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 send_ts_us = 4;</code>
       */
      public Builder clearSendTsUs() {
        
        sendTsUs_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:redvox_api1000.SynchResponse)
    }

    // @@protoc_insertion_point(class_scope:redvox_api1000.SynchResponse)
    private static final io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse();
    }

    public static io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SynchResponse>
        PARSER = new com.google.protobuf.AbstractParser<SynchResponse>() {
      @java.lang.Override
      public SynchResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SynchResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SynchResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SynchResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.redvox.redvox_api1000.RedvoxApi1000.SynchResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_Payload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_Payload_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_Payload_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_EncryptedRedvoxPacket1000_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_AcquisitionRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_AcquisitionResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_SynchRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_SynchRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_redvox_api1000_SynchResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_redvox_api1000_SynchResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(src/redvox_api1000/redvox_api_1000.pro" +
      "to\022\016redvox_api1000\"\232E\n\020RedvoxPacket1000\022" +
      "\013\n\003api\030\001 \001(\001\022J\n\020user_information\030\002 \001(\01320" +
      ".redvox_api1000.RedvoxPacket1000.UserInf" +
      "ormation\022P\n\023station_information\030\003 \001(\01323." +
      "redvox_api1000.RedvoxPacket1000.StationI" +
      "nformation\022N\n\022packet_information\030\004 \001(\01322" +
      ".redvox_api1000.RedvoxPacket1000.PacketI" +
      "nformation\022N\n\022timing_information\030\005 \001(\01322" +
      ".redvox_api1000.RedvoxPacket1000.TimingI" +
      "nformation\022N\n\022server_information\030\006 \001(\01322" +
      ".redvox_api1000.RedvoxPacket1000.ServerI" +
      "nformation\022H\n\017sensor_channels\030\007 \001(\0132/.re" +
      "dvox_api1000.RedvoxPacket1000.SensorChan" +
      "nels\022@\n\010metadata\030\010 \003(\0132..redvox_api1000." +
      "RedvoxPacket1000.MetadataEntry\032/\n\rMetada" +
      "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032" +
      "\324\001\n\017UserInformation\022\022\n\nauth_email\030\001 \001(\t\022" +
      "\022\n\nauth_token\030\002 \001(\t\022\026\n\016firebase_token\030\003 " +
      "\001(\t\022P\n\010metadata\030\004 \003(\0132>.redvox_api1000.R" +
      "edvoxPacket1000.UserInformation.Metadata" +
      "Entry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v" +
      "alue\030\002 \001(\t:\0028\001\032\311\022\n\022StationInformation\022\n\n" +
      "\002id\030\001 \001(\t\022\014\n\004uuid\030\002 \001(\t\022\014\n\004make\030\003 \001(\t\022\r\n" +
      "\005model\030\004 \001(\t\022F\n\002os\030\005 \001(\0162:.redvox_api100" +
      "0.RedvoxPacket1000.StationInformation.Os" +
      "Type\022\022\n\nos_version\030\006 \001(\t\022\023\n\013app_version\030" +
      "\007 \001(\t\022U\n\014app_settings\030\010 \001(\0132?.redvox_api" +
      "1000.RedvoxPacket1000.StationInformation" +
      ".AppSettings\022U\n\014network_type\030\t \001(\0162?.red" +
      "vox_api1000.RedvoxPacket1000.StationInfo" +
      "rmation.NetworkType\022P\n\036station_informati" +
      "on_timestamps\030\n \001(\0132(.redvox_api1000.Red" +
      "voxPacket1000.Payload\022B\n\020network_strengt" +
      "h\030\013 \001(\0132(.redvox_api1000.RedvoxPacket100" +
      "0.Payload\022=\n\013temperature\030\014 \001(\0132(.redvox_" +
      "api1000.RedvoxPacket1000.Payload\0229\n\007batt" +
      "ery\030\r \001(\0132(.redvox_api1000.RedvoxPacket1" +
      "000.Payload\022?\n\ravailable_ram\030\016 \001(\0132(.red" +
      "vox_api1000.RedvoxPacket1000.Payload\022@\n\016" +
      "available_disk\030\017 \001(\0132(.redvox_api1000.Re" +
      "dvoxPacket1000.Payload\022A\n\017cpu_utilizatio" +
      "n\030\020 \001(\0132(.redvox_api1000.RedvoxPacket100" +
      "0.Payload\022S\n\010metadata\030\021 \003(\0132A.redvox_api" +
      "1000.RedvoxPacket1000.StationInformation" +
      ".MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\227\n\n\013AppSettings\022" +
      "q\n\026audio_sampling_rate_hz\030\001 \001(\0162Q.redvox" +
      "_api1000.RedvoxPacket1000.StationInforma" +
      "tion.AppSettings.AudioSamplingRate\022n\n\023au" +
      "dio_source_tuning\030\002 \001(\0162Q.redvox_api1000" +
      ".RedvoxPacket1000.StationInformation.App" +
      "Settings.AudioSourceTuning\022m\n\030additional" +
      "_input_sensors\030\003 \003(\0162K.redvox_api1000.Re" +
      "dvoxPacket1000.StationInformation.AppSet" +
      "tings.InputSensor\022\034\n\024automatically_recor" +
      "d\030\004 \001(\010\022\032\n\022launch_at_power_up\030\005 \001(\010\022\021\n\tr" +
      "edvox_id\030\006 \001(\t\022\026\n\016push_to_server\030\007 \001(\010\022\037" +
      "\n\027publish_data_as_private\030\010 \001(\010\022\033\n\023scram" +
      "ble_voice_data\030\t \001(\010\022\030\n\020provide_backfill" +
      "\030\n \001(\010\022#\n\033use_custom_time_sync_server\030\013 " +
      "\001(\010\022\034\n\024time_sync_server_url\030\014 \001(\t\022\036\n\026use" +
      "_custom_data_server\030\r \001(\010\022\027\n\017data_server" +
      "_url\030\016 \001(\t\022\036\n\026auto_delete_data_files\030\017 \001" +
      "(\010\022\037\n\027storage_space_allowance\030\020 \001(\001\022$\n\034u" +
      "se_sd_card_for_data_storage\030\021 \001(\010\022\035\n\025use" +
      "_location_services\030\022 \001(\010\022\024\n\014use_latitude" +
      "\030\023 \001(\001\022\025\n\ruse_longitude\030\024 \001(\001\022_\n\010metadat" +
      "a\030\025 \003(\0132M.redvox_api1000.RedvoxPacket100" +
      "0.StationInformation.AppSettings.Metadat" +
      "aEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005" +
      "value\030\002 \001(\t:\0028\001\"S\n\021AudioSamplingRate\022\t\n\005" +
      "HZ_80\020\000\022\n\n\006HZ_800\020\001\022\013\n\007HZ_8000\020\002\022\014\n\010HZ_1" +
      "6000\020\003\022\014\n\010HZ_48000\020\004\"=\n\021AudioSourceTunin" +
      "g\022\016\n\nINFRASOUND\020\000\022\r\n\tLOW_AUDIO\020\001\022\t\n\005AUDI" +
      "O\020\002\"\243\001\n\013InputSensor\022\r\n\tBAROMETER\020\000\022\021\n\rAC" +
      "CELEROMETER\020\001\022\026\n\022ACCELEROMETER_FAST\020\002\022\020\n" +
      "\014MAGNETOMETER\020\003\022\025\n\021MAGNETOMETER_FAST\020\004\022\r" +
      "\n\tGYROSCOPE\020\005\022\022\n\016GYROSCOPE_FAST\020\006\022\016\n\nLUM" +
      "INOSITY\020\007\"/\n\013NetworkType\022\010\n\004WIFI\020\000\022\014\n\010CE" +
      "LLULAR\020\001\022\010\n\004NONE\020\002\"6\n\006OsType\022\013\n\007ANDROID\020" +
      "\000\022\007\n\003IOS\020\001\022\t\n\005LINUX\020\002\022\013\n\007WINDOWS\020\003\032\303\001\n\021P" +
      "acketInformation\022\025\n\ris_backfilled\030\001 \001(\010\022" +
      "\022\n\nis_private\030\002 \001(\010\022R\n\010metadata\030\003 \003(\0132@." +
      "redvox_api1000.RedvoxPacket1000.PacketIn" +
      "formation.MetadataEntry\032/\n\rMetadataEntry" +
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\321\006\n\021Tim" +
      "ingInformation\022!\n\031packet_start_os_timest" +
      "amp\030\001 \001(\001\022#\n\033packet_start_mach_timestamp" +
      "\030\002 \001(\001\022\037\n\027packet_end_os_timestamp\030\003 \001(\001\022" +
      "!\n\031packet_end_mach_timestamp\030\004 \001(\001\022,\n$se" +
      "rver_acquisition_arrival_timestamp\030\005 \001(\001" +
      "\022 \n\030app_start_mach_timestamp\030\006 \001(\001\022Y\n\017sy" +
      "nch_exchanges\030\007 \003(\0132@.redvox_api1000.Red" +
      "voxPacket1000.TimingInformation.SynchExc" +
      "hange\022\024\n\014best_latency\030\010 \001(\001\022\023\n\013best_offs" +
      "et\030\t \001(\001\0223\n\004unit\030\n \001(\0162%.redvox_api1000." +
      "RedvoxPacket1000.Unit\022R\n\010metadata\030\013 \003(\0132" +
      "@.redvox_api1000.RedvoxPacket1000.Timing" +
      "Information.MetadataEntry\032/\n\rMetadataEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\237\002\n\rS" +
      "ynchExchange\022\n\n\002a1\030\001 \001(\001\022\n\n\002a2\030\002 \001(\001\022\n\n\002" +
      "a3\030\003 \001(\001\022\n\n\002b1\030\004 \001(\001\022\n\n\002b2\030\005 \001(\001\022\n\n\002b3\030\006" +
      " \001(\001\0223\n\004unit\030\007 \001(\0162%.redvox_api1000.Redv" +
      "oxPacket1000.Unit\022`\n\010metadata\030\010 \003(\0132N.re" +
      "dvox_api1000.RedvoxPacket1000.TimingInfo" +
      "rmation.SynchExchange.MetadataEntry\032/\n\rM" +
      "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t" +
      ":\0028\001\032\353\001\n\021ServerInformation\022\027\n\017auth_serve" +
      "r_url\030\001 \001(\t\022\030\n\020synch_server_url\030\002 \001(\t\022\036\n" +
      "\026acquisition_server_url\030\003 \001(\t\022R\n\010metadat" +
      "a\030\004 \003(\0132@.redvox_api1000.RedvoxPacket100" +
      "0.ServerInformation.MetadataEntry\032/\n\rMet" +
      "adataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002" +
      "8\001\032\305\033\n\016SensorChannels\022S\n\raudio_channel\030\001" +
      " \001(\0132<.redvox_api1000.RedvoxPacket1000.S" +
      "ensorChannels.AudioChannel\022X\n\021barometer_" +
      "channel\030\002 \001(\0132=.redvox_api1000.RedvoxPac" +
      "ket1000.SensorChannels.SingleChannel\022Y\n\020" +
      "location_channel\030\003 \001(\0132?.redvox_api1000." +
      "RedvoxPacket1000.SensorChannels.Location" +
      "Channel\022Y\n\025accelerometer_channel\030\004 \001(\0132:" +
      ".redvox_api1000.RedvoxPacket1000.SensorC" +
      "hannels.XyzChannel\022U\n\021gyroscope_channel\030" +
      "\005 \001(\0132:.redvox_api1000.RedvoxPacket1000." +
      "SensorChannels.XyzChannel\022X\n\024magnetomete" +
      "r_channel\030\006 \001(\0132:.redvox_api1000.RedvoxP" +
      "acket1000.SensorChannels.XyzChannel\022T\n\rl" +
      "ight_channel\030\007 \001(\0132=.redvox_api1000.Redv" +
      "oxPacket1000.SensorChannels.SingleChanne" +
      "l\022W\n\020infrared_channel\030\010 \001(\0132=.redvox_api" +
      "1000.RedvoxPacket1000.SensorChannels.Sin" +
      "gleChannel\022S\n\rimage_channel\030\t \001(\0132<.redv" +
      "ox_api1000.RedvoxPacket1000.SensorChanne" +
      "ls.ImageChannel\022O\n\010metadata\030\n \003(\0132=.redv" +
      "ox_api1000.RedvoxPacket1000.SensorChanne" +
      "ls.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\302\002\n\014AudioChann" +
      "el\022\032\n\022sensor_description\030\001 \001(\t\022\036\n\026first_" +
      "sample_timestamp\030\002 \001(\001\022\026\n\016sample_rate_hz" +
      "\030\003 \001(\001\022\024\n\014is_scrambled\030\004 \001(\010\0229\n\007samples\030" +
      "\005 \001(\0132(.redvox_api1000.RedvoxPacket1000." +
      "Payload\022\\\n\010metadata\030\006 \003(\0132J.redvox_api10" +
      "00.RedvoxPacket1000.SensorChannels.Audio" +
      "Channel.MetadataEntry\032/\n\rMetadataEntry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\264\002\n\rSingl" +
      "eChannel\022\032\n\022sensor_description\030\001 \001(\t\022<\n\n" +
      "timestamps\030\002 \001(\0132(.redvox_api1000.Redvox" +
      "Packet1000.Payload\0229\n\007samples\030\003 \001(\0132(.re" +
      "dvox_api1000.RedvoxPacket1000.Payload\022]\n" +
      "\010metadata\030\004 \003(\0132K.redvox_api1000.RedvoxP" +
      "acket1000.SensorChannels.SingleChannel.M" +
      "etadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001" +
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\231\t\n\017LocationChanne" +
      "l\022\032\n\022sensor_description\030\001 \001(\t\022<\n\ntimesta" +
      "mps\030\002 \001(\0132(.redvox_api1000.RedvoxPacket1" +
      "000.Payload\022B\n\020latitude_samples\030\003 \001(\0132(." +
      "redvox_api1000.RedvoxPacket1000.Payload\022" +
      "C\n\021longitude_samples\030\004 \001(\0132(.redvox_api1" +
      "000.RedvoxPacket1000.Payload\022B\n\020altitude" +
      "_samples\030\005 \001(\0132(.redvox_api1000.RedvoxPa" +
      "cket1000.Payload\022?\n\rspeed_samples\030\006 \001(\0132" +
      "(.redvox_api1000.RedvoxPacket1000.Payloa" +
      "d\022A\n\017bearing_samples\030\007 \001(\0132(.redvox_api1" +
      "000.RedvoxPacket1000.Payload\022M\n\033horizont" +
      "al_accuracy_samples\030\010 \001(\0132(.redvox_api10" +
      "00.RedvoxPacket1000.Payload\022K\n\031vertical_" +
      "accuracy_samples\030\t \001(\0132(.redvox_api1000." +
      "RedvoxPacket1000.Payload\022H\n\026speed_accura" +
      "cy_samples\030\n \001(\0132(.redvox_api1000.Redvox" +
      "Packet1000.Payload\022J\n\030bearing_accuracy_s" +
      "amples\030\013 \001(\0132(.redvox_api1000.RedvoxPack" +
      "et1000.Payload\022$\n\034location_permissions_g" +
      "ranted\030\014 \001(\010\022#\n\033location_services_reques" +
      "ted\030\r \001(\010\022!\n\031location_services_enabled\030\016" +
      " \001(\010\022k\n\021location_provider\030\017 \001(\0162P.redvox" +
      "_api1000.RedvoxPacket1000.SensorChannels" +
      ".LocationChannel.LocationProvider\022_\n\010met" +
      "adata\030\032 \003(\0132M.redvox_api1000.RedvoxPacke" +
      "t1000.SensorChannels.LocationChannel.Met" +
      "adataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"<\n\020LocationProvider\022" +
      "\010\n\004NONE\020\000\022\010\n\004USER\020\001\022\007\n\003GPS\020\002\022\013\n\007NETWORK\020" +
      "\003\032\252\003\n\nXyzChannel\022\032\n\022sensor_description\030\001" +
      " \001(\t\022<\n\ntimestamps\030\002 \001(\0132(.redvox_api100" +
      "0.RedvoxPacket1000.Payload\022;\n\tx_samples\030" +
      "\004 \001(\0132(.redvox_api1000.RedvoxPacket1000." +
      "Payload\022;\n\ty_samples\030\005 \001(\0132(.redvox_api1" +
      "000.RedvoxPacket1000.Payload\022;\n\tz_sample" +
      "s\030\006 \001(\0132(.redvox_api1000.RedvoxPacket100" +
      "0.Payload\022Z\n\010metadata\030\013 \003(\0132H.redvox_api" +
      "1000.RedvoxPacket1000.SensorChannels.Xyz" +
      "Channel.MetadataEntry\032/\n\rMetadataEntry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\321\002\n\014Image" +
      "Channel\022\032\n\022sensor_description\030\001 \001(\t\022\033\n\023m" +
      "ean_sample_rate_hz\030\002 \001(\001\022\024\n\014sample_ts_us" +
      "\030\003 \003(\001\022\017\n\007samples\030\004 \003(\014\022R\n\026sample_rate_s" +
      "tatistics\030\005 \001(\01322.redvox_api1000.RedvoxP" +
      "acket1000.SummaryStatistics\022\\\n\010metadata\030" +
      "\006 \003(\0132J.redvox_api1000.RedvoxPacket1000." +
      "SensorChannels.ImageChannel.MetadataEntr" +
      "y\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value" +
      "\030\002 \001(\t:\0028\001\032\227\002\n\007Payload\0223\n\004unit\030\001 \001(\0162%.r" +
      "edvox_api1000.RedvoxPacket1000.Unit\022\016\n\006v" +
      "alues\030\002 \003(\001\022L\n\020value_statistics\030\003 \001(\01322." +
      "redvox_api1000.RedvoxPacket1000.SummaryS" +
      "tatistics\022H\n\010metadata\030\004 \003(\01326.redvox_api" +
      "1000.RedvoxPacket1000.Payload.MetadataEn" +
      "try\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
      "ue\030\002 \001(\t:\0028\001\032\216\002\n\021SummaryStatistics\022\r\n\005co" +
      "unt\030\001 \001(\001\022\014\n\004mean\030\002 \001(\001\022\016\n\006median\030\003 \001(\001\022" +
      "\014\n\004mode\030\004 \001(\001\022\020\n\010variance\030\005 \001(\001\022\013\n\003min\030\006" +
      " \001(\001\022\013\n\003max\030\007 \001(\001\022\r\n\005range\030\010 \001(\001\022R\n\010meta" +
      "data\030\t \003(\0132@.redvox_api1000.RedvoxPacket" +
      "1000.SummaryStatistics.MetadataEntry\032/\n\r" +
      "MetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(" +
      "\t:\0028\001\"\217\002\n\004Unit\022\035\n\031METERS_PER_SECOND_SQUA" +
      "RED\020\000\022\016\n\nKILOPASCAL\020\001\022\026\n\022RADIANS_PER_SEC" +
      "OND\020\002\022\023\n\017DECIMAL_DEGREES\020\003\022\n\n\006METERS\020\004\022\025" +
      "\n\021METERS_PER_SECOND\020\005\022\016\n\nMICROTESLA\020\006\022\031\n" +
      "\025LSB_PLUS_MINUS_COUNTS\020\007\022!\n\035MICROSECONDS" +
      "_SINCE_UNIX_EPOCH\020\010\022\013\n\007DECIBEL\020\t\022\023\n\017DEGR" +
      "EES_CELSIUS\020\n\022\010\n\004BYTE\020\013\022\016\n\nPERCENTAGE\020\014\"" +
      "\227\001\n\031EncryptedRedvoxPacket1000\022\016\n\006header\030" +
      "\001 \001(\014\022\016\n\006packet\030\002 \001(\014\032Z\n\006Header\022\022\n\nstati" +
      "on_id\030\001 \001(\t\022\024\n\014station_uuid\030\002 \001(\t\022\022\n\naut" +
      "h_token\030\003 \001(\t\022\022\n\nauth_email\030\004 \001(\t\"M\n\022Acq" +
      "uisitionRequest\022%\n\035compressed_redvox_pac" +
      "ket_1000\030\001 \001(\014\022\020\n\010checksum\030\002 \001(\003\"\332\001\n\023Acq" +
      "uisitionResponse\022G\n\rresponse_type\030\001 \001(\0162" +
      "0.redvox_api1000.AcquisitionResponse.Res" +
      "ponseType\022\020\n\010checksum\030\002 \001(\003\022\017\n\007details\030\003" +
      " \001(\t\022\016\n\006resend\030\004 \001(\010\"G\n\014ResponseType\022\006\n\002" +
      "OK\020\000\022\016\n\nAUTH_ERROR\020\001\022\016\n\nDATA_ERROR\020\002\022\017\n\013" +
      "OTHER_ERROR\020\003\"2\n\014SynchRequest\022\016\n\006seq_id\030" +
      "\001 \001(\004\022\022\n\nsub_seq_id\030\002 \001(\r\"[\n\rSynchRespon" +
      "se\022\016\n\006seq_id\030\001 \001(\004\022\022\n\nsub_seq_id\030\002 \001(\r\022\022" +
      "\n\nrecv_ts_us\030\003 \001(\004\022\022\n\nsend_ts_us\030\004 \001(\004B\032" +
      "\n\030io.redvox.redvox_api1000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_redvox_api1000_RedvoxPacket1000_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_descriptor,
        new java.lang.String[] { "Api", "UserInformation", "StationInformation", "PacketInformation", "TimingInformation", "ServerInformation", "SensorChannels", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor,
        new java.lang.String[] { "AuthEmail", "AuthToken", "FirebaseToken", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_UserInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(2);
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor,
        new java.lang.String[] { "Id", "Uuid", "Make", "Model", "Os", "OsVersion", "AppVersion", "AppSettings", "NetworkType", "StationInformationTimestamps", "NetworkStrength", "Temperature", "Battery", "AvailableRam", "AvailableDisk", "CpuUtilization", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor,
        new java.lang.String[] { "AudioSamplingRateHz", "AudioSourceTuning", "AdditionalInputSensors", "AutomaticallyRecord", "LaunchAtPowerUp", "RedvoxId", "PushToServer", "PublishDataAsPrivate", "ScrambleVoiceData", "ProvideBackfill", "UseCustomTimeSyncServer", "TimeSyncServerUrl", "UseCustomDataServer", "DataServerUrl", "AutoDeleteDataFiles", "StorageSpaceAllowance", "UseSdCardForDataStorage", "UseLocationServices", "UseLatitude", "UseLongitude", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_StationInformation_AppSettings_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(3);
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor,
        new java.lang.String[] { "IsBackfilled", "IsPrivate", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_PacketInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(4);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor,
        new java.lang.String[] { "PacketStartOsTimestamp", "PacketStartMachTimestamp", "PacketEndOsTimestamp", "PacketEndMachTimestamp", "ServerAcquisitionArrivalTimestamp", "AppStartMachTimestamp", "SynchExchanges", "BestLatency", "BestOffset", "Unit", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor,
        new java.lang.String[] { "A1", "A2", "A3", "B1", "B2", "B3", "Unit", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_TimingInformation_SynchExchange_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(5);
    internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor,
        new java.lang.String[] { "AuthServerUrl", "SynchServerUrl", "AcquisitionServerUrl", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_ServerInformation_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(6);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor,
        new java.lang.String[] { "AudioChannel", "BarometerChannel", "LocationChannel", "AccelerometerChannel", "GyroscopeChannel", "MagnetometerChannel", "LightChannel", "InfraredChannel", "ImageChannel", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(1);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "FirstSampleTimestamp", "SampleRateHz", "IsScrambled", "Samples", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_AudioChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(2);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "Timestamps", "Samples", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_SingleChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(3);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "Timestamps", "LatitudeSamples", "LongitudeSamples", "AltitudeSamples", "SpeedSamples", "BearingSamples", "HorizontalAccuracySamples", "VerticalAccuracySamples", "SpeedAccuracySamples", "BearingAccuracySamples", "LocationPermissionsGranted", "LocationServicesRequested", "LocationServicesEnabled", "LocationProvider", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_LocationChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(4);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "Timestamps", "XSamples", "YSamples", "ZSamples", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_XyzChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_descriptor.getNestedTypes().get(5);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor,
        new java.lang.String[] { "SensorDescription", "MeanSampleRateHz", "SampleTsUs", "Samples", "SampleRateStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SensorChannels_ImageChannel_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(7);
    internal_static_redvox_api1000_RedvoxPacket1000_Payload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor,
        new java.lang.String[] { "Unit", "Values", "ValueStatistics", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_Payload_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_Payload_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_Payload_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_Payload_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_descriptor.getNestedTypes().get(8);
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor,
        new java.lang.String[] { "Count", "Mean", "Median", "Mode", "Variance", "Min", "Max", "Range", "Metadata", });
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor =
      internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_RedvoxPacket1000_SummaryStatistics_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_redvox_api1000_EncryptedRedvoxPacket1000_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor,
        new java.lang.String[] { "Header", "Packet", });
    internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_descriptor =
      internal_static_redvox_api1000_EncryptedRedvoxPacket1000_descriptor.getNestedTypes().get(0);
    internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_EncryptedRedvoxPacket1000_Header_descriptor,
        new java.lang.String[] { "StationId", "StationUuid", "AuthToken", "AuthEmail", });
    internal_static_redvox_api1000_AcquisitionRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_redvox_api1000_AcquisitionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_AcquisitionRequest_descriptor,
        new java.lang.String[] { "CompressedRedvoxPacket1000", "Checksum", });
    internal_static_redvox_api1000_AcquisitionResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_redvox_api1000_AcquisitionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_AcquisitionResponse_descriptor,
        new java.lang.String[] { "ResponseType", "Checksum", "Details", "Resend", });
    internal_static_redvox_api1000_SynchRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_redvox_api1000_SynchRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_SynchRequest_descriptor,
        new java.lang.String[] { "SeqId", "SubSeqId", });
    internal_static_redvox_api1000_SynchResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_redvox_api1000_SynchResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_redvox_api1000_SynchResponse_descriptor,
        new java.lang.String[] { "SeqId", "SubSeqId", "RecvTsUs", "SendTsUs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
