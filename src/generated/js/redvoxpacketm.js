// source: src/redvox_api_m/redvox_api_m.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.redvox_api_m.RedvoxPacketM');
goog.provide('proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload');
goog.provide('proto.redvox_api_m.RedvoxPacketM.EventStream');
goog.provide('proto.redvox_api_m.RedvoxPacketM.EventStream.Event');
goog.provide('proto.redvox_api_m.RedvoxPacketM.SamplePayload');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Audio');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.AudioCodec');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Image');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Image.ImageCodec');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Location');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.LocationScoreMethod');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Single');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSamplingRate');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSourceTuning');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.FftOverlap');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.OsType');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState');
goog.provide('proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock');
goog.provide('proto.redvox_api_m.RedvoxPacketM.SummaryStatistics');
goog.provide('proto.redvox_api_m.RedvoxPacketM.TimingInformation');
goog.provide('proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange');
goog.provide('proto.redvox_api_m.RedvoxPacketM.TimingInformation.TimingScoreMethod');
goog.provide('proto.redvox_api_m.RedvoxPacketM.TimingPayload');
goog.provide('proto.redvox_api_m.RedvoxPacketM.Unit');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.displayName = 'proto.redvox_api_m.RedvoxPacketM';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.StationInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.StationInformation.displayName = 'proto.redvox_api_m.RedvoxPacketM.StationInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.displayName = 'proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.displayName = 'proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.displayName = 'proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.TimingInformation.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.TimingInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.TimingInformation.displayName = 'proto.redvox_api_m.RedvoxPacketM.TimingInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.displayName = 'proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Audio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Audio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Single, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Single.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Single';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Location.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.Sensors.Image.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.Sensors.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.Sensors.Image.displayName = 'proto.redvox_api_m.RedvoxPacketM.Sensors.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.EventStream = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.EventStream.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.EventStream, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.EventStream.displayName = 'proto.redvox_api_m.RedvoxPacketM.EventStream';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.EventStream.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.EventStream.Event.displayName = 'proto.redvox_api_m.RedvoxPacketM.EventStream.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.SamplePayload.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.SamplePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.SamplePayload.displayName = 'proto.redvox_api_m.RedvoxPacketM.SamplePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.displayName = 'proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.redvox_api_m.RedvoxPacketM.TimingPayload.repeatedFields_, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.TimingPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.TimingPayload.displayName = 'proto.redvox_api_m.RedvoxPacketM.TimingPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.redvox_api_m.RedvoxPacketM.SummaryStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.displayName = 'proto.redvox_api_m.RedvoxPacketM.SummaryStatistics';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.toObject = function(includeInstance, msg) {
  var f, obj = {
    api: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    subApi: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stationInformation: (f = msg.getStationInformation()) && proto.redvox_api_m.RedvoxPacketM.StationInformation.toObject(includeInstance, f),
    timingInformation: (f = msg.getTimingInformation()) && proto.redvox_api_m.RedvoxPacketM.TimingInformation.toObject(includeInstance, f),
    sensors: (f = msg.getSensors()) && proto.redvox_api_m.RedvoxPacketM.Sensors.toObject(includeInstance, f),
    eventStreamsList: jspb.Message.toObjectList(msg.getEventStreamsList(),
    proto.redvox_api_m.RedvoxPacketM.EventStream.toObject, includeInstance),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM}
 */
proto.redvox_api_m.RedvoxPacketM.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM;
  return proto.redvox_api_m.RedvoxPacketM.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM}
 */
proto.redvox_api_m.RedvoxPacketM.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setApi(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSubApi(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.StationInformation;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.StationInformation.deserializeBinaryFromReader);
      msg.setStationInformation(value);
      break;
    case 4:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingInformation;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingInformation.deserializeBinaryFromReader);
      msg.setTimingInformation(value);
      break;
    case 5:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.deserializeBinaryFromReader);
      msg.setSensors(value);
      break;
    case 6:
      var value = new proto.redvox_api_m.RedvoxPacketM.EventStream;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.EventStream.deserializeBinaryFromReader);
      msg.addEventStreams(value);
      break;
    case 7:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getSubApi();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getStationInformation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.StationInformation.serializeBinaryToWriter
    );
  }
  f = message.getTimingInformation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingInformation.serializeBinaryToWriter
    );
  }
  f = message.getSensors();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.serializeBinaryToWriter
    );
  }
  f = message.getEventStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.redvox_api_m.RedvoxPacketM.EventStream.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.Unit = {
  UNKNOWN: 0,
  METERS_PER_SECOND_SQUARED: 1,
  KILOPASCAL: 2,
  RADIANS_PER_SECOND: 3,
  DECIMAL_DEGREES: 4,
  METERS: 5,
  METERS_PER_SECOND: 6,
  MICROTESLA: 7,
  LSB_PLUS_MINUS_COUNTS: 8,
  MICROSECONDS_SINCE_UNIX_EPOCH: 9,
  DECIBEL: 10,
  DEGREES_CELSIUS: 11,
  BYTE: 12,
  PERCENTAGE: 13,
  RADIANS: 14,
  MICROAMPERES: 15,
  CENTIMETERS: 16,
  NORMALIZED_COUNTS: 17,
  LUX: 18,
  UNITLESS: 19,
  PCM: 20
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    authId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    make: jspb.Message.getFieldWithDefault(msg, 5, ""),
    model: jspb.Message.getFieldWithDefault(msg, 6, ""),
    os: jspb.Message.getFieldWithDefault(msg, 7, 0),
    osVersion: jspb.Message.getFieldWithDefault(msg, 8, ""),
    appVersion: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isPrivate: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    appSettings: (f = msg.getAppSettings()) && proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.toObject(includeInstance, f),
    stationMetrics: (f = msg.getStationMetrics()) && proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.toObject(includeInstance, f),
    serviceUrls: (f = msg.getServiceUrls()) && proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.StationInformation;
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMake(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 7:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.OsType} */ (reader.readEnum());
      msg.setOs(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsVersion(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppVersion(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPrivate(value);
      break;
    case 11:
      var value = new proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.deserializeBinaryFromReader);
      msg.setAppSettings(value);
      break;
    case 12:
      var value = new proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.deserializeBinaryFromReader);
      msg.setStationMetrics(value);
      break;
    case 13:
      var value = new proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.deserializeBinaryFromReader);
      msg.setServiceUrls(value);
      break;
    case 14:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.StationInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAuthId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMake();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOs();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getOsVersion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAppVersion();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsPrivate();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getAppSettings();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.serializeBinaryToWriter
    );
  }
  f = message.getStationMetrics();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.serializeBinaryToWriter
    );
  }
  f = message.getServiceUrls();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.OsType = {
  UNKNOWN_OS: 0,
  ANDROID: 1,
  IOS: 2,
  OSX: 3,
  LINUX: 4,
  WINDOWS: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.toObject = function(includeInstance, msg) {
  var f, obj = {
    authServer: jspb.Message.getFieldWithDefault(msg, 1, ""),
    synchServer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    acquisitionServer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls;
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthServer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSynchServer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcquisitionServer(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthServer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSynchServer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAcquisitionServer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string auth_server = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.getAuthServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.setAuthServer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string synch_server = 2;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.getSynchServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.setSynchServer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string acquisition_server = 3;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.getAcquisitionServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.setAcquisitionServer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.repeatedFields_ = [2,3,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamps: (f = msg.getTimestamps()) && proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(includeInstance, f),
    networkTypeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    cellServiceStateList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    networkStrength: (f = msg.getNetworkStrength()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    temperature: (f = msg.getTemperature()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    battery: (f = msg.getBattery()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    batteryCurrent: (f = msg.getBatteryCurrent()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    availableRam: (f = msg.getAvailableRam()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    availableDisk: (f = msg.getAvailableDisk()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    cpuUtilization: (f = msg.getCpuUtilization()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    powerStateList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    wifiWakeLockList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics;
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType>} */ (reader.readPackedEnum());
      msg.setNetworkTypeList(value);
      break;
    case 3:
      var value = /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState>} */ (reader.readPackedEnum());
      msg.setCellServiceStateList(value);
      break;
    case 4:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setNetworkStrength(value);
      break;
    case 5:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setTemperature(value);
      break;
    case 6:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setBattery(value);
      break;
    case 7:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setBatteryCurrent(value);
      break;
    case 8:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setAvailableRam(value);
      break;
    case 9:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setAvailableDisk(value);
      break;
    case 10:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setCpuUtilization(value);
      break;
    case 11:
      var value = /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState>} */ (reader.readPackedEnum());
      msg.setPowerStateList(value);
      break;
    case 12:
      var value = /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock>} */ (reader.readPackedEnum());
      msg.setWifiWakeLockList(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter
    );
  }
  f = message.getNetworkTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getCellServiceStateList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getNetworkStrength();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getTemperature();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getBattery();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getBatteryCurrent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getAvailableRam();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getAvailableDisk();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getCpuUtilization();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getPowerStateList();
  if (f.length > 0) {
    writer.writePackedEnum(
      11,
      f
    );
  }
  f = message.getWifiWakeLockList();
  if (f.length > 0) {
    writer.writePackedEnum(
      12,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType = {
  UNKNOWN_NETWORK: 0,
  NO_NETWORK: 1,
  WIFI: 2,
  CELLULAR: 3,
  WIRED: 4
};

/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock = {
  NONE: 0,
  HIGH_PERF: 1,
  LOW_LATENCY: 2,
  OTHER: 3
};

/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState = {
  UNKNOWN: 0,
  EMERGENCY: 1,
  NOMINAL: 2,
  OUT_OF_SERVICE: 3,
  POWER_OFF: 4
};

/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState = {
  UNKNOWN_POWER_STATE: 0,
  UNPLUGGED: 1,
  CHARGING: 2,
  CHARGED: 3
};

/**
 * optional TimingPayload timestamps = 1;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getTimestamps = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingPayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingPayload, 1));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingPayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated NetworkType network_type = 2;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getNetworkTypeList = function() {
  return /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setNetworkTypeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.NetworkType} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.addNetworkType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearNetworkTypeList = function() {
  return this.setNetworkTypeList([]);
};


/**
 * repeated CellServiceState cell_service_state = 3;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getCellServiceStateList = function() {
  return /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setCellServiceStateList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.CellServiceState} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.addCellServiceState = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearCellServiceStateList = function() {
  return this.setCellServiceStateList([]);
};


/**
 * optional SamplePayload network_strength = 4;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getNetworkStrength = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 4));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setNetworkStrength = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearNetworkStrength = function() {
  return this.setNetworkStrength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasNetworkStrength = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SamplePayload temperature = 5;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getTemperature = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 5));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearTemperature = function() {
  return this.setTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasTemperature = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SamplePayload battery = 6;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getBattery = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 6));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setBattery = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearBattery = function() {
  return this.setBattery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasBattery = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SamplePayload battery_current = 7;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getBatteryCurrent = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 7));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setBatteryCurrent = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearBatteryCurrent = function() {
  return this.setBatteryCurrent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasBatteryCurrent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SamplePayload available_ram = 8;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getAvailableRam = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 8));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setAvailableRam = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearAvailableRam = function() {
  return this.setAvailableRam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasAvailableRam = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional SamplePayload available_disk = 9;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getAvailableDisk = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 9));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setAvailableDisk = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearAvailableDisk = function() {
  return this.setAvailableDisk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasAvailableDisk = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SamplePayload cpu_utilization = 10;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getCpuUtilization = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 10));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setCpuUtilization = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearCpuUtilization = function() {
  return this.setCpuUtilization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.hasCpuUtilization = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated PowerState power_state = 11;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getPowerStateList = function() {
  return /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setPowerStateList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.PowerState} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.addPowerState = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearPowerStateList = function() {
  return this.setPowerStateList([]);
};


/**
 * repeated WifiWakeLock wifi_wake_lock = 12;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getWifiWakeLockList = function() {
  return /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.setWifiWakeLockList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.WifiWakeLock} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.addWifiWakeLock = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearWifiWakeLockList = function() {
  return this.setWifiWakeLockList([]);
};


/**
 * map<string, string> metadata = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    audioSamplingRate: jspb.Message.getFieldWithDefault(msg, 1, 0),
    audioSourceTuning: jspb.Message.getFieldWithDefault(msg, 2, 0),
    additionalInputSensorsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    automaticallyRecord: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    launchAtPowerUp: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    stationId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    stationDescription: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pushToServer: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    publishDataAsPrivate: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    scrambleAudioData: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    provideBackfill: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    removeSensorDcOffset: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    fftOverlap: jspb.Message.getFieldWithDefault(msg, 13, 0),
    useCustomTimeSyncServer: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    timeSyncServerUrl: jspb.Message.getFieldWithDefault(msg, 15, ""),
    useCustomDataServer: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    dataServerUrl: jspb.Message.getFieldWithDefault(msg, 17, ""),
    useCustomAuthServer: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    authServerUrl: jspb.Message.getFieldWithDefault(msg, 19, ""),
    autoDeleteDataFiles: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    storageSpaceAllowance: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    useSdCardForDataStorage: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    useLocationServices: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    useLatitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 24, 0.0),
    useLongitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 25, 0.0),
    useAltitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 26, 0.0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings;
  return proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSamplingRate} */ (reader.readEnum());
      msg.setAudioSamplingRate(value);
      break;
    case 2:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSourceTuning} */ (reader.readEnum());
      msg.setAudioSourceTuning(value);
      break;
    case 3:
      var value = /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor>} */ (reader.readPackedEnum());
      msg.setAdditionalInputSensorsList(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutomaticallyRecord(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLaunchAtPowerUp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationDescription(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPushToServer(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublishDataAsPrivate(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScrambleAudioData(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProvideBackfill(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveSensorDcOffset(value);
      break;
    case 13:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.FftOverlap} */ (reader.readEnum());
      msg.setFftOverlap(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCustomTimeSyncServer(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeSyncServerUrl(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCustomDataServer(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataServerUrl(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCustomAuthServer(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthServerUrl(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoDeleteDataFiles(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStorageSpaceAllowance(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseSdCardForDataStorage(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseLocationServices(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUseLatitude(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUseLongitude(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUseAltitude(value);
      break;
    case 27:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAudioSamplingRate();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAudioSourceTuning();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAdditionalInputSensorsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getAutomaticallyRecord();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLaunchAtPowerUp();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getStationId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStationDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPushToServer();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getPublishDataAsPrivate();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getScrambleAudioData();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getProvideBackfill();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getRemoveSensorDcOffset();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getFftOverlap();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getUseCustomTimeSyncServer();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getTimeSyncServerUrl();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getUseCustomDataServer();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getDataServerUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getUseCustomAuthServer();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getAuthServerUrl();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getAutoDeleteDataFiles();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getStorageSpaceAllowance();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getUseSdCardForDataStorage();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getUseLocationServices();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getUseLatitude();
  if (f !== 0.0) {
    writer.writeFloat(
      24,
      f
    );
  }
  f = message.getUseLongitude();
  if (f !== 0.0) {
    writer.writeFloat(
      25,
      f
    );
  }
  f = message.getUseAltitude();
  if (f !== 0.0) {
    writer.writeFloat(
      26,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(27, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.FftOverlap = {
  UNKNOWN: 0,
  PERCENT_25: 1,
  PERCENT_50: 2,
  PERCENT_75: 3
};

/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSamplingRate = {
  UNKNOWN_SAMPLING_RATE: 0,
  HZ_80: 1,
  HZ_800: 2,
  HZ_8000: 3,
  HZ_16000: 4,
  HZ_48000: 5
};

/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSourceTuning = {
  UNKNOWN_TUNING: 0,
  INFRASOUND_TUNING: 1,
  LOW_AUDIO_TUNING: 2,
  AUDIO_TUNING: 3
};

/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor = {
  UNKNOWN_SENSOR: 0,
  ACCELEROMETER: 1,
  AMBIENT_TEMPERATURE: 2,
  AUDIO: 3,
  COMPRESSED_AUDIO: 4,
  GRAVITY: 5,
  GYROSCOPE: 6,
  IMAGE: 7,
  LIGHT: 8,
  LINEAR_ACCELERATION: 9,
  LOCATION: 10,
  MAGNETOMETER: 11,
  ORIENTATION: 12,
  PRESSURE: 13,
  PROXIMITY: 14,
  RELATIVE_HUMIDITY: 15,
  ROTATION_VECTOR: 16
};

/**
 * optional AudioSamplingRate audio_sampling_rate = 1;
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSamplingRate}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getAudioSamplingRate = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSamplingRate} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSamplingRate} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setAudioSamplingRate = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional AudioSourceTuning audio_source_tuning = 2;
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSourceTuning}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getAudioSourceTuning = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSourceTuning} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.AudioSourceTuning} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setAudioSourceTuning = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated InputSensor additional_input_sensors = 3;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getAdditionalInputSensorsList = function() {
  return /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setAdditionalInputSensorsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.InputSensor} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.addAdditionalInputSensors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.clearAdditionalInputSensorsList = function() {
  return this.setAdditionalInputSensorsList([]);
};


/**
 * optional bool automatically_record = 4;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getAutomaticallyRecord = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setAutomaticallyRecord = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool launch_at_power_up = 5;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getLaunchAtPowerUp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setLaunchAtPowerUp = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string station_id = 6;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getStationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setStationId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string station_description = 7;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getStationDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setStationDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool push_to_server = 8;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getPushToServer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setPushToServer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool publish_data_as_private = 9;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getPublishDataAsPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setPublishDataAsPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool scramble_audio_data = 10;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getScrambleAudioData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setScrambleAudioData = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool provide_backfill = 11;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getProvideBackfill = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setProvideBackfill = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool remove_sensor_dc_offset = 12;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getRemoveSensorDcOffset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setRemoveSensorDcOffset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional FftOverlap fft_overlap = 13;
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.FftOverlap}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getFftOverlap = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.FftOverlap} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.FftOverlap} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setFftOverlap = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional bool use_custom_time_sync_server = 14;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseCustomTimeSyncServer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseCustomTimeSyncServer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string time_sync_server_url = 15;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getTimeSyncServerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setTimeSyncServerUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool use_custom_data_server = 16;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseCustomDataServer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseCustomDataServer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string data_server_url = 17;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getDataServerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setDataServerUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional bool use_custom_auth_server = 18;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseCustomAuthServer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseCustomAuthServer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string auth_server_url = 19;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getAuthServerUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setAuthServerUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bool auto_delete_data_files = 20;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getAutoDeleteDataFiles = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setAutoDeleteDataFiles = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional float storage_space_allowance = 21;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getStorageSpaceAllowance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setStorageSpaceAllowance = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional bool use_sd_card_for_data_storage = 22;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseSdCardForDataStorage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseSdCardForDataStorage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool use_location_services = 23;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseLocationServices = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseLocationServices = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional float use_latitude = 24;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 24, value);
};


/**
 * optional float use_longitude = 25;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 25, value);
};


/**
 * optional float use_altitude = 26;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getUseAltitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.setUseAltitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 26, value);
};


/**
 * map<string, string> metadata = 27;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 27, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string auth_id = 4;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getAuthId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setAuthId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string make = 5;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getMake = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setMake = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string model = 6;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional OsType os = 7;
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation.OsType}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getOs = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.StationInformation.OsType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.StationInformation.OsType} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setOs = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string os_version = 8;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getOsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setOsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string app_version = 9;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getAppVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setAppVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool is_private = 10;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getIsPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setIsPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional AppSettings app_settings = 11;
 * @return {?proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getAppSettings = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings, 11));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.StationInformation.AppSettings|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setAppSettings = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.clearAppSettings = function() {
  return this.setAppSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.hasAppSettings = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional StationMetrics station_metrics = 12;
 * @return {?proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getStationMetrics = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics, 12));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.StationInformation.StationMetrics|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setStationMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.clearStationMetrics = function() {
  return this.setStationMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.hasStationMetrics = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ServiceUrls service_urls = 13;
 * @return {?proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getServiceUrls = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls, 13));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.StationInformation.ServiceUrls|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.setServiceUrls = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.clearServiceUrls = function() {
  return this.setServiceUrls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.hasServiceUrls = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * map<string, string> metadata = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.StationInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.StationInformation.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.TimingInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    packetStartOsTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    packetStartMachTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    packetEndOsTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    packetEndMachTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    serverAcquisitionArrivalTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    appStartMachTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    synchExchangesList: jspb.Message.toObjectList(msg.getSynchExchangesList(),
    proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.toObject, includeInstance),
    bestLatency: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    bestOffset: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    scoreMethod: jspb.Message.getFieldWithDefault(msg, 11, 0),
    unit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.TimingInformation;
  return proto.redvox_api_m.RedvoxPacketM.TimingInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPacketStartOsTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPacketStartMachTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPacketEndOsTimestamp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPacketEndMachTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServerAcquisitionArrivalTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAppStartMachTimestamp(value);
      break;
    case 7:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.deserializeBinaryFromReader);
      msg.addSynchExchanges(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBestLatency(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBestOffset(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 11:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.TimingScoreMethod} */ (reader.readEnum());
      msg.setScoreMethod(value);
      break;
    case 12:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.TimingInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPacketStartOsTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPacketStartMachTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getPacketEndOsTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPacketEndMachTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getServerAcquisitionArrivalTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAppStartMachTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSynchExchangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.serializeBinaryToWriter
    );
  }
  f = message.getBestLatency();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getBestOffset();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getScoreMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.TimingScoreMethod = {
  UNKNOWN: 0
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.toObject = function(includeInstance, msg) {
  var f, obj = {
    a1: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    a2: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    a3: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    b1: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    b2: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    b3: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    unit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange;
  return proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setA1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setA2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setA3(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setB1(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setB2(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setB3(value);
      break;
    case 7:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 8:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getA1();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getA2();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getA3();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getB1();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getB2();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getB3();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional double a1 = 1;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getA1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setA1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double a2 = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getA2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setA2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double a3 = 3;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getA3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setA3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double b1 = 4;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getB1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setB1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double b2 = 5;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getB2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setB2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double b3 = 6;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getB3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setB3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional Unit unit = 7;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.setUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * map<string, string> metadata = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional double packet_start_os_timestamp = 1;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getPacketStartOsTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setPacketStartOsTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double packet_start_mach_timestamp = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getPacketStartMachTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setPacketStartMachTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double packet_end_os_timestamp = 3;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getPacketEndOsTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setPacketEndOsTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double packet_end_mach_timestamp = 4;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getPacketEndMachTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setPacketEndMachTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double server_acquisition_arrival_timestamp = 5;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getServerAcquisitionArrivalTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setServerAcquisitionArrivalTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double app_start_mach_timestamp = 6;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getAppStartMachTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setAppStartMachTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated SynchExchange synch_exchanges = 7;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange>}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getSynchExchangesList = function() {
  return /** @type{!Array<!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange, 7));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setSynchExchangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.addSynchExchanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.redvox_api_m.RedvoxPacketM.TimingInformation.SynchExchange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.clearSynchExchangesList = function() {
  return this.setSynchExchangesList([]);
};


/**
 * optional float best_latency = 8;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getBestLatency = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setBestLatency = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float best_offset = 9;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getBestOffset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setBestOffset = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float score = 10;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional TimingScoreMethod score_method = 11;
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.TimingScoreMethod}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getScoreMethod = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.TimingScoreMethod} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingInformation.TimingScoreMethod} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setScoreMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Unit unit = 12;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.setUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * map<string, string> metadata = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingInformation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingInformation.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.toObject = function(includeInstance, msg) {
  var f, obj = {
    accelerometer: (f = msg.getAccelerometer()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    ambientTemperature: (f = msg.getAmbientTemperature()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject(includeInstance, f),
    audio: (f = msg.getAudio()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.toObject(includeInstance, f),
    compressedAudio: (f = msg.getCompressedAudio()) && proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.toObject(includeInstance, f),
    gravity: (f = msg.getGravity()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    gyroscope: (f = msg.getGyroscope()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    image: (f = msg.getImage()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Image.toObject(includeInstance, f),
    light: (f = msg.getLight()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject(includeInstance, f),
    linearAcceleration: (f = msg.getLinearAcceleration()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    location: (f = msg.getLocation()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.toObject(includeInstance, f),
    magnetometer: (f = msg.getMagnetometer()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    orientation: (f = msg.getOrientation()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    pressure: (f = msg.getPressure()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject(includeInstance, f),
    proximity: (f = msg.getProximity()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject(includeInstance, f),
    relativeHumidity: (f = msg.getRelativeHumidity()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject(includeInstance, f),
    rotationVector: (f = msg.getRotationVector()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setAccelerometer(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Single;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader);
      msg.setAmbientTemperature(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Audio;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.deserializeBinaryFromReader);
      msg.setAudio(value);
      break;
    case 4:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.deserializeBinaryFromReader);
      msg.setCompressedAudio(value);
      break;
    case 5:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setGravity(value);
      break;
    case 6:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setGyroscope(value);
      break;
    case 7:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Image;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 8:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Single;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader);
      msg.setLight(value);
      break;
    case 9:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setLinearAcceleration(value);
      break;
    case 10:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 11:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setMagnetometer(value);
      break;
    case 12:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setOrientation(value);
      break;
    case 13:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Single;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader);
      msg.setPressure(value);
      break;
    case 14:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Single;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader);
      msg.setProximity(value);
      break;
    case 15:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Single;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader);
      msg.setRelativeHumidity(value);
      break;
    case 16:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader);
      msg.setRotationVector(value);
      break;
    case 17:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccelerometer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getAmbientTemperature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter
    );
  }
  f = message.getAudio();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.serializeBinaryToWriter
    );
  }
  f = message.getCompressedAudio();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.serializeBinaryToWriter
    );
  }
  f = message.getGravity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getGyroscope();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Image.serializeBinaryToWriter
    );
  }
  f = message.getLight();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter
    );
  }
  f = message.getLinearAcceleration();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.serializeBinaryToWriter
    );
  }
  f = message.getMagnetometer();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getOrientation();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getPressure();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter
    );
  }
  f = message.getProximity();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter
    );
  }
  f = message.getRelativeHumidity();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter
    );
  }
  f = message.getRotationVector();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(17, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstSampleTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    sampleRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    bitsOfPrecision: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    isScrambled: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    encoding: jspb.Message.getFieldWithDefault(msg, 6, ""),
    samples: (f = msg.getSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Audio;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFirstSampleTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSampleRate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBitsOfPrecision(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsScrambled(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncoding(value);
      break;
    case 7:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setSamples(value);
      break;
    case 8:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstSampleTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSampleRate();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getBitsOfPrecision();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getIsScrambled();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getEncoding();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSamples();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setSensorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double first_sample_timestamp = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getFirstSampleTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setFirstSampleTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float sample_rate = 3;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setSampleRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float bits_of_precision = 4;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getBitsOfPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setBitsOfPrecision = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional bool is_scrambled = 5;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getIsScrambled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setIsScrambled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string encoding = 6;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getEncoding = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setEncoding = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional SamplePayload samples = 7;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 7));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.setSamples = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.clearSamples = function() {
  return this.setSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.hasSamples = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, string> metadata = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Audio.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstSampleTimestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    sampleRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    isScrambled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    audioBytes: msg.getAudioBytes_asB64(),
    audioCodec: jspb.Message.getFieldWithDefault(msg, 6, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFirstSampleTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSampleRate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsScrambled(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioBytes(value);
      break;
    case 6:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.AudioCodec} */ (reader.readEnum());
      msg.setAudioCodec(value);
      break;
    case 7:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstSampleTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSampleRate();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getIsScrambled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAudioBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getAudioCodec();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.AudioCodec = {
  UNKNOWN: 0,
  FLAC: 1
};

/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.setSensorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double first_sample_timestamp = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getFirstSampleTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.setFirstSampleTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float sample_rate = 3;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.setSampleRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool is_scrambled = 4;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getIsScrambled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.setIsScrambled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bytes audio_bytes = 5;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getAudioBytes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes audio_bytes = 5;
 * This is a type-conversion wrapper around `getAudioBytes()`
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getAudioBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioBytes()));
};


/**
 * optional bytes audio_bytes = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioBytes()`
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getAudioBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.setAudioBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional AudioCodec audio_codec = 6;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.AudioCodec}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getAudioCodec = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.AudioCodec} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.AudioCodec} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.setAudioCodec = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * map<string, string> metadata = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamps: (f = msg.getTimestamps()) && proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(includeInstance, f),
    samples: (f = msg.getSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Single;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setSamples(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter
    );
  }
  f = message.getSamples();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.setSensorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TimingPayload timestamps = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.getTimestamps = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingPayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingPayload, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingPayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SamplePayload samples = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.getSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.setSamples = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.clearSamples = function() {
  return this.setSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.hasSamples = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Single} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Single.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.repeatedFields_ = [24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamps: (f = msg.getTimestamps()) && proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(includeInstance, f),
    latitudeSamples: (f = msg.getLatitudeSamples()) && proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.toObject(includeInstance, f),
    longitudeSamples: (f = msg.getLongitudeSamples()) && proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.toObject(includeInstance, f),
    altitudeSamples: (f = msg.getAltitudeSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    speedSamples: (f = msg.getSpeedSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    bearingSamples: (f = msg.getBearingSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    horizontalAccuracySamples: (f = msg.getHorizontalAccuracySamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    verticalAccuracySamples: (f = msg.getVerticalAccuracySamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    speedAccuracySamples: (f = msg.getSpeedAccuracySamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    bearingAccuracySamples: (f = msg.getBearingAccuracySamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    packetBestLocation: (f = msg.getPacketBestLocation()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.toObject(includeInstance, f),
    lastBestLocation: (f = msg.getLastBestLocation()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.toObject(includeInstance, f),
    overallBestLocation: (f = msg.getOverallBestLocation()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.toObject(includeInstance, f),
    locationPermissionsGranted: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    locationServicesRequested: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    locationServicesEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    locationProviderList: (f = jspb.Message.getRepeatedField(msg, 24)) == null ? undefined : f,
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.deserializeBinaryFromReader);
      msg.setLatitudeSamples(value);
      break;
    case 4:
      var value = new proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.deserializeBinaryFromReader);
      msg.setLongitudeSamples(value);
      break;
    case 5:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setAltitudeSamples(value);
      break;
    case 6:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setSpeedSamples(value);
      break;
    case 7:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setBearingSamples(value);
      break;
    case 8:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setHorizontalAccuracySamples(value);
      break;
    case 9:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setVerticalAccuracySamples(value);
      break;
    case 10:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setSpeedAccuracySamples(value);
      break;
    case 11:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setBearingAccuracySamples(value);
      break;
    case 12:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.deserializeBinaryFromReader);
      msg.setPacketBestLocation(value);
      break;
    case 13:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.deserializeBinaryFromReader);
      msg.setLastBestLocation(value);
      break;
    case 14:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.deserializeBinaryFromReader);
      msg.setOverallBestLocation(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocationPermissionsGranted(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocationServicesRequested(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocationServicesEnabled(value);
      break;
    case 24:
      var value = /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider>} */ (reader.readPackedEnum());
      msg.setLocationProviderList(value);
      break;
    case 25:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter
    );
  }
  f = message.getLatitudeSamples();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getLongitudeSamples();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getAltitudeSamples();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getSpeedSamples();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getBearingSamples();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getHorizontalAccuracySamples();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getVerticalAccuracySamples();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getSpeedAccuracySamples();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getBearingAccuracySamples();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getPacketBestLocation();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.serializeBinaryToWriter
    );
  }
  f = message.getLastBestLocation();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.serializeBinaryToWriter
    );
  }
  f = message.getOverallBestLocation();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.serializeBinaryToWriter
    );
  }
  f = message.getLocationPermissionsGranted();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getLocationServicesRequested();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getLocationServicesEnabled();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getLocationProviderList();
  if (f.length > 0) {
    writer.writePackedEnum(
      24,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(25, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider = {
  UNKNOWN: 0,
  NONE: 1,
  USER: 2,
  GPS: 3,
  NETWORK: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitudeLongitudeTimestamp: (f = msg.getLatitudeLongitudeTimestamp()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.toObject(includeInstance, f),
    altitudeTimestamp: (f = msg.getAltitudeTimestamp()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.toObject(includeInstance, f),
    speedTimestamp: (f = msg.getSpeedTimestamp()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.toObject(includeInstance, f),
    bearingTimestamp: (f = msg.getBearingTimestamp()) && proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.toObject(includeInstance, f),
    latitudeLongitudeUnit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    altitudeUnit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    speedUnit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    bearingUnit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    verticalAccuracyUnit: jspb.Message.getFieldWithDefault(msg, 9, 0),
    horizontalAccuracyUnit: jspb.Message.getFieldWithDefault(msg, 10, 0),
    speedAccuracyUnit: jspb.Message.getFieldWithDefault(msg, 11, 0),
    bearingAccuracyUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    altitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    speed: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    bearing: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    verticalAccuracy: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    horizontalAccuracy: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    speedAccuracy: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    bearingAccuracy: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    method: jspb.Message.getFieldWithDefault(msg, 23, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinaryFromReader);
      msg.setLatitudeLongitudeTimestamp(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinaryFromReader);
      msg.setAltitudeTimestamp(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinaryFromReader);
      msg.setSpeedTimestamp(value);
      break;
    case 4:
      var value = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinaryFromReader);
      msg.setBearingTimestamp(value);
      break;
    case 5:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setLatitudeLongitudeUnit(value);
      break;
    case 6:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setAltitudeUnit(value);
      break;
    case 7:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setSpeedUnit(value);
      break;
    case 8:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setBearingUnit(value);
      break;
    case 9:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setVerticalAccuracyUnit(value);
      break;
    case 10:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setHorizontalAccuracyUnit(value);
      break;
    case 11:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setSpeedAccuracyUnit(value);
      break;
    case 12:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setBearingAccuracyUnit(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAltitude(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeed(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBearing(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVerticalAccuracy(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHorizontalAccuracy(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeedAccuracy(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBearingAccuracy(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 23:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.LocationScoreMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 24:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitudeLongitudeTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getAltitudeTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getSpeedTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getBearingTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getLatitudeLongitudeUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getAltitudeUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSpeedUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getBearingUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getVerticalAccuracyUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getHorizontalAccuracyUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getSpeedAccuracyUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getBearingAccuracyUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getAltitude();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getBearing();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getVerticalAccuracy();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getHorizontalAccuracy();
  if (f !== 0.0) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = message.getSpeedAccuracy();
  if (f !== 0.0) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = message.getBearingAccuracy();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      23,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(24, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.LocationScoreMethod = {
  UNKNOWN_METHOD: 0
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.toObject = function(includeInstance, msg) {
  var f, obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mach: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    gps: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMach(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGps(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMach();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getGps();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Unit unit = 1;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.getUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.setUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double mach = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.getMach = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.setMach = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double gps = 3;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.getGps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.setGps = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional BestTimestamp latitude_longitude_timestamp = 1;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getLatitudeLongitudeTimestamp = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp, 1));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setLatitudeLongitudeTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.clearLatitudeLongitudeTimestamp = function() {
  return this.setLatitudeLongitudeTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.hasLatitudeLongitudeTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BestTimestamp altitude_timestamp = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getAltitudeTimestamp = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setAltitudeTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.clearAltitudeTimestamp = function() {
  return this.setAltitudeTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.hasAltitudeTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BestTimestamp speed_timestamp = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getSpeedTimestamp = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setSpeedTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.clearSpeedTimestamp = function() {
  return this.setSpeedTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.hasSpeedTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BestTimestamp bearing_timestamp = 4;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getBearingTimestamp = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp, 4));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.BestTimestamp|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setBearingTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.clearBearingTimestamp = function() {
  return this.setBearingTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.hasBearingTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Unit latitude_longitude_unit = 5;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getLatitudeLongitudeUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setLatitudeLongitudeUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Unit altitude_unit = 6;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getAltitudeUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setAltitudeUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional Unit speed_unit = 7;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getSpeedUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setSpeedUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional Unit bearing_unit = 8;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getBearingUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setBearingUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Unit vertical_accuracy_unit = 9;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getVerticalAccuracyUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setVerticalAccuracyUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Unit horizontal_accuracy_unit = 10;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getHorizontalAccuracyUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setHorizontalAccuracyUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Unit speed_accuracy_unit = 11;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getSpeedAccuracyUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setSpeedAccuracyUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Unit bearing_accuracy_unit = 12;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getBearingAccuracyUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setBearingAccuracyUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional double latitude = 13;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double longitude = 14;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float altitude = 15;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getAltitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setAltitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float speed = 16;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float bearing = 17;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getBearing = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setBearing = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float vertical_accuracy = 18;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getVerticalAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setVerticalAccuracy = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional float horizontal_accuracy = 19;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getHorizontalAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setHorizontalAccuracy = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional float speed_accuracy = 20;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getSpeedAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setSpeedAccuracy = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional float bearing_accuracy = 21;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getBearingAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setBearingAccuracy = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float score = 22;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional LocationScoreMethod method = 23;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.LocationScoreMethod}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getMethod = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.LocationScoreMethod} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.LocationScoreMethod} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 23, value);
};


/**
 * map<string, string> metadata = 24;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 24, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setSensorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TimingPayload timestamps = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getTimestamps = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingPayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingPayload, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingPayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DoubleSamplePayload latitude_samples = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLatitudeSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLatitudeSamples = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearLatitudeSamples = function() {
  return this.setLatitudeSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasLatitudeSamples = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DoubleSamplePayload longitude_samples = 4;
 * @return {?proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLongitudeSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload, 4));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLongitudeSamples = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearLongitudeSamples = function() {
  return this.setLongitudeSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasLongitudeSamples = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SamplePayload altitude_samples = 5;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getAltitudeSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 5));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setAltitudeSamples = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearAltitudeSamples = function() {
  return this.setAltitudeSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasAltitudeSamples = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SamplePayload speed_samples = 6;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getSpeedSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 6));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setSpeedSamples = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearSpeedSamples = function() {
  return this.setSpeedSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasSpeedSamples = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SamplePayload bearing_samples = 7;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getBearingSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 7));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setBearingSamples = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearBearingSamples = function() {
  return this.setBearingSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasBearingSamples = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SamplePayload horizontal_accuracy_samples = 8;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getHorizontalAccuracySamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 8));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setHorizontalAccuracySamples = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearHorizontalAccuracySamples = function() {
  return this.setHorizontalAccuracySamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasHorizontalAccuracySamples = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional SamplePayload vertical_accuracy_samples = 9;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getVerticalAccuracySamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 9));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setVerticalAccuracySamples = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearVerticalAccuracySamples = function() {
  return this.setVerticalAccuracySamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasVerticalAccuracySamples = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SamplePayload speed_accuracy_samples = 10;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getSpeedAccuracySamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 10));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setSpeedAccuracySamples = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearSpeedAccuracySamples = function() {
  return this.setSpeedAccuracySamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasSpeedAccuracySamples = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SamplePayload bearing_accuracy_samples = 11;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getBearingAccuracySamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 11));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setBearingAccuracySamples = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearBearingAccuracySamples = function() {
  return this.setBearingAccuracySamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasBearingAccuracySamples = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional BestLocation packet_best_location = 12;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getPacketBestLocation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation, 12));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setPacketBestLocation = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearPacketBestLocation = function() {
  return this.setPacketBestLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasPacketBestLocation = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BestLocation last_best_location = 13;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLastBestLocation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation, 13));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLastBestLocation = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearLastBestLocation = function() {
  return this.setLastBestLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasLastBestLocation = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional BestLocation overall_best_location = 14;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getOverallBestLocation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation, 14));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location.BestLocation|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setOverallBestLocation = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearOverallBestLocation = function() {
  return this.setOverallBestLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.hasOverallBestLocation = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool location_permissions_granted = 21;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLocationPermissionsGranted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLocationPermissionsGranted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool location_services_requested = 22;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLocationServicesRequested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLocationServicesRequested = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool location_services_enabled = 23;
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLocationServicesEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLocationServicesEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * repeated LocationProvider location_provider = 24;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getLocationProviderList = function() {
  return /** @type {!Array<!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider>} */ (jspb.Message.getRepeatedField(this, 24));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.setLocationProviderList = function(value) {
  return jspb.Message.setField(this, 24, value || []);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location.LocationProvider} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.addLocationProvider = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 24, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearLocationProviderList = function() {
  return this.setLocationProviderList([]);
};


/**
 * map<string, string> metadata = 25;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 25, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Location} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Location.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamps: (f = msg.getTimestamps()) && proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(includeInstance, f),
    xSamples: (f = msg.getXSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    ySamples: (f = msg.getYSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    zSamples: (f = msg.getZSamples()) && proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setXSamples(value);
      break;
    case 4:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setYSamples(value);
      break;
    case 5:
      var value = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader);
      msg.setZSamples(value);
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter
    );
  }
  f = message.getXSamples();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getYSamples();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getZSamples();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.setSensorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TimingPayload timestamps = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.getTimestamps = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingPayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingPayload, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingPayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SamplePayload x_samples = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.getXSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.setXSamples = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.clearXSamples = function() {
  return this.setXSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.hasXSamples = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SamplePayload y_samples = 4;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.getYSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 4));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.setYSamples = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.clearYSamples = function() {
  return this.setYSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.hasYSamples = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SamplePayload z_samples = 5;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.getZSamples = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SamplePayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SamplePayload, 5));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SamplePayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.setZSamples = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.clearZSamples = function() {
  return this.setZSamples(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.hasZSamples = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensorDescription: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamps: (f = msg.getTimestamps()) && proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(includeInstance, f),
    samplesList: msg.getSamplesList_asB64(),
    imageCodec: jspb.Message.getFieldWithDefault(msg, 4, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.Sensors.Image;
  return proto.redvox_api_m.RedvoxPacketM.Sensors.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensorDescription(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSamples(value);
      break;
    case 4:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image.ImageCodec} */ (reader.readEnum());
      msg.setImageCodec(value);
      break;
    case 5:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.Sensors.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensorDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter
    );
  }
  f = message.getSamplesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getImageCodec();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.ImageCodec = {
  UNKNOWN: 0,
  PNG: 1,
  JPG: 2,
  BMP: 3
};

/**
 * optional string sensor_description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getSensorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.setSensorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TimingPayload timestamps = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getTimestamps = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingPayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingPayload, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingPayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated bytes samples = 3;
 * @return {!Array<string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getSamplesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes samples = 3;
 * This is a type-conversion wrapper around `getSamplesList()`
 * @return {!Array<string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getSamplesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSamplesList()));
};


/**
 * repeated bytes samples = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSamplesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getSamplesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSamplesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.setSamplesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.addSamples = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.clearSamplesList = function() {
  return this.setSamplesList([]);
};


/**
 * optional ImageCodec image_codec = 4;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image.ImageCodec}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getImageCodec = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image.ImageCodec} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image.ImageCodec} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.setImageCodec = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<string, string> metadata = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors.Image} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.Image.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional Xyz accelerometer = 1;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getAccelerometer = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 1));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setAccelerometer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearAccelerometer = function() {
  return this.setAccelerometer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasAccelerometer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Single ambient_temperature = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getAmbientTemperature = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Single} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Single, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setAmbientTemperature = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearAmbientTemperature = function() {
  return this.setAmbientTemperature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasAmbientTemperature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Audio audio = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Audio}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getAudio = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Audio} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Audio, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Audio|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setAudio = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearAudio = function() {
  return this.setAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasAudio = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CompressedAudio compressed_audio = 4;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getCompressedAudio = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio, 4));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.CompressedAudio|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setCompressedAudio = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearCompressedAudio = function() {
  return this.setCompressedAudio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasCompressedAudio = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Xyz gravity = 5;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getGravity = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 5));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setGravity = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearGravity = function() {
  return this.setGravity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasGravity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Xyz gyroscope = 6;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getGyroscope = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 6));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setGyroscope = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearGyroscope = function() {
  return this.setGyroscope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasGyroscope = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Image image = 7;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Image}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getImage = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Image} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Image, 7));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Image|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasImage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Single light = 8;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getLight = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Single} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Single, 8));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setLight = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearLight = function() {
  return this.setLight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasLight = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Xyz linear_acceleration = 9;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getLinearAcceleration = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 9));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setLinearAcceleration = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearLinearAcceleration = function() {
  return this.setLinearAcceleration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasLinearAcceleration = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Location location = 10;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getLocation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Location} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Location, 10));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Location|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Xyz magnetometer = 11;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getMagnetometer = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 11));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setMagnetometer = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearMagnetometer = function() {
  return this.setMagnetometer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasMagnetometer = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Xyz orientation = 12;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getOrientation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 12));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setOrientation = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearOrientation = function() {
  return this.setOrientation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasOrientation = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Single pressure = 13;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getPressure = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Single} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Single, 13));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setPressure = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearPressure = function() {
  return this.setPressure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasPressure = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Single proximity = 14;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getProximity = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Single} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Single, 14));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setProximity = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearProximity = function() {
  return this.setProximity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasProximity = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Single relative_humidity = 15;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getRelativeHumidity = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Single} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Single, 15));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Single|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setRelativeHumidity = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearRelativeHumidity = function() {
  return this.setRelativeHumidity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasRelativeHumidity = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Xyz rotation_vector = 16;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getRotationVector = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz, 16));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors.Xyz|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
*/
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.setRotationVector = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearRotationVector = function() {
  return this.setRotationVector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.hasRotationVector = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * map<string, string> metadata = 17;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 17, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.Sensors} returns this
 */
proto.redvox_api_m.RedvoxPacketM.Sensors.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.EventStream.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamps: (f = msg.getTimestamps()) && proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(includeInstance, f),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.redvox_api_m.RedvoxPacketM.EventStream.Event.toObject, includeInstance),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.EventStream;
  return proto.redvox_api_m.RedvoxPacketM.EventStream.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader);
      msg.setTimestamps(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.EventStream.Event;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.EventStream.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.EventStream.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamps();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.EventStream.Event.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.EventStream.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stringPayloadMap: (f = msg.getStringPayloadMap()) ? f.toObject(includeInstance, undefined) : [],
    numericPayloadMap: (f = msg.getNumericPayloadMap()) ? f.toObject(includeInstance, undefined) : [],
    booleanPayloadMap: (f = msg.getBooleanPayloadMap()) ? f.toObject(includeInstance, undefined) : [],
    bytePayloadMap: (f = msg.getBytePayloadMap()) ? f.toObject(includeInstance, undefined) : [],
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.EventStream.Event;
  return proto.redvox_api_m.RedvoxPacketM.EventStream.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = msg.getStringPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 3:
      var value = msg.getNumericPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readDouble, null, "", 0.0);
         });
      break;
    case 4:
      var value = msg.getBooleanPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    case 5:
      var value = msg.getBytePayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.EventStream.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStringPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getNumericPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeDouble);
  }
  f = message.getBooleanPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getBytePayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> string_payload = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.getStringPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.clearStringPayloadMap = function() {
  this.getStringPayloadMap().clear();
  return this;};


/**
 * map<string, double> numeric_payload = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.getNumericPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.clearNumericPayloadMap = function() {
  this.getNumericPayloadMap().clear();
  return this;};


/**
 * map<string, bool> boolean_payload = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.getBooleanPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.clearBooleanPayloadMap = function() {
  this.getBooleanPayloadMap().clear();
  return this;};


/**
 * map<string, bytes> byte_payload = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.getBytePayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.clearBytePayloadMap = function() {
  this.getBytePayloadMap().clear();
  return this;};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.Event.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TimingPayload timestamps = 2;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.getTimestamps = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingPayload} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingPayload, 2));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingPayload|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream} returns this
*/
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.setTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.clearTimestamps = function() {
  return this.setTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.hasTimestamps = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Event events = 3;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.EventStream.Event>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.redvox_api_m.RedvoxPacketM.EventStream.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.redvox_api_m.RedvoxPacketM.EventStream.Event, 3));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.EventStream.Event>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream} returns this
*/
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream.Event}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.redvox_api_m.RedvoxPacketM.EventStream.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream} returns this
 */
proto.redvox_api_m.RedvoxPacketM.EventStream.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    valueStatistics: (f = msg.getValueStatistics()) && proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.SamplePayload;
  return proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setValuesList(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.SummaryStatistics;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.deserializeBinaryFromReader);
      msg.setValueStatistics(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getValueStatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Unit unit = 1;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.getUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.setUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated float values = 2;
 * @return {!Array<number>}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional SummaryStatistics value_statistics = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.getValueStatistics = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SummaryStatistics, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
*/
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.setValueStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.clearValueStatistics = function() {
  return this.setValueStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.hasValueStatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SamplePayload.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    valueStatistics: (f = msg.getValueStatistics()) && proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload;
  return proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setValuesList(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.SummaryStatistics;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.deserializeBinaryFromReader);
      msg.setValueStatistics(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getValueStatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Unit unit = 1;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.getUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.setUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated double values = 2;
 * @return {!Array<number>}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional SummaryStatistics value_statistics = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.getValueStatistics = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SummaryStatistics, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
*/
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.setValueStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.clearValueStatistics = function() {
  return this.setValueStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.hasValueStatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.DoubleSamplePayload.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestampsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    timestampStatistics: (f = msg.getTimestampStatistics()) && proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.toObject(includeInstance, f),
    meanSampleRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    stdevSampleRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.TimingPayload;
  return proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setTimestampsList(value);
      break;
    case 3:
      var value = new proto.redvox_api_m.RedvoxPacketM.SummaryStatistics;
      reader.readMessage(value,proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.deserializeBinaryFromReader);
      msg.setTimestampStatistics(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMeanSampleRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStdevSampleRate(value);
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getTimestampStatistics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.serializeBinaryToWriter
    );
  }
  f = message.getMeanSampleRate();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getStdevSampleRate();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Unit unit = 1;
 * @return {!proto.redvox_api_m.RedvoxPacketM.Unit}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.getUnit = function() {
  return /** @type {!proto.redvox_api_m.RedvoxPacketM.Unit} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.Unit} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.setUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated double timestamps = 2;
 * @return {!Array<number>}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.getTimestampsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.setTimestampsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.addTimestamps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


/**
 * optional SummaryStatistics timestamp_statistics = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.getTimestampStatistics = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.SummaryStatistics, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.SummaryStatistics|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
*/
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.setTimestampStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.clearTimestampStatistics = function() {
  return this.setTimestampStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.hasTimestampStatistics = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float mean_sample_rate = 4;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.getMeanSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.setMeanSampleRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float stdev_sample_rate = 5;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.getStdevSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.setStdevSampleRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.TimingPayload} returns this
 */
proto.redvox_api_m.RedvoxPacketM.TimingPayload.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    mean: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    standardDeviation: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    min: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    max: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    range: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.redvox_api_m.RedvoxPacketM.SummaryStatistics;
  return proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMean(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStandardDeviation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRange(value);
      break;
    case 7:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getMean();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getStandardDeviation();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getMin();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMax();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getRange();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional float count = 1;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.setCount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float mean = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getMean = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.setMean = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float standard_deviation = 3;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getStandardDeviation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.setStandardDeviation = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float min = 4;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.setMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float max = 5;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.setMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float range = 6;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.setRange = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * map<string, string> metadata = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM.SummaryStatistics} returns this
 */
proto.redvox_api_m.RedvoxPacketM.SummaryStatistics.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional float api = 1;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getApi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.setApi = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float sub_api = 2;
 * @return {number}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getSubApi = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.setSubApi = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional StationInformation station_information = 3;
 * @return {?proto.redvox_api_m.RedvoxPacketM.StationInformation}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getStationInformation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.StationInformation} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.StationInformation, 3));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.StationInformation|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
*/
proto.redvox_api_m.RedvoxPacketM.prototype.setStationInformation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.clearStationInformation = function() {
  return this.setStationInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.hasStationInformation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TimingInformation timing_information = 4;
 * @return {?proto.redvox_api_m.RedvoxPacketM.TimingInformation}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getTimingInformation = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.TimingInformation} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.TimingInformation, 4));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.TimingInformation|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
*/
proto.redvox_api_m.RedvoxPacketM.prototype.setTimingInformation = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.clearTimingInformation = function() {
  return this.setTimingInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.hasTimingInformation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Sensors sensors = 5;
 * @return {?proto.redvox_api_m.RedvoxPacketM.Sensors}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getSensors = function() {
  return /** @type{?proto.redvox_api_m.RedvoxPacketM.Sensors} */ (
    jspb.Message.getWrapperField(this, proto.redvox_api_m.RedvoxPacketM.Sensors, 5));
};


/**
 * @param {?proto.redvox_api_m.RedvoxPacketM.Sensors|undefined} value
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
*/
proto.redvox_api_m.RedvoxPacketM.prototype.setSensors = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.clearSensors = function() {
  return this.setSensors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.hasSensors = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated EventStream event_streams = 6;
 * @return {!Array<!proto.redvox_api_m.RedvoxPacketM.EventStream>}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getEventStreamsList = function() {
  return /** @type{!Array<!proto.redvox_api_m.RedvoxPacketM.EventStream>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.redvox_api_m.RedvoxPacketM.EventStream, 6));
};


/**
 * @param {!Array<!proto.redvox_api_m.RedvoxPacketM.EventStream>} value
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
*/
proto.redvox_api_m.RedvoxPacketM.prototype.setEventStreamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.redvox_api_m.RedvoxPacketM.EventStream=} opt_value
 * @param {number=} opt_index
 * @return {!proto.redvox_api_m.RedvoxPacketM.EventStream}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.addEventStreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.redvox_api_m.RedvoxPacketM.EventStream, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.clearEventStreamsList = function() {
  return this.setEventStreamsList([]);
};


/**
 * map<string, string> metadata = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.redvox_api_m.RedvoxPacketM.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.redvox_api_m.RedvoxPacketM} returns this
 */
proto.redvox_api_m.RedvoxPacketM.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


